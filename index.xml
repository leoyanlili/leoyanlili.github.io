<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>捷伴行Agile</title>
    <link>https://www.agilewalker.com/</link>
    <description>Recent content on 捷伴行Agile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright 2023 捷伴行Agile</copyright>
    <lastBuildDate>Sun, 20 Nov 2022 14:57:14 +0000</lastBuildDate><atom:link href="https://www.agilewalker.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>038.打造用户喜爱的产品，离不开需求助推器|影响地图Impact Mapping</title>
      <link>https://www.agilewalker.com/038-impact-mapping/</link>
      <pubDate>Sun, 20 Nov 2022 14:57:14 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/038-impact-mapping/</guid>
      <description>把重点放在客户在工作中期望的变化，而非仅仅是客户要完成什么工作。
-Robert Brinkerhoff
开篇 今天要为你解读的这本书是《影响地图》，副标题叫做“让软件产生真正的影响力”。简单地说，这是一本帮助大家通过有效方法提升产品规划能力，实现客户业务价值交付的书。《大规模Scrum》的作者之一Craig Larman建议了本方法的最终命名“影响地图”，敏捷宣言的共同发起人Tom Poppendieck在本书前言中说“影响地图可视化地呈现了我们所面对的问题的四个方面：为什么（WHY），谁（WHO），怎么（HOW）和什么（WHAT）。就像公路地图显示城镇以及连接它们的道路一样，影响地图展示了我们要构建的东西，以及它们与人们使用方案解决的问题之间的连接。”。
根据调查数据，在软件开发领域，交付后的软件中功能的使用频率上符合2-8定律，即频繁使用的功能占20%，很少使用和从来不使用的功能占80%。在产品规划阶段，搞清楚客户或者用户的真正需求是什么非常重要，这样才能让最终做出来的产品功能真正被使用，产生价值。影响地图就是一个很好的规划工具和需求分析方法，它通过可视化和结构化的的形式，将业务目标和产品功能之间建立关联，确保实现的产品功能都是对客户有用，并帮助确定需求的优先级，为公司带来尽最大的收益。
记得以前有个经常被说到的刻舟求剑的寓言故事，说是从前有一个人，坐船过江的途中，不小心把一柄剑掉到江中，只见他不慌不忙在船身上用随身携带的刀刻了一个记号，旁边人问他为什么不现在去打捞剑，却在船上做记号？他很得意的说，船上做了记号就是为了标记剑掉下去的位置，等到了岸边在下水打捞也不晚。听到这里，我想大家都笑了。这个故事包含着两层道理。一层是，人的思想认识如果不符合客观实际，就不会把事情做成功。另一层是，客观实际是不断发展变化的，如果把陈规旧章当成解决新问题的法宝，也要闹笑话。这是朴素的辩证唯物主义思想。
影响地图作为路线图或高级计划应该像导航软件一样工作（如百度地图）。首先，它会给我们指路，预测不同车型的行驶时间和行驶距离。假如一条道路关闭了，它会重新计算新的路线，给出替代方案，调整其计划并显示给用户。这才是现代的计划，根据目标不断调整，并展示效果。
本书作者Gojko Adzic，他的另一本书《实例化需求》获得了2012年Jolt奖的最佳图书，他的博客获得了2010年英国敏捷奖的最佳在线出版物。作为一名顾问，Gojko专注于敏捷和精益质量改进，特别是影响地图、敏捷测试、实例化需求和行为驱动开发。2012年，Gojko Adzic发明了影响地图方法，从而帮助团队将开发过程中的步骤与业务目标保持一致。
影响地图是一种可视化的，轻量级的，协作的产品规划方法。影响地图帮助交付团队和利益干系人可视化路线图，解释可交付成果如何与用户需求相关联，并沟通用户需求与更高层次的组织目标之间的联系。
该技术结合了思维导图和战略规划，让团队明确为了实现目标他们应该努力投入的方向。团队利用影响地图来分析假设，与组织的目标保持一致，并专注在有助于实现组织目标的事情上，避免所有其它不必要的活动。今天，我们就分四个部分来为你进行详细解读本书内容：
第一，什么是影响地图？
第二，为什么要用影响地图？
第三，谁应该用影响地图？
第四，如何制作一张影响地图？
1.什么是影响地图 与故事地图和思维导图相似，影响地图是一种用于产品特性识别和优先级排序的可视化方法。它通过识别相关的参与者，说明从主要目标到特定功能的路径，如何帮助实现预期的目标，以及完成这些期望的操作需要什么功能。 影响地图由高级技术和业务人员共同创建，它是在通过回答以下四个问题的讨论中而完善的一种思维导图。
第一个问题：为什么？定义目标，也是最重要的一个问题，回答：做事的目的。帮助团队更好地协调行动、识别真实的需求和设计更好的方案。目标不应该是关于构建产品或交付项目范围，它们应该说明为什么做这些事是有用的。目标应该表达要解决的问题，而非解决方案。
第二个问题：谁？定义角色，回答：谁能产生需要的效果？谁会阻碍它？谁是我们产品的消费者或用户？谁会被它影响？也就是那些会影响结果的角色。吉拉德·温伯格把价值定义为“交付给某些人的价值”。为了高质量地交付价值，我们首先要理解的是：这些人是谁，他们想从我们的产品或项目中得到什么。除了考虑从软件中直接获益的人，我们还要考虑其它能做出影响产品成功或项目结果决定的人。
第三个问题：怎样？定义影响，回答：角色的行为是怎样改变的？他们怎样帮助我们达成目标？他们如何帮助或妨碍我们取得成功？交付成功的关键在于理解客户想要做什么，而不是他们对于产品和服务的想法。这会帮助交付组织调查不同的技术选型，探索不同的解决方案，从而达成好的结果。影响不是产品功能，是业务活动而不是关于软件的想法。
第四个问题：什么？定义交付物，回答：作为一个交付组织，我们可以做什么来保证影响的实现？包含：交付内容、软件功能和组织的活动。交付计划和需求文档通常包含功能列表，却不包含这些功能为什么重要的背景。大型的组织中，项目利益相关人众多，最终的范围常常包含个人偏爱的功能，常常导致需求蔓延。影响地图把交付内容都放在它们希望达成的影响之下，清晰的层次结构方便我们对交付内容分组和比较，避免在相对不重要的角色、影响以及功能上投入过多。通过连接交付内容、影响以及目标，影响地图告诉我们之所以要做某个功能的因果链。
说完了什么是影响地图，以及它回答的四个关键问题，让我们在接下来的第二部分中看下为什么要用影响地图，它能为我们解决哪些问题呢？
2.为什么要用影响地图 一个完整的影响图可以用于多种目的。对于管理团队，可以说明业务影响并提供一个清晰设定的目标。有了清晰的目标，执行团队就有信心确定功能的优先级，并消除与主要目标无关的资源分配；对于产品开发，交付成果都直接与目标联系在一起，可以防止任何不会直接有助于成功的功能或范围蔓延；对于战略客户，影响地图也可以用作解释目标优先级决策的工具。
影响地图从三个方面架起了目标计划和迭代计划之间的桥梁：
在战略规划方面，影响地图是调动业务和技术专家共同参与的有效方法，他们从业务而不是技术视角达成对项目范围的一致理解。
在质量定义方面，影响地图让组织在整个交付过程中保持专注，帮助我们定义与改进并保证质量相关的活动，确定其优先级。它从整体上定义了对软件质量的一致期望。
在里程碑管理方面，交付的目的是达成业务目标，而不是预先定义的产品范围，通过频繁、迭代地发布，以反映利益相关各方对进展的一致认同。
影响地图除了在以上几个主要方面能够帮助我们，作者还在书中阐述了更多影响地图的作用：
在快速变化的环境，比如软件交付中，影响地图允许我们维护一个随着我们的交付和学习过程而改变的动态里程碑，瞄准目标，并让功能和范围附属于目标。通过在业务目标和交付内容之间建立映射，影响地图着重于约束并行的业务目标的数量和我们试图达到的影响，这与精益开发方法中限制在制品数量的思想是统一的。
设定可度量的目标能帮助我们更快地发现不切实际的期望，影响地图帮助我们寻找更简单的方案，分析出不能带领我们走向目的地的方案。
不仅软件开发中需要敏捷，业务获取中更需要敏捷。影响地图能让业务和技术专家澄清业务目标，并为业务方和技术交付团队提供了整体视图。进展汇报可以是已经实现了哪些影响或者是接下来从业务角度我们计划重点投入哪里。它让我们可以按照计划支持的影响而不是软件功能，来做出承诺，为项目干系人提供承诺，同时保持执行上的灵活性。影响地图把交付内容分解，从而推动迭代交付。
影响地图按照“对角色行为的影响”来获取业务方的需求。我们只需关注当前最重要的角色影响，等到开始工作于某个影响时，我们再启动这部分的需求。每个用户故事都要在地图上找到自己的位置，我们需要努力思考通过用户故事要达成什么目标，这样就能更好地表述它。
影响地图可以很好的组织发散和收敛思维，捕获选项，让我们可以讨论这些选项。在发散阶段，团队产生可供探索的选项；在收敛阶段，团队决定哪些选项值得进一步深入。
影响地图帮助高级技术人员和业务方一起在白板上画出地图，从可视化的会议中获益，它让规划会议变得高效很多。在实践中，影响地图的结构可用于引导有效的讨论，把不同的角色组织到一起，成为一个拥有共同目标的小组。
很多组织都把IT当着成本对待，交付团队汇报是基于开发的时间和人力投入，他们更关注成本，而不是交付带来的成果和收益。影响地图可视化了交付内容和影响，并且把它们和业务目标连接起来。通过关注业务目标，辅以有效的度量，这样我们就可以通过问“它的价值有多少？你愿意投入多少？什么时间需要？”来回应成本和时间的问题。
影响地图告诉我们一旦目标实现之后，就不需要继续投入相关工作，可以转移到其它重点领域。影响地图拒绝不贡献任何有促成影响或目标的功能；影响地图清晰地展示了假设，以便于我们跟踪和验证它们；影响地图帮助利益相关人在功能和收益之间建立更好的关联，从而更好地决定优先级。影响地图可以帮助团队通过构建产品和交付项目来产生实质影响，而非仅仅发布软件而已。
说完了为什么要使用影响地图，让我们在接下来的第三部分中看下谁应该使用影响地图，在哪些场景下使用呢？
3.谁应该使用影响地图 前面也说了，影响地图可以被用于多种不同的目的。根据我们想要实现的结果，需要在不同的时间让不同的群体参与进来。下面将要说到的是关于谁应该参加影响地图的会议以及主要场景。
设定愿景。影响地图是为新产品里程碑设定愿景的好方法。常见情况是，当交付组织与外部客户合作时，或当组织想要聘请第三方交付机构时，并准备一份工作说明或征求建议书。在这种情况下，准备影响地图的通常方法是让主要利益相关人参与协作研讨会。会前可以通过提供业务目标草案来为研讨会做准备，让利益相关者在研讨会期间完善和改变目标，专注于讨论影响。然后交付团队成员参加第二个研讨会，以提出与所选影响相匹配的交付物的建议。
专注交付。当某项计划有很多目标，而且多个利益相关人的优先事项冲突时，影响图有助于对组织内优先事项的共同理解，使用影响地图来专注交付的常见场景是有大量工作涵盖不同的目标，当正在进行的计划有大量积压的大故事难以确定优先级的时候，或者当团队不知道什么时候该叫停不会成功的工作。为了专注交付，利益相关者和交付团队共同创建影响地图是很重要的。利益相关者和交付团队成员从目标开始，将讨论重点放在影响和高层面的可交付成果上。
重塑问题。当交付计划的目标不明确或没有得到分享时，影响图有助于让利益相关者通过重新定义问题就方向达成一致。组织为此目的使用影响图的典型场景是可能是某个人掌握着复杂的业务知识，项目停滞或不再交付价值，或者在大型项目开始的时候没有明确目标。在这种情况下，影响地图应仅包含高层面的可交付成果，而不要包含太多细节。
正如作者所说，本书面向的主要读者是负责产品开发或软件交付的高级人员，他们可以来自业务方，也可以来自交付方，包含业务发起人以及拥有这些职责的人，产品拥有者、项目总负责、产品线管理、产品架构、业务分析、质量改进和保障，以及产品交付。作者的大多数经验在迭代交付模式上，所以从这个视角来写作，如果你的工作环境与作者经验类似，那么收获也会更大。
对软件项目中的业务人员：可以学会如何更好地沟通业务设想。 对高级产品和项目发起人：可以学会如何更高效地与交付团队沟通假设，怎么让交付团队更积极参与做出好的决策，以及如何高效地管理项目组合。 对应用敏捷、精益方法或精益创业思想的团队：可以学会如何让交付更有重点，并让业务方和用户更好地参与交付过程。 对向敏捷或精益方法转型的团队：将了解应对规模化精益和敏捷实施常见问题的方法，比如创建整体视图，把工作细分为具备业务价值、并可以汇报有意义的进展的工作项。 影响地图是为产品负责人、业务发起人和与交付团队一起工作的高级技术负责人准备的，他们可以集中精力、重新定义现有的方案或者为一个新的想法沟通一个愿景。
目前为止，已经和大家分享了影响地图的主要的方法论，最后再让我们从第四部分中了解实际工作中如何与团队共创影响地图吧。
4.如何制作一张影响地图 想要发挥影响地图的最大功效，就要与高级技术和业务人员一起工作。当一组人从不同视角来解决同一问题时，我们也就在发挥集体智慧。建议最好计划两次会议：第一次是定义预期的业务目标；第二次来制作一张地图。
第一次会议（准备） 步骤一：发现真实目标
让小组确定出可能的目标并将其写到白板上面，这样就可以讨论和对比。确保大家对项目或里程碑交付的目标数量达成一致。作者建议我们还可以问：“为什么这个功能很重要”或者“它如何才能有用”。要不断地提问，直到引出与钱相关的话题。Chris Matts认为要彻底弄明白如何省钱、赚钱或者保护钱。
步骤二：定义优秀的度量
在画影响地图时，即使团队已经确定了业务目标，还要讨论如何度量它们，使目标其更具体。注意，要度量那些有价值的内容，而不是那些容易跟踪的。作者在书中引用Tom Gilb在其著作《竞争工程》中对如何为目标建立精确度量提出了很多优秀建议。
步骤三：计划首个里程碑
有了目标和度量方法，就要要让业务人员统一意见，选择放入现有里程碑的目标。可以用点数投票或虚拟货币法，能为优先级设定提供指导。采用敏捷迭代交付的团队应当每次处理一个目标。因为当完成一个关键目标后，情况也可能会发生变化。
第二次会议（制作） 步骤一：画出地图框架
将第一个里程碑放在整个图中间位置，然后将它与一些关键的高层次的交付物相连。角色、影响和交付物三要素的初始集合，可以引导大家的思维过程。注意，开始只需列出一些关键功能来引导进一步的讨论。作者建议我们需要反复问自己：这个功能对这个影响有贡献吗？这个影响对这个角色有效吗？这个影响对实现目标真的有用吗？</description>
    </item>
    
    <item>
      <title>「视频」运维自动化之Ansible入门</title>
      <link>https://www.agilewalker.com/video_ansible_entry/</link>
      <pubDate>Sat, 23 Apr 2022 12:10:41 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/video_ansible_entry/</guid>
      <description>[https://player.youku.com/embed/XNTg2NzEzNjYyNA==]
视频链接</description>
    </item>
    
    <item>
      <title>「视频」敏捷开发基础，质量内建，帮助组织启动敏捷转型</title>
      <link>https://www.agilewalker.com/agile-foundation-transformation/</link>
      <pubDate>Sat, 02 Apr 2022 02:54:46 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-foundation-transformation/</guid>
      <description>[https://player.youku.com/embed/XNTg1Njc1NzE4NA]</description>
    </item>
    
    <item>
      <title>敏捷软件开发工作估算方法 – 故事点和工时</title>
      <link>https://www.agilewalker.com/storypoint-man-hour/</link>
      <pubDate>Thu, 03 Feb 2022 06:13:32 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/storypoint-man-hour/</guid>
      <description>你如果无法度量它，就无法管理它
&amp;ndash; 彼得.德鲁克
软件开发组织工作估算的思考 我们人类天生不善于估算，要不就是过于乐观，要不就是过于悲观，就是很少有现实主义。尤其是我们软件开发行业，有太多的未知数：技术一直在变；新需求不断涌现；任务之间或人与人之间错综复杂的依赖关系；还有外界环境存在的各种因素。工作量主要与三方面因素有关，任务的规模，任务的复杂度以及完成该任务的人员能力水平。
为什么要做估算？ 第一个原因是帮助我们做出周全的决定。有了估算，我们就知道软件产品清单上的需求是否能在指定的期限实现或需要多久才能完全实现。
第二个原因是设定目标。如果我们给自己制定了一个最后期限，就会全力以赴确保达到目标，当然，也有完全不靠谱的时候。当然，估算和设定目标毫无疑问可以帮助我们保持专注并取得最大成果。
一句话：了解团队在软件开发过程中的客户价值产能、组织投入的成本并做出更合理的交付计划和客户报价。
理解故事点和工时 在很长时间里，工时（人天/人时）是研发团队中的指标，能直接反映出：完成某项工作需要几个人做多长的时间。这一指标确实让许多研发团队获得了评估项目人力成本的基础数据。
然而在实际操作中，开发者的工作几乎无法被标准量化。不同的开发人员，其能力本就有所差距；更重要的是，每一项具体的开发任务，它的规模、复杂度和风险等可能有着巨大差异。仅仅统计工时，并不能反映团队的开发速率。因此，在敏捷开发中，提出了应当用故事点来估算工作量。
1个故事点是1个标准单位的工作量，是对工作规模的相对度量，它估算出的是对于完成此需求所要的开发规模的大小。这个单位并不能直接指代该项需求需要的开发时间。工时是绝对的度量单位，故事点是相对的度量单位。举个例子：在同一个餐桌上，同样是一碗饭，小强10分钟就能吃完了，小美需要20分钟才能吃饭。在这个例子中1碗饭就是标准单位，每个人吃饭的效能是不同的，小强20分钟可以完成2个标准单位，而小美只能完成一个标准单位。在软件开发行业，同样的用户故事，交给不同的人实现，用不同的时间，就表明每个人的产能不同。故事点作为标准单位更客观地衡量了团队产出的客户价值，而工时却无法反映这点。
价值评估和成本评估可以并行 前几天与公司的同事和领导就故事点和工时，这两种敏捷软件开发的工作量度量方式有过一些探讨，在适应公司现状的敏捷开发过程中，我认为故事点和工时两种反映工作量的方式，可以结合使用。对于用户故事（功能需求）的评估，我们用故事点这种相对的规模估算方式，估算过程更容易，更客观，成本更低，故事点可以用来反映迭代中团队的客户价值产能；对于从用户故事分解出来的每个子任务，我们可以请具体开发人员评估任务工时，结合开发人员的单位时间成本，工时可以用来反映组织投入迭代的直接成本。这样既可以遵循敏捷Scrum的实践方法，又可以与公司软件项目以成本管理为目的工时估算对齐。
评估对象 评估方式 采用概念 度量单位 说明 优势 用户故事（需求） 集体评估 价值评估 故事点 story point 用来计算交付的客户价值 数据生成快速，客观；团队共同参与更加全面；绩效的依据 开发任务(用户故事拆分子任务) 个人评估、Leader 核验 成本评估/工时评估 人时或天 man hour/ man day 用来计算组织的投入成本 便于组织的成本管理 用户故事估算方法（PO创建，价值评估） PO、开发团队（含测试/UI同事）共同参与需求澄清 敏捷开发中的估算扑克方式集体估算（故事点） 迭代中根据实际情况商议调整 开发任务估算方法（团队创建，成本评估） 开发团队（含测试/UI同事）共同跨职能分解每个用户故事到若干个具体任务 团队每个人对自己领取的具体任务，根据经验估算并登记（工时） 开发Leader最终核验 故事点评估的优势 故事点标准客观，帮助推动跨职能行为沟通，即团队从UI到DB（任务层面仍然可以估算个人工时） 每人都要参与估算，沟通更加充分，需求理解的更加清晰，提前暴露产品设计的不确定性，避免需求盲点 促进了团队成员之间的融合和互相理解，有助于工作中更好的跨职能协作以及合作完成用户故事开发 相对大小更容易评估，工时却不易评估，如果需要，后期可以转换成团队的平均工时 规模是客观的，故事点估算不会衰减，随着团队的成长，能体现团队迭代速率即产能的变化 通过有足够的迭代或冲刺，可以衡量出团队的开发速率，做出更合理的交付计划和客户报价 小结一下 故事点和工时并不互斥。它们一个用于估算工作复杂度，一个用于估算工作时长。故事点最重要的作用，是团队在产能上形成了一个参考基准。一旦团队通过几次迭代捕捉到了产能容量，就可以此为参考，与产品方、业务方达成交付效率的共识。这样既能避免拍脑袋给计划又给不准的局面，还可用数据可视化地呈现研发团队的效能变化。如果组织把记录的工时当做产出或人效的管理方式，说明组织对目标的管理缺乏掌控或缺乏信心。敏捷开发摒弃只衡量工时的思维，因为工时只代表着一种成本，我们要关注完成需求的速度和质量就足够了，这才是唯一重要的事情。此外，敏捷团队还应该在合作开发的同时，思考如何真正集中力量少量多批次持续输出优先级更高的用户故事。
最后，不论采用故事点还是工时又或者两者结合，都需要每个团队不断探索更适合自己的方式，找到能有效估算并呈现自身产能的最佳道路。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>谈我们的研发运维一体化交付模式</title>
      <link>https://www.agilewalker.com/about-devops-delivery/</link>
      <pubDate>Mon, 27 Dec 2021 14:36:34 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/about-devops-delivery/</guid>
      <description>物有本末，事有始终，知所先后，则近道矣。
&amp;ndash; 《大学》
[TOC]
一、说在前面的话 本文旨在记录下本人与同事，同行，以及相关领导关于研发运维一体化，架构优化与创新问题所进行的无数对话，讨论的内容，通过这些对话与讨论，很多人为本文提供了有价值的输入。
在经历了产品研发团队工作1年多的时间和开发运维团队工作6个月的时间之后，想起应该说下我们研发运维一体化技术那点事儿。每个人从不同的视角看的感受肯定不尽相同，通过本文分享下我的理解，希望大家在此有一个彼此碰撞的机会，产生更好的思考。
任何成功的架构都是适合企业自身的架构。形成过程中的挫折再所难免，非常感谢公司管理层看到我们不断的改进，交付向好的趋势，坚定地给予了团队足够的技术战略支持和耐心。CTO带领我们大家在一年半时间里，通过无数次碰撞，碰壁，不断修正中形成了当前的研发运维一体化的技术架构和协作模式，并且还在持续地改进中，印证了那句话：成功不是终点，失败也不是末日。
业务目标必须是驱动IT变革的原因，而原因又会驱动IT变革的方式。面对客户的业务，要求我们产品交付过程要更加优化，要更加敏捷，适应变化，对客户要更具有响应力，利用更少的资源做更多的事情，更高效、更快速、更高质的交付；我们要创新，吸引并发展客户群体，针对市场，灵活应变。这些是变革需求产生的驱动力，是实现开发运维实施效益的工作动机。
二、产品研发运维架构 当今，基于微服务、容器化和DevOps的云原生应用架构得到了越来越多的关注。 微服务通过将复杂的系统进行解耦从而使业务功能的修改和增加变得更加容易。专注业务的微服务技术，将一组提供少量功能的服务集合整合到一起，这些系统的整体功能来自多个服务，基于此架构能最小化团队间显示协作的需求，最大化独立部署服务的能力；容器技术提供了很好的横向扩/缩容与自愈能力；保驾护航的DevOps方法，源于敏捷开发，保证了所有环境的一致性，持续集成、持续交付（每次交付都是随时可以部署的）、持续监控、持续反馈，更加有条不紊。 产品研发运维一体化工具集（图），带标记的是我们实际在用的开源工具，产品研发中心在用的工具链覆盖软件产品研发运维的全生命周期的主要方面，工具来自免费的开源社区，目的是促进良好的协同、高效的交付、不断改进工程能力，目前主要致力于以下几方面： &amp;lt;img src=&amp;quot;https://raw.githubusercontent.com/reachsys/imagebed/master/blog/image/202104/image-20211224155225202.png&amp;quot; alt=&amp;quot;image-20211224155225202&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt; 流水化集成和部署：自助式的图形化发布操作直观简易，开发人员可以有更多的时间在业务实现上，减少代码提交和部署之间的时间；配合敏捷迭代，每天N次快速发布。 镜像化管理和交付：客户发布有镜像仓库，本地研发有镜像管理；图形化管理镜像和容器更高效，镜像保证所有环境的一致性；大幅提升环境的运维的效率。 可视化监控和告警：研发环境监控、客户应用监控、应用日志监控、故障即时告警；在客户发现问题前响应问题，团队再也不会后知后觉，缩短响应周期，提升客户服务质量。 代码化基础架构：Jenkins脚本，负责代码集成与构建，发布本地研发环境或推送镜像仓库；Docker脚本，负责应用镜像的生成，容器运行；Shell脚本，负责客户生产环境部署，数据和文件备份，数据迁移，收集监控数据；这些代码消除了重复命令行操作，提升运维效率，代码生成一致可维护的基础架构环境，帮助开发人员专注于业务代码实现。 文档化操作流程：包括基础环境搭建，应用环境部署，业务数据备份，租户数据迁移；研发交付流程更清晰，节省人员工作交接的时间，避免人员单点故障，提高知识传递的效率；目录化也帮助操作过程的标准化。 产品研发运维一体化架构（图）在我们产品研发交付中，利用已经建立的工具链，遵循开发运维的基础架构即代码的方式，以统一的配置和代码，产生一致的服务基础环境，提供给客户业务应用服务，根据部署不同环境的迁移标准，自动化部署到开发环境，测试环境，准生产环境和客户生产环境。 &amp;lt;img src=&amp;quot;https://raw.githubusercontent.com/reachsys/imagebed/master/blog/image/202104/image-20211224151744758.png&amp;quot; alt=&amp;quot;image-20211224151744758&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt; 实现持续交付所需的架构转换使功能变更得以按照小批次进行交付，这些变更包括开发到运维完整周期的所有代码，配置，基础设施，数据，脚本，部署流程等的变更。 架构支持多钟交付方式，其中以云端SAAS交付和客户私有化交付两种方式最常用，SAAS交付通过持续交付流水线快速完成敏捷迭代后的更新，私有化交付是通过持续交付流水线完成客户应用镜像并上传云端镜像仓库，然后从客户服务器进行授权的镜像拉取，在线部署，十分便捷。 我们对业务环境的应用服务进行实时健康状态监控和日志记录，并会对生产环境的业务数据以及文件进行全量和增量备份。 三、产品研发运维协作 产品研发运维活动协作（图）中我们每个团队都有一定的工作边界，这种边界不会泾渭分明，基于组织战略，在交付活动中是共同融合的，这样可以保障工作中的衔接更加顺畅，不会有断层，彼此都了解相关的工作情况，能让更多的人有面对问题的知识储备。我们并不以团队职能划分进行协作，而是以交付活动本身聚合各个团队的能力进行跨职能的敏捷团队协作，目的是尽早发现并解决交付的质量问题。 * 产品研发活动前移对接客户需求；质量保证活动前移，一方面，测试人员在需求上前移与项目交付合作接近客户，另一方面，开发人员在开发中引入测试驱动开发，让质量工作前移，从代码编写的过程中就开始；开发运维即DevOps活动顾名思义，在工作中前移对接开发，意味着不仅需要治理研发的环境，还要对研发出来的软件产品架构和代码有一定的了解，以便更好的完成运维工作。 * 项目交付活动是最接近客户价值的活动，而客户价值活动是和我们的业务视角对齐，产品研发到测试再到项目实施，开发运维工作贯穿始终，研发运维一体化就是用敏捷开发方法论结合DevOps技术实践，助力研发交付流水线的提升，开发和运维都希望能尽快迭代，不需要约定某个特定的时间，流水线时刻可以接受发布任务。如果迭代开发，我们每两周发布一次生产环境，我们每天都要有若干次的测试环境部署，更多次的开发环境部署。协同交付和持续反馈，是实现持续改进和质量保障的必要条件。&amp;lt;/ol&amp;gt; ### 四、带给研发的价值 1. 良好的代码版本管理（图），可以随时为部署任一版本的客户进行热修复 * 持续部署流水线，允许开发人员一键自助式部署到被授权的任一环境，如果在研发环境中，仅需几分钟即可完成一次部署；我们的私有镜像仓库，允许研发或运维人员从远程为客户环境进行自助式的私有化部署，仅仅需要执行1个部署脚本，业务应用服务的便会自动更新，排除网络影响，每个微服务组件的发布仅需1-3分钟，整个业务应用的发布在15分钟内可以完成。可以很快对迭代功能进行在部署环境下的验证。 * 可视化的监控，包括环境监控、应用监控、系统监控，团队可以快速获得反馈，随时改进，更少的意外问题和救火行为，意味着我们有时间做更多的技术架构提升和产品功能迭代。 * 研发环境、业务环境的数据安全，定时自动备份，产品研发数据备份，研发基础环境数据备份，客户业务数据备份，保护了我们的无形资产。 * 基础设施即代码，开发应用程序一样开发基础设施代码，运维代码和研发代码都在版本控制管理之下。上线一个虚拟环境或一个环境的新版本，就变成执行脚本的过程，脚本可以创建并提供一个或一组镜像，完成从操作系统到应用服务集的部署与配置。过去几个小时甚至几天才能完成的工作，现在只要几分钟。&amp;lt;/ol&amp;gt; ### 五、带给组织的价值 1. 专业的技术框架和研发流程，更具有行业的影响力和承诺客户的信心。 2. 根据组织的业务计划，有持续可评估的交付计划，能够敏捷以及快速响应客户反馈，成功交付。 3. 更高效的主动运维服务，持续监控，团队可以在问题影响客户业务之前，及时解决，保障客户满意度。 4. 更低的交付成本和运维成本，组织持续投入的DevOps活动，从而确保标准化、流程化的业务应用和研发环境治理，无需任何定制和人工重复的浪费，更加精益。 5. 敏捷文化的方法和技术落地，有效的传播，让更多的团队从中受益。 ### 六、带给客户的价值 1. 从容应对快速变化的业务需求，可以做到对业务的无感知更新，保障业务连续性。整个热部署、快速部署过程从变更的源代码提交到客户业务人员手中的可以使用的功能，在10分钟左右可以完成。 2. 保证业务数据安全，每天都有定时的自动全量和增量的备份，可以做到从故障中快速恢复业务的容灾恢复能力。 3. 统一平台的可视化监控、应用运行日志、故障告警即时提醒，客户关心的一切，尽在掌握。 ### 七、走向未来的路 前面看到本文的主标题，我们这里说的不是单纯的从速度维度来说越快越好，产品研发交付会思考：如何在质量保证，客户满意前提下，合理的快。先想在哪方面快，再讨论怎么快，最后再说有多快。 敏捷或速度的诉求是研发运维一体化存在的第一性原理。我们持续改进的方向主要在三方面：产品功能开发，开发运维环境，组织协作流程。诸如敏捷、开发运维这样的新方法，以及云计算、微服务这样的新技术，加速催生了新的IT能力。在整个组织内实施研发运维一体化，让团队变得更加敏捷、高效及创新。技术架构面临的挑战是未来业务多变，速度要快和稳定性要高，系统更复杂。 我们着眼当前的产品交付工作，努力提升团队满意度，组织满意度和客户满意度；保持短期日常改进工作，做好质量化开发，流水化部署，容器化交付，可视化监控，代码化基础架构，自动化运维；坚持做好未来长期的规划，目标就是：帮团队增效，帮公司降成本，保障客户业务持续价值。 2021年即将过去，2022年很快来到，关于开发运维团队接下来推进的几个主要方向上的工作如下： 1.</description>
    </item>
    
    <item>
      <title>我们的DevOps如何让客户生产环境从“0”到完全恢复</title>
      <link>https://www.agilewalker.com/devops-from-0-to-done/</link>
      <pubDate>Sun, 14 Nov 2021 09:17:17 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/devops-from-0-to-done/</guid>
      <description>人能弘道，非道弘人
&amp;ndash; 论语.卫灵公
危与机的开始 最近工作有些吃力，11月4日当天特意请了两小时假，提前下班，吃完晚饭刚坐下来，打算简单看个电影，然后好好睡一觉恢复下体力。不想发生了一次突发事件。
19:43，有同事在群里问是否能连上客户的服务器，一开始也没有太当一回事，服务器连不上也许只是网络暂时情况。
20:26，刘博在群里紧急拉DevOps的同事入群，心里咯噔一下，看来是出了点状况，赶紧坐到电脑前开始关注群里的沟通。
20:36，一阵急促的电话声，刘博来电，果然事情有点不太妙，新资产的应用服务器重启后就无法启动，应该是宕机了，DevOps团队需要全员上线应急恢复服务器应用环境，崔总开始协调第三方系统集成供应商恢复服务器的基础操作系统，幸运的是目前只有新资产系统的应用服务器宕机，数据服务器安然无恙，刘博指示先备份数据服务器上的所有相关数据，以防万一。
20:50，我们开始等待第三方供应商完成服务器操作系统的重新安装，同时内部分配每个人的VPN账号，进行数据库和文件存储的备份。
21:36，参考之前准备的资产系统部署手册，团队基本明确了针对客户新资产平台应用服务器恢复的具体分工。
台上三分钟，台下十年功 22:00，第三方把服务器安装完毕，经过漫长的等待轮到我们正式开工上场了，之前小杨在公司WIKI上准备的部署文档有了用武之地，这是我们应用服务器环境恢复的参考流程，刘博又帮我们捋了一下思路，排除一些本次系统恢复不必要做的步骤，于是最终需要做得只是一部分，而且有了之前工作积累的经验和成果，这一切使大家有信心可以很快完成。
插播一下DevOps之前的部分工作：
目前我们持续交付流水线可以实现一键发布，将资产系统的客户业务应用镜像上传到公司的私有云，这就是我们对客户的镜像仓库，在这里我们维护了每次交付给客户业务应用的不同版本，配合几个已经准备好的，放在私有云上，占用很少存储空间的启动脚本，可以提前下载到客户服务器上执行，进行统一的自动化部署，可以实现在客户服务器上完成快速部署。
简单科普一下镜像的概念，大家可以把它理解成一个不依赖于操作系统环境的业务应用的小盒子，我们可以利用若干个这样的小盒子以及它们之间形成的关系，在任何服务器和操作系统中搭建出一套一致的业务应用系统。能节省大量的问题解除过程。运行起来的镜像，我们称之为一个特定的容器。我们资产的平台是由几个不同的镜像组合而成，就像人的身体不同部位，只有共同上线成为运行容器才能协同一致工作，表现出一个完整的人的能力，缺一不可。
22:43，小邵，一位新加入DevOps团队不久，根据个人的经验以及部署文档完成平台基础环境的搭建。
23:11，小杨，一位在DevOps团队成长迅速的实习生，利用提前准备的部署脚本下载并重启所有的公司私有云镜像仓库中的资产的业务应用镜像，当这些镜像在客户服务器运行起来后，整个资产业务系统就运行起来了。
23:30，小杨在群里发了系统恢复后的新资产系统的界面截图，宣告了我们这次紧急系统恢复的成功。大家在群里简单总结了一下，互相感谢后道声晚安，结束了这次紧张的紧急恢复工作。
这次危机的解除实际工作时间仅为1.5个小时，算上前期的准备工作也就2个小时不到，这是对我们之前积累的一种自我认可，也是各位领导与团队一起协作的共同成果。
DevOps团队搭建的持续集成和持续交付流水线帮助产品研发团队轻松实现每日多次的自动化构建及发布，使得随时可以把新开发出来的功能特性交付给测试团队和最终用户成为现实，大大提升了对客户响应能力，缩短了交付反馈环，这在以前没有持续部署或发布的研发技术条件下是无法想象的。当然后面我们还有很多改进的空间。
最后，鉴于这次突发事件，我们向客户提出申请异地备份服务器，同时建议有条件的话一定要有定期的整机备份机制。
其大无外，其小无内 我们先来看个问题，企业需要实施DevOps的情况：应用上线（哪怕是改动一行代码）需要多长时间？
大家认为一般的周期通常是月、周、天、小时？如果大家发布周期在周级别，还有大量的工作靠人工执行，我们需要尽快引入DevOps了。
这是来自维基百科的解释，“DevOps是一组过程、方法与系统的统称，用于促进开发、运维部门之间的沟通、协作与整合。DevOps是提倡开发和IT运维之间的高度协同，从而在完成高频率部署的同时，提高生产环境的可靠性、稳定性、弹性和安全性。”
现在的软件开发已经不同于过去，产品要适应瞬息万变的市场，分工日益细化，一个成熟软件的规模已经不能奢望每个人成为全栈工程师能支撑得了的。尤其是对旨在于为了提高交付效率和伸缩能力的新的技术架构出现后，DevOps也随着敏捷文化的发展而融入越来越多软件组织的日常运营之中。DevOps小到掌握特定技术点，维护每个文档的细节，大到参与对研发工作规范的制定，传播对组织文化和价值观，把握DevOps的工作流程，提升软件组织的交付效能和客户满意度。涵盖从需求，开发到运维，反馈的整个过程，可以跨越团队，公司，甚至合作伙伴以及客户各方。这些都将纳入DevOps的日常工作和未来规划的视野里。
低头做事，抬头看路 应对危机，对他人而言也许是需要立刻解决的“危险”，但对DevOps而言，给了我们验证和改进工作的“机会”，是对我们平时工作积累之后的一种检验和反馈的过程，也为日后保障逐步建立一套成熟的因地制宜的流程和机制。在DevOps，我们不仅要低头做好眼前事，还要抬头看好远方路。不仅需要做好日常的事务性的工作，支持好组织的项目交付，还要建立工作规范和流程，技术能力和文档，通过具体工作支持其他团队在组织内部获得更多彼此了解的机会，更重要的是在这个过程中要做好敏捷转型的排头兵。
DevOps的长远的目标是自动化一切，监控一切，可视化一切，尽可能减少人工参与带来的不确定性从而引入更多的风险。在技术层面，我们形成持续编译、自动化测试、持续部署的能力；提升基础设施即编码的能力，将基础环境可编程化，项目团队成员可以自助获取；目前规划是先做好持续集成，持续交付和部署，根据痛点逐步优化，完善监控能力，以后还会做ChatDevOps，实现机器人值守。
简陋的笔，精彩的事 从本文开始的名言中，不难看出古代先贤也试图告诉后人：要成事，最重要的不是工具和方法，而是合适的人，只有人才能基于价值观和原则，把工具和方法运作在适配于自身企业的流程之中。这一点与敏捷宣言有异曲同工之妙。受限于我自身的笔头水平，无法详细说出这次紧急系统恢复事件中身临其境的精彩，不过无论如何我希望能尝试去记录这样一次DevOps作为主角所经历的故事。
加入DevOps团队的这段时间，我个人额外的感悟是DevOps不做人人眼中的战斗英雄或者救火队员，而是成为默默无闻的守护者。让外界感到风平浪静，才是我们作为守护者存在意义。DevOps团队大部分的时间是在为了避免发生危机而不断地思考和准备，静下来做好DevOps工作的心态应该是”行到水穷处，坐看云起时“。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>如何用伪领导力搞垮一个敏捷团队</title>
      <link>https://www.agilewalker.com/how-to-destroy-a-team/</link>
      <pubDate>Sun, 25 Jul 2021 06:45:07 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-to-destroy-a-team/</guid>
      <description>《易经》乃诸经之首，中华民族的哲学思想的源泉。
做了多年的基层伪领导，自认做的不是很好，格局不高，事实也说明基层管理更适合本人的思维深度，大家看到这里，至少能判断出我的自省做得很好。本文总结了一些伪领导力，还请大家赐教。
不知“外圆内方” 说的是领导的根本法则，领导者有更加圆通的行为方式，同时要有较为公正的管理原则。
有些领导说的头头是道，正确无误；做的相差甚远。可称之为：外方内圆。举个栗子，中国人讲究亲疏有别，是很正常的人性，作为领导也会一样，面对同样优秀的下属肯定会给那个关系好的更多关照。但如果纯粹为了拉拢人，展示自己的领导地位，或为了让“自己的”人获得利益或上位，无视团队中那些各方面都更优秀的人。加以时日，团队必定心生厌恶，让优秀的人失去信心，导致劣币驱逐良币，留下来的人一门心思只想着怎么去跟领导搞好关系，配合领导建立自己的势力圈，而不是想着怎么把业绩做好。最终必将导致团队效能下降，失去原动力。我们的老祖宗都说在合理范围内玩弄权术，搞人是可以的，不过，以终为始，如果公司给予领导者的权力让公司蒙受损失，最终一起受害的肯定是领导者自己。
另外有些领导一身正气，原则性极强，对团队要求是分毫不差，不懂变通。可称之为：外方内方。这样的领导的确能做成一定的事情，但同样不符合中国的管理文化，要求领导者有包容的心态，遇事“可为可不为”。否则，可能会付出更多的努力和遭到同事的反对。“中”为合理。中国人思想中充满对事物“合理”的思考，大家可以好好体会日常的经历。关于领导工作中合理的理解，可以接着看下文。
不愿“上，止，正” 说的是领导的三个节奏，领导要以“上”为进，以“止”为退，以“正”为守。
“上”是领导者不仅自己要有上进心，同时能带领团队向前，不断进行改进的尝试，引导团队的意愿，教导方法，也能根据团队当前的条件达到目前可以达到的更好的状态，从而使得交付效能持续改善，推进产品交付效率。
“止”是领导者懂得适可而止，过犹不及，团队能力在限定的条件下是有一定上限的，不可过分要求，不妨利用好这个机会，给团队鼓励和认可，帮助大家反思如何可以做得更好，记得一句话：“我们已走得太远，以至于我们忘了为什么而出发。”。
“正”是领导者行事要顶天立地，把权力控制在一定范围内、信任下属、处事合理，凡事不会只选择听自己想听的，看自己想看的，信自己想信的，而忽略去参考不同的见解。领导能从不同下属的各自的立场分别做思考，综合考量，就是个“正”的领导，或许最终的决策不是每个人都满意，但求有一个“合理”的支持。
如果把管理团队看成开车，“上”好比油门，踩上它，团队就会不断前行；“止”好比刹车，需要随时依据路况减速，避免风险；“正”好比方向盘，牢牢把握行驶方向，才能达到目的地。
不屑“治心，治力，治变，治气” 说的是领导的四个管理重点，带领团队就像带兵打仗。
治理人心。人心齐，泰山移。关心同事永远都不错，尤其在中国，饱含人情味的关切话语能营造一个良好的工作氛围；在公司原则允许的范围内实际帮助下属解决小难题，而他自然会用自己的努力来回报组织。记住：早上见面第一句话绝对不是说工作相关的事情。
治理能力。认清自己团队的能力，接受合理的工作，同时根据每个人的特点，耐心地来进行改进。当着第三个人的面批评一个下属是严重的失误。被批评的人可能会因此失去自信心，甚至以后做不好工作也没有任何负担感，因为你已经确认了他的无能。甚至会招致团队其他人的反感，放松对自己工作的要求。
治理改变。唯一不变的是变化，要帮助团队用变化的心态来看待困难和解决问题。称赞下属，尤其是对外称赞下属。这种称赞会辗转传回下属的耳朵，他由此得到的快乐要比你直接称赞他强几倍，他自然会更加热爱工作，朝你称赞他的方向改变。而如果总对外抱怨下属则会让人觉得你的无能，至少会认为你没能物色到出色的人选，或者没有能力让下属变得更优秀。
治理气势。把握好时机，利用好形势，鼓舞好团队。当团队状态低迷的时候记得给团队更多的自主权，耐心倾听，安抚好幼小的心灵，让团队看到希望，他们对你来说都是“孩子”；当团队斗志高昂的时候就可以给他们更大的挑战，表明你对他们能力的信任。对任何下属的建议你都该认真倾听。在通常情况下，下属都会经过思考才会提出建议，如果你仅用一个“不”字直接否定他，他会从此失去创造的信心。而倾听和讨论则会使你和下属都看到自己的思维死角，并有机会从中得到改善。
搞垮一个敏捷团队 完全做不到以上各小节的内容，必定能搞垮一个团队。无论如何，本文都是希望能助力你达到你所希望达到的目标！
还是那句话，一切方法是否有效，都很难讲，取决于天、地、人。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>我们这样实践Scrum敏捷每日站会</title>
      <link>https://www.agilewalker.com/how-we-daily-scrum/</link>
      <pubDate>Sun, 06 Jun 2021 06:59:19 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-we-daily-scrum/</guid>
      <description>孔子说 性相近，习相远。我们人类性情都差不多，而每个人的习惯千差万别。我不认为敏捷能改变任何人，而是一群有共同积极价值观的人走到一起，在实施敏捷后，可以把各自的潜能激发出来。
众所周知，每日站会的真正价值在于确保团队能持续地为当前的迭代的“承诺”而努力。每日站会并不是状态汇报，而是信息分享和调整协作。一个成熟的团队可以用不同的方式和关注点来开站会，与此同时团队也继续在改进中使用敏捷。
我和一个由9位成员的团队一起工作，我们在一起工作至今已经近8个月了。在我加入团队之前，大部分成员对于敏捷是完全不熟悉的。我们可以在15分钟的框架内完成每日站会，这样也更高效。在过去这段时间，我们在每日站会中尝试了不同的方法，目的在于在个人和团队磨合成长的同时，为我们的日常工作建立一个积极的氛围。我们认为真正重要的是：文化和人。
每日站会是什么 每日站会是指团队每天早上投入一天的工作前，进行的15分钟以内的会议。主要目的是给团队沟通每日承诺和迭代目标进展的机会。Scrum Master， Product Owner和团队成员都需要参加每日站会。当被问到我们敏捷团队在每日站会上讨论什么的时候，通常是团队成员围绕三个主题：
昨天，我们是否达成了目标？每个人的做了什么？还有哪些差距？ 今天，为了达成迭代的目标，我们的新目标是什么？每个人打算领取什么工作？ Sprint目标现在还有多大差距？是否可能延迟？哪些问题和障碍需要解决？ 敏捷开发团队是一个跨职能团队，而且不是所有人都是全栈工程师。完成一个故事的开发和测试，往往需要多个人员来协作完成。例如：一个典型的web开发故事，通常需要前端开发工程师、后端开发工程师和测试工程师来协作完成。
敏捷站会有以下作用：
1）对齐目标：互相同步信息，专注于当前迭代目标和近期的相关工作；
2）相互协作：尽快交付工作成果，减少半成本，发现障碍，通过协作消除瓶颈让价值流动。
每日站会的七大特点 同样的时间和地点
每次在相同的时间和地点召开会议能让会议成为团队习惯，更容易开起来。
每天按时召开
如果会议每天都晚五分钟开始，那么准时到场的成员将在一年中浪费20个小时来等待会议开始。
十五分钟以内
站立有助于我们保持时间意识和专注，从而使会议保持简短有效。
识别而不解决问题
遇到需要进一步讨论的话题，站会中不展开，可以约定在站会结束后立即讨论。且仅限于解决问题所需的团队成员。
专注有限主题
团队成员说明自上次站会以来的完成了什么、下一次站会将会完成什么工作、以及是否存在会阻碍他们工作进展的问题。
整个团队同执行
站会由团队成员轮流发起，并共同主持执行。敏捷站会不是一个状态汇报会，参与者提供状态是为了能让团队分享信息和发起可能的协作。
整个团队参与
团队中的每个人都应该参与。团队之外的人应被允许旁观会议。但不鼓励他们在会议期间参与讨论，除非团队成员向他们询问建议。
站会结束前，如果旁观者有问题或意见，部分团队成员可以留下来解答。
每日站会为什么 每日站会的目标
除了是Scrum的有机组成部份以外，每日站会的目的是要频繁检查团队在迭代中的进展如何，尽快反馈。在会议中，团队成员能够提出当前遇到的问题，会后讨论合适的解决方案。每日站会通过互相共享工作进展，使团队成员之间拥有更高的协作度。在极高的透明度之下，PO/PM就能够了解产品进度和用户故事的完成情况。
每日站会，是团队自组织检视迭代进展的协作机制，其主要为了：
检查迭代目标的完成状态； 暴露问题和障碍，使问题和障碍得到及时应对和解决； 计划当天的团队目标和领取工作任务。 我们迭代进展的衡量基准，是“已完成的故事”的故事点数。通常，故事的完成标准，至少是通过测试或PM初步验收。
通常我们会使用燃尽图来分析迭代进度的情况。包括以下要素：
横轴，是时间轴，单位是迭代天数； 纵轴，是剩余工作量，单位为故事点； 进度曲线（蓝色），体现了截止目前，迭代还剩多少故事点数没有完成； 参考线（红色），是分析迭代进展是否正常的参考基准。 如果进度曲线位于参考线上方，则表示进度已经延期。为了控制迭代的进度风险，我们希望能够尽快地完成一个个故事的开发和测试，以便使燃尽图上的进度曲线处于正常状态。每日站会关注的核心焦点是“本次迭代故事的完成情况”以及如何“尽快完成剩下的故事”。
为什么要回答三个问题？
提出三个问题的目的是让团队专注在当前的工作上，并强调在接下来的8小时内我们需要提升专注度和协作。
每日站会怎么开 每日站会的目标是“尽快完成故事”，其组织形式应该是：
通过用户故事来回顾和计划工作； 根据燃尽图来检查进度情况。 我们的每日站会的实践是这样的：
0）发起每日站会：团队成员每天轮流主动发起，保持对自组织站会的主人翁心态。
1）回顾和计划：
团队每人把昨天完成的用户故事在敏捷看板上移动到“Done”的位置，并简单沟通完成的情况； PM和团队对今天要做的故事进行优先级排序选择，并简单澄清。原则上当天站会中准备用户故事点的总数不超过团队开发人员的平均产能之和，故事完成后可以从待办中再拿新的故事； 测试小组把通过测试的用户故事移动到&amp;quot;UAT&amp;quot;的位置，供PM选择进行初验； 是否有阻碍用户故事推进或者影响本次迭代目标实现的障碍，我们写一张障碍卡片并贴在“障碍”栏目。 2）任务领取：
团队成员每人或结对领取当日选中的用户故事； 团队成员共同承担当日测试小组发现的问题并按约定时间修复； 开发负责人最后分配未被领取的用户故事或工程技术改进工作； 直到所有团队成员的工作均以排满；直到所有的障碍都已经有了应对措施。 3）信息发布：
每日站会发起人给敏捷看板拍照并发到敏捷团队微信群；
WIKI上，更新燃尽图，迭代进展情况。如果迭代进度曲线严重落后于参考线，则意味着迭代目标的达成风险较大。这种情况下，我们可能要组织召开一次迭代的重计划会议，确认剩下的工作如何进行调整；
Redmine(购买了敏捷插件)上，更新电子敏捷看板，其信息与物理看板一致，并有统计和图表供参考。
可以参考的实践 尊重团队约定</description>
    </item>
    
    <item>
      <title>Scrum敏捷开发培训后有感</title>
      <link>https://www.agilewalker.com/scrum-trainning/</link>
      <pubDate>Thu, 01 Apr 2021 10:22:40 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-trainning/</guid>
      <description>从⻓长远来看，你的组织可持续的竞争优势就是具有比对⼿更快的学习能⼒。
—— 彼得.圣吉
开端 2021年在即将辞旧岁和迎新年后，公司组织了两次Scrum敏捷开发企业级实训，2月初和3月初各一次。我有幸能参加第一次的培训，俗话说的好：输入只是学习的开始，输出是学习的检验和深化。在第二次培训结束后，感受到很多同事对敏捷开发方法还是有很大的意愿去尝试的。经过几天的思来想去，认为公司刚开始做敏捷转型，有必要做一个简单的文字记录，写下这次有意义的活动，同时也可供其他同事未来日常参考。本文简单小结了这次培训涉及的内容，以及结合了我自己工作中的一些思考，其中有部分文字是之前日常反思中记录下来的，此情此景，正好移花接木一下，希望大家原谅我的懒惰。
内容 通过这次培训，公司软件研发部门的同事从以下几方面了解了敏捷将带给我们的新的软件开发理念。
01 : 敏捷思维和理念 敏捷的核心思维让我们关注：价值驱动；适应变化；自组织团队。
价值驱动– 聚焦最高价值的目标
敏捷最短时间创造最大价值，以终为始，聚焦最重要的目标，从为什么开始。敏捷可以更快、更早地交付价值，优先交付高价值的需求。
瀑布模式强调单一职责，不同职能部门的工作交接和延迟阻碍价值交付，行政边界导致局部优化，筒仓之间的连接和沟通难以管理。 敏捷模式围绕价值流（共同的目标）建立跨职能团队，加速价值交付。 明确什么是高价值的需求、需求条目化和价值排序；聚焦高价值的目标、优先交付高价值的需求；围绕价值流建立跨职能团队和可视化看板，加速和持续优化交付价值。
适应变化– 掌控和管理不确定性
预定义过程和经验性过程的区别，预定义过程制定详细的计划和执行步骤，按计划执行直到所有计划执行全部结束；经验性过程从愿景和高价值的目标出发，小步快走，不断确认和调整，直到目标达成结束。在传统开发模式中，我们假设可以制定出详细的计划，一切都能按计划执行。在敏捷开发模式中，我们承认无法在一开始就明确详细的计划，存在不确定性， 整个过程中很多事情在变化。理解不确定性和涌现式需求；通过迭代、增量建立频繁交付、频繁确认、及时调整、修正，以建立快速的反馈；学习循环，以此降低交付错误产品的风险。
自组织团队– 释放团队的内驱力
过去的命令和控制式的管理方式已经越来越局限，在知识性工作环境下自组织型团队更是深得人心。自组织要求我们从命令与控制到目标驱动；从微观管理到领袖、教练和服务式领导；通过授权、支持、引导、反馈，所有的决策及交付活动中团队参与、共担责任。
Scrum和敏捷概要
敏捷软件开发宣言。
Scrum是一 个管理框架，Scrum用于新产品开发、 项目或团队的管理 。Scrum源自于软件开发，目前已经用于各个管理和创新领域。Scrum的理论基石是检视、透明、调整。
敏捷文化是我们倡导的一种思维方法，敏捷实践是一系列新的工作方式。敏捷实践和文化要相匹配和适应。敏捷运动是一场关于组织和个体的适者生存的进化，文化变革才是这场运动的核心。敏捷转型中文化变革要打头阵。
02 : Scrum 框架 Scrum五个价值观：
承诺-愿意对目标做出承诺； 专注-把你的心思和能力都用到你承诺的工作上去； 开放-把项目过程中的一切开放给每个人看； 尊重-承认每个人都有他独特的背景和经验； 勇气-有勇气挑战更高目标，做出承诺，履行承诺，表达不同的见解。 Scrum三个角色的职责：
Scrum团队的构成：Scrum 团队由一名产品负责人、开发团队和一名Scrum Master 组成，Scrum 团队是跨职能的自组织团队，团队具备完成项目工作的所有能力
Scrum开发团队是特性团队，团队内具备交付一项工作所需要的各领域的必需技能，例：分析、设计、编码、测试等；自组织团队，承诺工作，不是被指派，团队决策，共同担责，决定团队内如何进行决策。拥有共同的愿景、价值观和工作协议的团队文化。
Scrum Master是团队的教练，对Scrum流程负责，ScrumMaster每天的工作原则上就是确保团队用正确的姿势，高效地交付，同时，确保团队的文化保持在一个敏捷认同的氛围中。
产品负责人的职责是最大化产品的价值；产品负责人管理产品，帮助团队看到产品愿景和路线图，对需求进行优先级决策，准备并解释用户故事等；产品负责人和开发团队密切合作，随时都能响应团队的需要。
Scrum五个活动（在一个迭代中经历的活动）。：
产品Backlog梳理，对接下来迭代的需求进行预梳理，讨论初步的工作量和需要识别的风险。
Sprint计划会，团队对本次迭代的用户故事理解，分解，工作量细化评估。
每日站会，每天团队内部分享进展，第二天的计划，识别的风险及需要的支持。
Sprint评审会，团队与干系人一起，演示迭代工作成果，验证迭代交付的产品增量。
Sprint回顾会，团队内部改进，检讨的过程。产生改进流程和实践的建议并共同负责跟进。
由龙舟比赛角色想到的：产品端和交付端要合作博弈。产品推进需要结合交付端的能力，交付端需要根据自己的实际能力承诺，有勇气做出合理的承诺。交付端对每次迭代的交付范围有决定权，开发核心成员必须进行相应的判断，与产品端灵活沟通并引导期望。我们要做质量交付，而不是数量交付。产品管理者要有全局观，实事求是，平衡好产品端需求和交付端能力的因素，不可顾此失彼，更不可用KPI来控制某一方的诉求，进而实际分裂了整个团队共同的目标。在敏捷交付中，传统项目经理的职责被由PO，SM，和开发团队所共同分担。组织刚开始做敏捷，碰到问题，属于正常。作为敏捷领导者团队的一员，我经常自我反思，也帮他人反思，如何帮团队顶住压力，给团队注入动力。我想这是我们的课题。
03 : 敏捷产品和需求 产品 Backlog
产品Backlog的定义：是用户需求的集合，是按一定的优先级颗粒度排放的用户故事（需求）、缺陷、风险、技术工作等。具有以下特性：
Detailed 合适的详细程度
Emergent 涌现式的
Estimated 经过估算的</description>
    </item>
    
    <item>
      <title>初创的敏捷团队采用行为驱动开发共创用户故事</title>
      <link>https://www.agilewalker.com/how-bdd-user-story/</link>
      <pubDate>Thu, 11 Feb 2021 04:36:00 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-bdd-user-story/</guid>
      <description>如果说TDD是让我们正确地做事，那么BDD就是让我们做正确的事。
在原本的计划中，2021年农历新年前发布另一篇文章，还是应了计划赶不上变化的这句老话，也算是体现了敏捷的价值观，希望本文对初创敏捷团队有一定的帮助。
维基百科的解释 行为驱动开发（英语：Behavior-driven development，缩写BDD）是一种敏捷软件开发的技术，它鼓励软件项目中的产品负责人、开发者、QA和非技术人员或干系人之间的协作。BDD最初是由Dan North在2003年命名，它包括验收测试和客户测试驱动等的极限编程的实践，作为对测试驱动开发的回应。BDD介于业务领域和开发领域之间，如下图的位置。
行为驱动开发强调使用领域特定语言描述用户行为，定义业务需求，使需求分析人员、开发人员与测试人员进行沟通的有效方法。领域特定语言，相比自然语言更加精确，又能以符合领域概念的形式满足所谓“活文档”的要求。
行为驱动开发的核心在于“行为”。当业务需求被划分为不同的业务场景，并以“Given-When-Then”的形式描述出来时，就形成了一种范式化的领域建模规约。编写领域特定语言的过程，其实就是不断发现领域概念的过程。因此，团队采用BDD共创用户故事，最重要的产出不是文档，而是提供了团队交流的平台，并在其约束之下完成了领域建模。由于团队的不同角色都参与了这个过程，就保证了领域模型的一致性与准确性。
敏捷开发中的理解 行为驱动开发是一种敏捷开发的技术，想必大多数同学都对敏捷开发领域中另一技术，测试驱动开发（Test-Driven Development，TDD）较为熟悉，BDD是建立在测试驱动开发基础之上。BDD的重点是通过与利益相关者的讨论取得对预期的软件行为的清醒认识。行为驱动开发人员使用混合了领域中统一的语言的母语语言来描述他们的代码的目的，通过用自然语言书写团队成员（业务、产品、开发、测试等）都可以读懂的实例。这让开发者得以把精力集中在代码应该怎么写，而不是技术细节上，而且也最大程度的减少了将代码编写者的技术语言与商业客户、用户、利益相关者、项目管理者等的领域语言之间来回翻译的代价。
敏捷团队面临的交付困境 在软件项目中涉及多人紧密协作，由产品业务讲解功能需求，开发负责代码实现，测试保证软件质量，高质量的沟通对项目成功至关重要。如果在一个项目中业务人员用自己行话，开发人员用技术语言、技术思维去理解业务，在沟通过程难免出现分歧，开发人员就可能按自己的理解去评估和实现了一个错误的功能。
理解需求 敏捷开发团队围绕产品的沟通，大部分都是为了理解需求，从而在业务、开发和测试之间达成共识。用户故事关注的是业务需求而不关注技术，系统业务专家、开发者、测试人员一起合作，分析软件的需求，然后将这些需求写成一个个用户故事。并且，首先开发和发布业务关键的用户故事，尽早为最终用户提供业务价值。
评估与计划 需求理解不一致，验收标准不清晰，就会导致用户故事评估工作的困境，开发人员对故事点的评估就缺少依据。有了上一步需求理解的统一，开发团队与产品负责人在工作量评估上有更坚固的共识，从而管理层在产品计划上，也会有更好的预见性和期望。
测试工作 这样的用户故事可以直接应用到测试中，作为测试的标准文档。我们在做单元测试 时，经常是针对某个函数，或是某个类进行测试，但是被测函数或是被测的类是可能经常变化的，我们的测试案例也需要经常性的随之变化。然而，用户故事描述的是软件的整个系统行为，几近于需求文档，可变性大大减小。因此，测试案例不需要做太大变化。同时，这样的测试案例最贴近于需求，贴近于实际的系统行为。
产品相关文档 经常看到产品在不断的推进，当干系人问起文档的时候，我们却难于启齿。不是因为我们不重视文档，而是我们更重视交付？如果必要的产品说明文档也没有就是有点走极端了。基于BDD 的用户故事，使用几乎近于自然语言的方式描述了软件的行为过程，因此，可以直接作为软件的需求文档。
团队基于BDD共创用户故事 用户故事User Story 用户故事是从用户的角度来描述用户渴望得到的功能。
一个好的用户故事包括三个要素：
角色：谁要使用这个功能 活动：需要完成什么样的功能 商业价值：为什么需要这个功能，这个功能带来什么样的价值 验收条件Acceptance Criteria 验收条件就是一系列可以接受的验收条件或者业务规则，且与功能或feature相互匹配和满足，同时也能被产品负责人和干系人接受。
验收条件可作为验收测试用例的具体例子。这也是我们常说的实例化需求，让抽象的需求变得具体和可测试。
一个用户故事包含若干个验收条件，包括正常场景与异常场景。
场景中的Given…When…Then…实际上就是设定该场景的状态、适用的事件，以及场景的执行结果。
通过这样的用户故事描述和场景设置，基本就完成了一个完整测试的定义。
验收条件的作用：
以用户的视角表达业务交互过程 为PO与用户的需求理解上提供场景化、具象化的沟通 有助于用户体验友好性的识别和改进 PO与团队需求共识的标准和记录 可视化一个用户故事的粗细粒度 开发与测试对功能实现与质量的共识 需求完成边界的限定 比单纯故事点更为直观的工作估算标准 活文档，用户手册(帮助FAQ)的素材 更公平透明的甲乙方的定价标准 举个例子 在农历新年，中国人的习俗中会有很多活动，如果把过年当做一个产品交付，那么会有很多Epics或Feature，过年三十就是其中一个大故事。那么我会基于BDD，写这么一个用户故事（当然，我也可以拆解出一个更小的用户故事：和家人一起吃年夜饭）：
基于BDD写用户故事的优点 BDD为敏捷开发流程提供了许多优势。 BDD 提供业务关键功能，通过高效的协作和沟通推动产品成功。
提高开发效率 帮助开发人员、测试人员与PO对需求的理解在同一个平面上，帮助团队快速构建和交付更多有价值和高质量的产品，减少返工和修改可降低维护成本。
提高测试效率 帮助测试人员准备测试用例，并进行符合验收条件的用户故事测试。
正反馈循环 以用户故事为中心，用验收条件填补PO-开发-测试之间的认知鸿沟，进行需求拉通与协作对齐。由于所有团队都对应用程序有共同的理解，因此开发人员可以更快地获得反馈，以增强应用程序并走上正轨。
用户体验 从用户角度定义功能使设计人员和开发人员能够从最终用户的角度进行思考，以解决用户难题。 创造了内在的业务价值和增强的客户体验。
文档生成 帮助PO在日常的迭代开发中逐步完善整理产品需求，提升实战性用户故事和验收标准的编写技巧。组织产品PRD文档的信息来源。
写在最后 通过上面的了解，我们知道了行为驱动开发很大意义上是一个PO、开发、测试共创的一个行为。同时也是一个自然而然的过程，我们可以使用行为驱动开发的人类语言描述方法来编写我们的用户故事。行为驱动开发，还需要打破传统的魄力，因为之前几乎没有人会告诉你用户故事写的可以跟逻辑代码一样，作为从代码到需求的桥梁。当你习惯BDD，编写用户故事会变得非常好玩。行为驱动开发，可以使你的测试更加贴近实际的用户行为，从而找到系统的问题所在。
如果你要做完整BDD的话，可以看下面的彩蛋部分。祝各位新年快乐，万事如意！</description>
    </item>
    
    <item>
      <title>团队是敏捷教练的镜子</title>
      <link>https://www.agilewalker.com/team-is-mirror-of-coach/</link>
      <pubDate>Wed, 27 Jan 2021 14:53:45 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/team-is-mirror-of-coach/</guid>
      <description>敏捷教练是团队的镜子，这是一个常识，我认为反之亦然。
前言 在敏捷教练的工作过程中，经常告诉自己的一句的工作职责就是：要作为团队的镜子。作为团队的镜子，敏捷教练或Scrum Master参与团队和个人的工作过程，一个重要的任务是通过观察以及沟通寻找发挥自己职能的时机，帮助敏捷团队的看清自己行为本身有哪些可以继续保持或是可以做的更好，让团队能够发现改进机会。我们今天要说的是在这个过程中，教练也可以把团队作为镜子，发现自己的问题，思考如何让自己做得更好的，以符合团队的现状和目标期望。在敏捷中，传统项目管理的职责被 PO，开发团队和SM所共同分担，PO负责目标，团队负责交付，SM负责流程、团队和改进。作为敏捷领导团队的一员，我们经常自我反思：如何帮团队顶住压力，并给团队注入动力？
在前一篇博客中，总结了个人理解的敏捷含义，本文就从这几个方面谈谈我们今天的话题：
敏捷是流程 敏捷是文化 敏捷是价值 敏捷是改进 敏捷是变革 敏捷是流程 我们有敏捷框架，如Scrum来规范流程，使交付更有条理，更有节奏，像心跳一样，且更有愿景感。
当团队初创的时候，对Scrum方法还不清楚，敏捷教练就需要要导入Scrum基础知识，并在实践中指导团队在交付过程的活动和行为，如每日Scrum站会，评审会，故事点评估等；关注对于个人的教练活动，如帮助新晋PO编写用户故事，人员等。随着每次迭代的完成，团队对交付的流程都会更清晰，更熟练，在流程执行上，教练会表现的更加轻松和相信团队能自己掌握流程，有选择地进行教练活动，甚至自己可以静静地站在旁边作为旁观者。这个时候也可以思考如何取得进一步改进。SM绝对不能离开团队，没有SM的团队即便不思考任何改进，也有随时可能回到解放前的风险。
产品交付中，开发团队永远拥有主角的光环，不是PO，更不是SM。
敏捷是文化 我们拥抱变化，沟通透明，跨职能合作，永远在学习的路上，快速修正自己的问题和目标，绝不延迟。
从传统项目交付走过来的团队倾向控制变更，这时可以让团队意识到，唯一不变的就是变化，在交付中，“永远拥抱变化，随时调整一切”是我们能为客户提供价值的最好原则。敏捷教练需要经常提醒初创团队，学会从“他们”和“你们”到用“我们”进行沟通，在必要的时刻化解危机，避免团队内部互相指责的苗头，对外铁板一块，对内良性碰撞；当团队遇到交付的能力瓶颈的时候，鼓励团队自组织，进行跨职能交付，帮助联通相关职能部门，促进学习型组织的文化氛围建设，发现团队向上的提升空间，鼓励团队尝试新的工程实践。“尽早的试错，不怕出丑，快速调整”是教练帮助团队高质量交付的利器。
敏捷是价值 我们的价值是客户的认可（含显性和隐性），一切不能被认可的工作，在迭代内我们是要尽量避免的，有效的价值流动，是我们的使命。
当新晋PO不擅长对待办列表进行优先级排序时候，SM可以给PO提供指导；当开发团队在规划中选择更多的用户故事的时候，SM可以给到建议，专注在有把握交付（通过验收）的工作上；SM也可以帮助开发团队和PO一起定义验收标准和完工的标准，确保开发团队和PO对交付的价值有一致的标准。
敏捷是改进 我们的改进没有终点，我们一定要比上一个迭代做的更好，这是我们的目标，即使比过去有了很大的改善，也决不满足于当前所处的。我们不断学习，想办法提升，在固定时间内为组织持续创造更多价值，即便这意味着我们可能以减少交付数量为代价。
当团队已经能够按Scrum方法执行交付过程的时候，在效能上或团队氛围上已经远远好于之前的传统交付过程，教练要帮助PO和团队意识到不必满足于目前的成就，我们能做的还有很多，回顾会就是重要的一种形式；有时候团队为了在有限的时间内推进功能，会抵触学习新的工程实践，教练应该告诉团队工程实践也是有价值的工作量，营造改进的安全空间，并可以从相对更支持的人员那里得到帮助推进某项实践；也可以考虑引入工程技术经验丰富的新成员，带动团队的学习氛围。一个有时间和愿意学习的团队是我们都想看到的。
敏捷是变革 我们做的是一件革新的事情，起初一定会面对来自内部和外部的各种不理解，质疑甚至是阻力，如何帮助团队改进，帮助干系人理解，树立信心，如星星之火而燎原是我们的课题。
当组织刚开始进行转型的时候，敏捷教练一定是得到了高层的支持，并从基层开始推行敏捷实践；建立试点团队，遇到不理解或质疑时候，可以多与团队和管理层沟通，教练要了解团队的历史和人员经历，对症下药，并尽快帮助团队取得一定的战果，获得自信心；邀请干系人参与到迭代评审会议中，完全透明的展示产品的进展，听取干系人反馈的同时，敏捷团队不仅得到了宝贵的改进机会，更是建立信任和获得支持的过程，从而为在组织层面推广敏捷实践打下基础。
写在最后 以上是个人的一些理解，拿出来与大家分享，难免偏颇之处，乐与大家共同探讨，我自己常说：敏而求错，捷而使正。天下没有放之四海而皆准的方法和工具，关键在于我们认为人是第一重要的元素的原则，根据时机，环境和事物的变化来调整方法和工具，不断对自己的教练工作提出更高的要求并将其落地。</description>
    </item>
    
    <item>
      <title>每个人都知道敏捷是什么</title>
      <link>https://www.agilewalker.com/what-is-agile/</link>
      <pubDate>Sat, 23 Jan 2021 01:28:02 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/what-is-agile/</guid>
      <description>唯一不变的是变化
很多时候后被问到：敏捷是什么？以下是我的简单理解（不想给大家太大的阅读压力，自己也写不出太多文字）：
1. 敏捷是流程： 我们有敏捷框架如Scrum来规范流程，更有条理，更有节奏，像心跳一样，且更有愿景感。
2. 敏捷是文化： 我们拥抱变化，随需而变，跨职能合作，永远在学习的路上，不断修正自己的问题和目标，绝不延迟。
3. 敏捷是价值： 我们的价值是客户的认可（含显性和隐性），一切不能被认可的工作，在迭代内我们是要尽量避免的，有效的价值流动，是我们的使命。
4. 敏捷是改进： 我们的改进没有终点，我们一定要比上一个迭代做的更好，这是我们的目标，即使比过去有了很大的改善，也决不满足于当前所处的效能。我们不断学习，想办法提升，在固定时间内为组织持续创造更多价值，即便这意味着我们可能以减少交付数量为代价。
5. 敏捷是变革： 我们做的是一件革新的事情，会面对来自内部和外部的各种不理解，质疑甚至是阻力，如何帮助团队改进，帮助干系人理解并获得支持，树立信心，如星星之火而燎原是我们的课题。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>产品负责人的轻度思考，6个小策略，面对迭代Sprint评审会</title>
      <link>https://www.agilewalker.com/sprint-review-advice/</link>
      <pubDate>Sat, 16 Jan 2021 10:36:22 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-review-advice/</guid>
      <description>人类并不善于将事情做得十全十美，于是软件中充满Bug也就不足为奇了。
Sprint评审会议可能是产品负责人最重要的活动，它可以帮助你收集反馈意见，做出正确的产品决策，从而增加创造成功产品的机会。产品负责人可能并不总是清楚谁应该参加会议，应该如何开展这个会议，以及如何收集相关反馈。本文将回答这些问题，并分享一些建议，以帮助你在Sprint评审会上得到更多收获。
邀请正确的人参与 从正确的人那里收集反馈信息对于做出正确的产品决策至关重要：如果你邀请了不合适的人参与，或者关键人物未到场，那么你不太可能收到你所需要的反馈。因此，你应该确保你邀请合适的人参与。
一般来说，邀请那些你需要获得反馈来验证最新产品增量，以及可以帮助你推进产品发展的人参与。这些人通常是你的关键干系人 - 对你的产品有兴趣的人员，以及你需要去发掘的产品用户和需要你提供产品的人。这些人可能包括营销，销售，服务和支持人员以及其他业务部门的人员，具体取决于你的产品和组织。
为了鼓励干系人参与，以及管理干系人的期望，告诉他们为什么需要他们参加会议，以及他们可能会看到什么，这是很有帮助的。
协作但不要畏惧说不 我参加过不止一个很快就结束的Sprint评审会：一位开发团队成员向那些看起来很困惑的干系人和站在这些干系人身后的产品负责人演示了产品功能。然后，Scrum Master询问大家是否有任何问题或反馈意见，这些干系人相互看着对方，有些人说：“干的不错”，“看起来还可以”，然后人们就离开了。这次会议收集到的有价值的意见是零。
因此，要鼓励人们积极参与并分享他们的观点，想法和担忧。使用开放式的问题，比如“你怎么看待我们对注册功能的改进？”，试着理解为什么有人喜欢或不喜欢这个迭代的产品增量。收到诸如“看起来很棒”的反馈可能会感觉很好，但是它并没有提供任何新的见解。为什么这个人喜欢这个功能？有什么可以进一步改善？
让所有的与会者有机会发表他们的观点，欣赏他们的意见和反馈，即使你不同意或难以接受他们。请记住：来自干系人的创造力，知识和反馈可以帮助你做出正确的产品决策，以提供可能的最好的产品。
同时，不要接受某些个人通过这个会议来达成他的个人目的或者某个业务单元的利益。我记得有一次Sprint评审会，当时一位高级干系人在产品负责人和开发团队中直言不讳地提出了他的要求，这当然不合适，也没有提供任何帮助。
作为产品负责人，善待和理解很重要。但是不要让干系人告诉你该怎么做。你对产品负责，你必须拥有最后的发言权，否则你无法获得足够的权力和尊重。
对于没有帮助的想法和不现实的要求，不要害怕说不。基于产品整体战略和产品路线图来决定是否需要接受相关请求。如果你怀疑你的决定，可以使用下一个sprint来测试这个想法或请求是否对用户有益。但请记住，提供一个令所有人满意的产品几乎是不可能的。
考虑把Sprint评审会分成两部分 在有些情况下，将Sprint评审会分为两部分是有帮助的。
第一部分，你和开发团队参与，团队向你演示产品增量。然后，你向团队成员提供反馈意见，并确定哪些条目已完成，我们现在进展如何。你可以使用发布燃尽图来看看进展。如果你在Sprint期间已经有了足够多的参与，并且已经看过相关完成的功能并给与了反馈，那么第一部分的环节你可能根本不需要。
第二部分，干系人参加会议。我发现，作为产品负责人，通常最适合向干系人呈现产品增量：你可能比开发团队成员更好地了解用户如何与产品进行交互并使用新功能。然后收集干系人的反馈意见，以了解我们是否开发出了具有正确用户体验和功能的正确产品。按照上面的建议询问开放式问题，以便了解为什么新功能很好或者为什么需要调整。
把会议分成两个部分，这样你可以与开发团队有一个线下沟通的机会，也可以在Scrum团队以外的人加入之前理清分歧。当你在Sprint期间没有机会与团队互动时，这种方式尤其有用，例如，你和团队不在一个地方办公，或者你忙于访问用户和客户，或参加展会或会议。但是要确保开发团队成员出席整个会议。直接听取干系人的意见是非常宝贵的。
考虑分开收集最终用户和干系人的反馈 Sprint评审会的原意是将所有合适的人聚集在一起，同时收集每个人的反馈意见。如果这对你有效，那很好。但是，我经常发现分别收集用户和内部干系人的反馈信息会更有帮助。为什么？这两个群体往往有不同的观点和利益。
通过用户测试产品增量可以让你了解产品是否适用于你的目标用户群，是否提供了正确的用户体验和正确的功能。与干系人讨论产品增量可帮助你了解是否高效地提供了产品，是否可以开始运营、销售和支撑你的组织了。
更重要的是，最好用不同的技术来收集用户和干系人的反馈：当实现的功能很少时，向最终用户演示产品增量是有意义的。否则，观察或测量用户实际使用产品的方式会更有帮助，例如可用性测试和早期版本。
相比Sprint评审会，这些技术通常需要更长的时间，可能需要几天的时间才能将产品增量发布给（选定的）用户后收集相关数据，这种方式自然而然地把收集最终用户反馈和收集干系人反馈分开了。
用户胜过干系人：如果产品不利于用户，人们不会长期使用它，无论它是多么可销售或者可服务，或者CEO有多喜欢。
不要急于决定 有些情况下，你可以在Sprint评审会议上立即做出产品决策，甚至可以调整好产品Backlog。很多时候，特别是如果反馈的影响比较大，导致产品Backlog变化更大的时候， 花更多的时间来分析反馈，得出正确的结论，然后再决定如何调整产品Backlog，这样你能够得到更多的收获。
此外，如果你决定分开收集用户和干系人的反馈意见，如上所述，你可能不会在Sprint评审会获得相关反馈数据。因此，你应该考虑把收集反馈和数据，跟分析和采取行动分开进行。例如，你可以选择在下一次Sprint计划会议之前开展一个简短、聚焦的产品Backlog工作坊，用这种方式来客观评估这些反馈，并和开发团队讨论如何调整产品Backlog。 或者，你可以在分析工具的帮助下，收集到足够多的用户数据以后，在下个Sprint组织一次产品Backlog的会议来评估这些反馈。
讨论发布进度 想象一下，所有的反馈和数据表明，人们将会热爱你的产品。然而，如果你的产品发布延迟或者超出预算，那么产品可能不会成功，甚至可能不会正式发布。因此，你必须定期确保产品要有进展。
Sprint评审会是一个很好的机会，因为你现在应该知道哪些条目已经完成，距离终点还有多远。此外，参加会议的关键干系人可能需要知道新的产品版本是否能按计划发布，或者是否有延误，因为这可能会影响他们的工作。更重要的是，讨论发布进度将当前的Sprint放到了上下文环境中，并和之前Sprint连接起来，让我们能看到整体的进展。
我喜欢使用发布燃尽图——Scrum的标准工具来跟踪发布进度，并预测项目的后续进展。发布燃尽图展示了产品Backlog中剩余的工作量随着迭代的开展不断减少的趋势。
无论你使用哪种工具：确保它可以帮助你了解你的进度如何，并进行必要的调整：比如，推迟发布日期、只部分满足发布目标、比计划交付更少一些的功能等。</description>
    </item>
    
    <item>
      <title>未来领导者的敏捷品质</title>
      <link>https://www.agilewalker.com/leadership-agile-qulity/</link>
      <pubDate>Sun, 27 Dec 2020 13:56:52 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/leadership-agile-qulity/</guid>
      <description>未来的领导者需要拥有清晰的价值观和愿景，需要真实和敏捷、内在一致并且目的明确。
&amp;ndash; 佚名
传统管理到现代领导 纯粹指挥协调型的管理者，会很快退出历史舞台。如果你是一位还有10年以上才能退休的管理者，一定要成为一个落地干实事的领导者，保持激情，在工作中与大家一起奋战。除非，你真的不在意。
传统管理模式：领导者 - 服从者 这种管理模式，基于不对等的身份认同，在对话场景中管理者始终是领导者，下属始终是服从者。不仅抑制了双方个人的发展，更让企业的发展无法与时代接轨。在这样的场景中，管理者和下属在工作中都没有想象力，企业更不会有创新力，始终处于被动指挥或被动服从的漩涡中。可以解释为：管理者想到的，让下属去干，下属干的过程中无需负责，不问对错。下属辛苦，领导英明。
现在管理模式 ：领导者 - 领导者 这种管理模式，基于共同的身份认同，在对话场景中管理者是领导者，下属也是领导者。不仅提升双方的领导力，为企业培养新的潜在领导者，由此来助力企业本身的在新时代的快速成长。在这样的场景中，管理者和下属在工作中都愿意投入自己的思考，共同参与决策，达成一致，分工执行，这样企业便会产生创新力，在这里共同指挥和执行的是企业的文化。可以解释为：管理者有愿景和目标，与下属分享，共同思考达成愿景的方法，查漏补缺。领导和下属共同成长。
领导的品质 个人认为，未来的领导者必须努力地自我发展来获得领导的资格。我们生活在寻找、甚至期待“速成”的世界，然而领导品质的培养既不可能速成，也不可能是容易的。这里说的是所有具有责任感的领导者都很可能具备的基本品质。
价值观 这里说的价值观，是指个人而不是公司的价值观。真正的价值观藏于人的内心，这些价值观在最深的层面上都是通用的，无论宗教，无论种族，无论国籍。
我们需要由价值观驱动的领导者，拥有具体明确的价值导向，以使它们能够更好地用在最适合的问题上，这里的价值观以集体为根基，而非个人自私的。个人价值观与企业奉行的价值观不相符的时候，会面临一些艰难的选择：离职；或者承担责任，改变现存价值观，使之更符合通用的和更高的价值观；又或者，他级别没那么高，就要在公司内部寻求如何表达自己的价值观，以帮助更多的人。
领导者不仅需要靠价值观驱动，还需要能够将价值观转化为原则，作为个人和团队的工作指南。
以敏捷价值观为例：
敏捷价值观
个体和互动 高于 流程和工具
工作的软件 高于 详尽的文档
客服合作 高于 合同谈判
响应变化 高于 遵循计划
敏捷的原则
我们最重要的目的，是通过持续不断地及早交付有价值的软件使客户满意。
欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化。
经常的交付可工作的软件，相隔几星期或一两个月，倾向于采取较短的周期。
业务人员和开发人员必须相互合作，项目中得每一天都不例外。
激发个体的斗志，以他们为核心搭建项目。提高所需的环境和支援，辅以信任，从而达成目标。
不论团队内外，传递信息效果最好效率也最高的方式是面对面的交谈。
可工作的软件是进度的首要度量标准。
敏捷过程倡导可持续发展。责任人、开发人员和用户、要能够共同维持其步调稳定延续。
坚持不懈的追求技术卓越和良好设计，敏捷能力由此增强。
以简洁为本，它是极力减少不必要工作量的艺术。
最好的架构、需求和设计出自组织团队。
团队定期地反思如何能提高成效，并依次调整自身的举止表现。
愿景 人们通常还是会根据实现短期财务业绩的能力来选择领导者，而不是根据他们的愿景，长远的愿景作为一种领导品质被削弱和低估了。当今世界各方联系紧密，交流即时迅速，因此，全方位的系统思考已经非常有必要，而且，将来它更不可获取。这自然而然成为个人成长的一个重要产物。
领导者的愿景分为两部分。第一部分是“展望”和“梦想”的能力，即要创造一个清晰而大胆的画面，也是领导者所希望追求的长期未来。第二部分是“有远见”，以鼓舞人心的方式传达这种画面的能力。通过对愿景的沟通和由彼此迸发出的激情，追随者才会产生。
真实 做真实的自己，意味着把自己从对于下列事物的恐惧中释放出来：害怕失败，害怕与众不同，害怕看上去很傻，害怕他人会有什么看法以及许许多多以自我为中心的害怕。有些管理者，刚刚学习了某个流行的概念，由于害怕失去控制或威望，就在一些专业的会议上发表“指示”，虽然现场的专家们碍于体面并没有提出异议，但也不免被暗暗贻笑大方。不仅缺少谦逊的品质，也让人感觉不够真实。绝对的真实，总是与最好的价值观和愿景密切相关。
敏捷 俗话说得好：唯一不变的就是变化。当今世界变换莫测，领导者必须具备灵活性、变革、创新和放弃过时的心爱的项目和过时的目标的能力。“主动迅速改变”是未来生存的必要手段。
敏捷是两方面的个人发展的成果，一方面是摆脱固有的成见和旧的信念与假设的束缚；另一方面是消除阻碍人们对改变持开放态度的对未知的恐惧。
尝试不同的事情可以锻炼心智的敏捷性，身体也会受益。做了从未尝试的事情，你会发现自己扛过来了，习惯是避免恐惧的重复行为，这就是为什么我们在组织转型中，需要重复与过去不同的行为方式。打破习惯，开辟了新的途径，一定能带给你新的喜悦。
一致性 领导者内在的或者心理上的一致性也是一种重要品质，它指的是人的内心不同次级人格的一致性与合作性。领导者的决策取决于他最重视什么，或者说他自己的价值观是什么，他奉行的是否与宣传的那样一致。有些管理者，在给别人建议的时候头头是道，并很乐意跟进具体的工作，看起来与公司价值观高度一致；然而，反过来被给予建议的时候，推诿抗拒，能不干就不干。这样的表现并不是一个合格的领导者。每个领导者都需要发展他内心的一致性。当我们内心发展时，我们的价值观会出现改变或者拓展，所以，这种内心冲突是我们成熟过程的自然结果。
未来的领导者 未来的领导者需要有清晰的价值观和愿景，还要真实和敏捷，并且保持内心的一致性。如果加上自我觉察、责任感以及自信和良好的情商，就是一个强大的组合，事实上，它们就在你的内心深处，只等待你去发现。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>责任模型 – The Responsibility Process</title>
      <link>https://www.agilewalker.com/the-responsibility-process/</link>
      <pubDate>Sun, 20 Dec 2020 02:41:05 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/the-responsibility-process/</guid>
      <description>虽然每个人都在谈论责任,但是在各种情况下,我们都不负责任。
前言 敏捷团队重视责任，敏捷思维和 Scrum文化中最关键的一个部分是责任。 Christopher Avery创建了一个非常好的责任模型，解释了责任如何发挥作用。在长期的进化过程中，人们的大脑得到了训练，能够迅速做出决策。每当出现一个小问题时,大脑将提供如何处理这个问题的选项。
责任流程选项 第一个可能的解决方案：否认，这是人类的大脑的第一反应，通常是：“我已经编码了，我的代码没有问题。” 第二个可能的解决方案：指责，在Scrum环境中，指责可能会指向任何一个人，通常是：“我的代码是正确的，运行不了是他的错。” 第三个可能的解决方案：辩解，人们在没有得到预期结果时，经常使用借口。通常是：“在软件开发中，我们经常碰到技术难题，对吧？事情就是这样。” 第四个可能的解决方案：羞愧，团队遇到问题可能会表示沮丧，通常是：“对于这个产品，我们没有足够的经验，太难了。”。 第五个可能的解决方案：义务，有人告诉他们应该这样做，因此，他们不用理解就这样做了。通常是：“由于Scrum，我们开站会是必需的。” 第六个可能的解决方案：放弃，人们任何时候都可以决定放弃。通常是：“我不会去解决它，这对我来说并不重要。” 第七个可能的解决方案：责任，发生在决定承担责任时，这是责任模型的最终层次。通常是：“下一次，我们可以采用什么方法，这样以后就不会发生同样的事情了？” 写在最后 只有第七个措施才是真正的负责任。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>产品发布计划</title>
      <link>https://www.agilewalker.com/product-release-plan/</link>
      <pubDate>Sat, 28 Nov 2020 08:48:42 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/product-release-plan/</guid>
      <description>&amp;ldquo;不谋万世者，不足谋一时；不谋全局者，不足谋一域。&amp;rdquo;
-陈澹然[清]
序言：
这篇文章，让我想到了全局观，应该是作为产品负责人具备的基本素养，不仅给产品以愿景，给团队以方向，同时也能帮助产品负责人与干系人很好的进行沟通。而发布计划应该是这种素养的可视化的表述之一。发布计划向上衔接面向管理层的产品愿景和路线图，向下衔接面向团队的Sprint计划，对产品某次发布有个明确的规划，连接愿景与落地。个人的经验而言，可以让产品负责人与团队一起，结合用户故事地图工具一起来做发布计划。
2015年4月27日，一架皇家空军C17运输机飞往尼泊尔，装载了人道主义援助和物资。飞机的速度，每个货盘离开C17所花费的时间以及货盘的顺序确定了哪个货盘将降落在哪里&amp;hellip;.有了愿景，你需要制定计划以整合投资和资源来开发产品。你已经有一个产品待办事项，并在使用产品待办事项条目（PBI）用以形成日常的产品增量。你已经在产品待办事项中估算了产品待办事项条目，并知道所有团队的速度。
产品负责人需要能与干系人沟通下一个发布的时间以及该版本包含哪些产品待办事项条目。 有时候，发布日期是一个重要的约束，而有时发布内容是主要的约束。 当同时约束日期和内容时，会出现过度约束的问题引起的风险，产品负责人必须使这种风险透明化。
如果开发团队可以通过明确的日常产品增量看到承诺的长期方向，那么他们更有可能投入更多的精力去实现这一目标，并且更有可能在实现产品愿景的过程中构建正确的事物。
如果对下一个版本的内容缺乏明确的共识，则可能会给干系人一种印象，即在下一个版本发布之前，范围是可以协商的。 结果，发布日期可能会受到功能蔓延的影响，并且团队最终一再推迟交付。
当产品负责人对市场，团队和干系人都熟悉的时候，信任度很高，仅凭概要计划和评估就足够了。 另一方面，如果产品负责人是刚开始接触团队，市场或利益相关者，信任度低，或者该计划包含高于正常水平的风险，则可能需要更详细的计划和评估。
孤立地创建发布计划的产品负责人会错失开发团队的智慧和见解。 此外，团队不会对计划有责任感，因此他们不太可能对任何预测都全情投入。因此：与开发团队一起创建初始产品待办事项，根据你计划实现的愿景并最大化价值的产品增量顺序进行沟通。 也就是说，使用待办事项制定发布计划。 使用该计划获得必要的投资者承诺和团队预测来开发你的产品。
我们的焦点始终放在产品级别上的进展。 如果你有多个开发团队通过一个产品待办事项一起工作，那么他们可以使用其历史速度来预测在当前的产品待办排序的情况下，这些团队一起将产生的日常产品增量， 但是这种方式不依赖于将特定的产品待办事项预先分配给各个团队。 由于速度各不相同，因此任何一组日常产品增量的预期进度也会有所不同，在任何给定的交货日期，日常产品增量的内容也会有所变化。
发布计划是下几个发布的可交付成果的有序列表。 即使团队的速度有微小的差异，但经过短短的Sprint后，交付进度仍变得不确定。 根据经验，超过三个Sprint会包含更多的猜测，而不是统计上合理的预测。
包括固定工作，发布计划考虑了使PBI完成的所有工作。 对于任何PBI，团队不得将“强化”工作或“质量工作”与其余工作分开。 产品负责人会定期根据对市场和团队速度的最新理解更新发布计划。
从顶部开始逐步解决待办事项，将每个PBI的估算单位（例如估算点）相加，直到达到已知团队速度的总和。 下一个版本的日常产品增量包括这些位于产品待办事项列表顶部的条目。 继续向下推进待办事项工作，将PBI放到日常的产品增量中，并将日常的产品增量分配给后续版本。 根据此计划更新产品路线图。
例如，假设团队估计先前草图中的每个PBI需要10个估计点的工作。 该团队在7月15日之前有6个Sprint的可用时间，我们想知道届时我们将能够交付什么。
团队有一个速度保持在每个Sprint 15至20点之间的历史。 所有其他考虑因素都相同，团队将在7月15日之前完成90到120个估算点的工作。我们可以从待办事项的顶部算起PBI估算值，在这里，每个条目的估算值是10点，我们相应地预期团队将完成的工作量。 在这里，所有其他因素都相同时，他们将完成9到12个PBI。
从理论上讲，可以对这些计算采取更严格的方法：例如，规定15到20之间的速度范围涵盖过去大约五个Sprint的所有速度的两个标准偏差。 然后，从理论上讲，会声称下一个Sprint的预测交付具有95％的确定性，依此类推，随后的Sprint的确定性会更低。
然而，实际上，速度，团队构成，产品待办事项的内容（它会发生变化！）和市场条件等参数变化很大，以至于即使在统计确定性上，外部因素对差异的影响也会破坏任何预测的尝试。 尽管如此，这个方法仍是面对未来的合理指标和通用的预测法，就像我们可以或多或少地依赖天气预报员的预测。
一个常见的敏捷短语是“将决定推迟到最后一个必须决定的时刻”的建议。 某些PBI的目标日期可能构成这样的“必须决定的时刻”（期望的或强制的交付日期），然而，负责任的精益实践会推动决策而不是推迟决策。
发布计划用产品待办事项作为框架，以尽可能早地做出决策（例如，考虑PBI之间的依赖关系，或者将PBI或日常产品增量与发布日期保持一致）。 在所有其他条件相同的情况下，尽快开始工作很重要，因为设计和实施有助于使紧急需求尽早可见，并为团队提供有关风险的早期数据。 推迟工作或驱动工作的决策只会延迟不可避免的事情。 使用这种方法，你可以根据团队速度更新评估的发布日期。 这个方法在全世界都有广泛的Scrum实践。
产品负责人可以通过发布计划来确定长期价值，该发布计划应说明PBI之间如何相互加强，或者可以基于高价值优先，计划项目样式的一系列发布。 然而，团队不应将此类评估值当做任何给定PBI的确切日期，并且不应将交货日期解释为具有约束力的承诺。 发布计划基于估计，并承认灵活性而非必然性。 Scrum保持交付日期固定不变，因此Sprint的结束日期是神圣的，此时团队将尽力而为。 敏捷性的代价就是有些不确定性。
也可以在Sprint结束前发布一些PBI，每次发布一点日常产品增量，可以让交付流程顺畅，并最大程度地减少已完成工作的堆积。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>Scrum框架的局限性在哪里？</title>
      <link>https://www.agilewalker.com/where-scrum-limits/</link>
      <pubDate>Mon, 28 Sep 2020 13:26:15 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/where-scrum-limits/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;By Mark Levison&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Posted on January 29, 2019Posted on January 29, 2019&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;我经常在研讨会上被问到：“我们在哪里不应该使用Scrum？” 精简的回答是，在很多情况下Scrum框架都不适合。 但是，要对这个问题给出更完整和有效的回答，首先，我们需要知道Scrum为什么和什么时候有效以及成功的关键条件是什么。 然后，我们可以拿出不适合的示例。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何理解并应用精益敏捷Kanban看板</title>
      <link>https://www.agilewalker.com/understand-kanban/</link>
      <pubDate>Fri, 10 Jul 2020 03:45:18 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/understand-kanban/</guid>
      <description>我引入看板系统的目标是：防止过载、控制工作流的波动性，以及触发渐进式变革。
&amp;ndash;大卫.安德森
看板的基础知识 看板是一种用于管理产品创造的方法，该方法强调持续交付，同时又不增加开发团队的负担。 像Scrum一样，看板是旨在帮助团队更有效地协作的流程。它是一种可视化工作流程的方法。为了在需求与可用产能和瓶颈之间取得平衡，该框架在下面的工作中具有很高的生产率和效率。
临时请求(按需的任务) 计划外工作 生产支持 简要历史 在1940年代后期，丰田公司从超级市场那里找到了更好的工程流程。 他们注意到商店的店员通过商店的库存而不是供应商的库存来补充货品。
只有当一个货品接近售罄时，店员才能进行订购。 超市的“实时”交付流程激发了丰田工程师重新考虑他们的方法，并开创了一种新方法-看板系统-该方法可以使库存与需求匹配，并实现更高的质量和产量水平。
看板，拼写为Kanban，是日语中的“信号板”，表示“可用产能（工作）”。 看板是与精益生产和实时生产（JIT）有关的概念，它被用作排产系统，告诉你要生产什么，何时生产以及要生产多少。看板成为支持整个生产系统运行的有效工具，也是促进改进的很好的方法。
原则 在看板方法上实施软件增量是一个基于拉动的系统，它可以帮助团队以可持续的速度和产能进行交付，减少了工作和时间的浪费。 保证这一点，就需要遵循以下看板的基本原则。
1. 可视化工作
看板工作面板的可视化模型及其工作流程使范围和功能透明化，有助于观察和检查从待办事项到完成的工作流程。 这样会让工作可见，也包括阻塞，瓶颈和队列以及即将进行的工作，这有助于团队制定策略，是继续进行现有的工作或将新工作带入。
2. 限制在制品WIP
团队为看板面板中的所有“进行中”的列共同定义了一个限制，例如分析，开发，测试等。此WIP限制实现了基于拉动的系统，因为只有在该列下的工作总数少于其上限的情况下才可以将工作从上一列拉至当前列。
这有助于平衡基于流的方法，团队不会开始并承担过多的工作。 它减少了浪费，并帮助团队专注于先完成后开始。
3. 聚焦在工作流
要完成一项工作并增加价值，它必须经历其开发过程的多个阶段。 如分析，开发，测试，评审等。为了获得看板的价值，团队需要专注于从启动到完成的工作流程。 通过遵循上面2条原则，可以帮助你专注于流程。
专注于工作流会使团队可视化即将到来的的瓶颈并对其采取行动。 以便保持流动。 团队经常制定工作的策略以优化流程。
把看板和现实生活相关联 我们已经学习了看板的基础知识及其原理，让我们尝试将看板流程与现实生活联系起来。 假设你已经知道并正在实践Scrum，我们将在其中执行定义的时间框的迭代。 我们提交一堆故事，对其进行处理2到3周，然后完成迭代，并再次计划新的一堆故事以进行下一次迭代。 在看板中，我们不会为迭代，时间框或冲刺提交故事。 我们做的有些不同。
在下面的示例中，我们将Scum和看板与现实生活联系起来。 假设人们是故事，放映厅是一次迭代，放映时间是迭代时间。
关联Scrum流程和现实生活 这个案例说明了放映厅中的人员流动，一次是一群人。 如果我们假设人是用户故事，并且将时间显示为迭代或时间框。 然后，你可能会注意到一群人一起在放映厅里走来走去。 我们有明确的座位容量和放映时间。 为每次放映安排的人在放映开始之前已预先计划好了。
关联看板流程和现实生活 这个案例说明了门卫允许公园中的人流是一个接一个的。 如果我们假设人是用户故事，那么公园就是看板面板。 然后，你可能会注意到没有定义的公园放映时间，因为它是24小时开放的。 进入公园或在公园内漫游并出来的人不在同一个人群中。 我们没有容量和演出时间。 但是，公园的管理层决定一次不允许在公园内同时容纳6人以上，以提高公园内人们的舒适度。
在此图中，让我们尝试用Scrum术语关联场景。 如果我们假设人是用户故事，那么在大厅外面等待下次放映的人就是Backlog中的用户故事列表。当前的放映厅放映就是当前Sprint或迭代。观众是冲刺的故事。 显示时间是冲刺持续时间。 放映厅容纳人数是团队对冲刺的产能。 已经看过电影的人是以前冲刺中的“完成”故事，可能已经确定已发布或已部署。
在这里，让我们尝试用上面的图片来映射看板术语。 假设人员是用户故事或任务，公园是可视看板面板。 排队等候在外面的人是当前的看板Backlog。 放映时间没有定义，“最大容量”没有限制，但是管理层决定不允许面板中的故事超过6个。 已经从公园出来的人就是已经可以部署的用户故事。 管理层正在统计出来的故事，以便允许进入新的故事。看板面板(公园)内的故事(人)没有确定的开始或结束日期。
上面图片中进行解释，以解释Scrum流程。
上面图片中进行说明，以解释看板流程。</description>
    </item>
    
    <item>
      <title>博客生产线：WordPress(平台)&#43;Typora(编辑器)&#43;GitHub(图床)</title>
      <link>https://www.agilewalker.com/wordpress-typora-github/</link>
      <pubDate>Tue, 07 Jul 2020 10:23:26 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/wordpress-typora-github/</guid>
      <description>前言 写个人博客的方法和平台有很多，这里介绍的是用个人搭建的WordPress(平台) + Typora(编辑器) + GitHub(图床)的方法，用Markdown语法写文章。
自从用了Markdown写博客，感觉还是挺方便的，现在很多平台都支持MD。这样保证了在各个平台上的兼容性，如果未来希望转移到其他基于GitHub的静态博客，如Hugo，也是个不错的准备。况且很多MD的编辑器非常棒，像Typora这么优秀的工具，不仅仅是个MD编辑器，Typora和图床工具及图床服务可组成一个博客生产的工具流水线，让写作者关注在一个编辑器里就可以。
步骤 1. 在WordPress中使用markdown，准备写作平台 如果要在Wordpress中用Markdown语法写作，需要安装一个Markdown插件WP Githuber MD，可以很好的支持Markdown语法和所见即所得的功能。然后编辑器就成这样了
2. 用Typora+PicGo+GitHub，准备编辑工具流水线 Typora是一个MD编辑器，还同时能支持多个图床的工具，其中就包括PicGo(需下载安装)。将PicGo中的图床链接配置指向GitHub上创建好的专门用来做图床的库的相关链接就可以。文章编辑过程中可以无缝将黏贴过来(或添加)的图片，保存到本地指定目录下，对图片右键鼠标可以直接上传到GitHub图床上，并且返回在图床上的图片链接，所见即所得，图片链接直接显示在编辑的文章中。
![image-20200707175610196](/Volumes/Backup/oschina/agilewalker/agilewalker_blog/418 博客生产线：印象笔记Markdown+Typora+PicGo+GitHub图床/image-20200707175610196.png)
3. 将文字复制到 wordpress博客，准备发布文章 可以把在Typora中写好的MD内容，完全复制到Wordpress新文章中，添加必要的关键字信息，即可发布。发布后，相关的图片也会很好的展现(因为已经在Typora编辑阶段上传了图片)，这里可能会有一些图片展现的速度延迟问题，毕竟是在GitHub上的免费图床。
4. 当博客发布后，准备在印象笔记创建备份 印象笔记也是个比较友好的MD编辑器，虽说每篇文章都有本地存档，我也会定期提交GitHub，总还是需要第二个云端备份，就创建印象笔记Markdown文档和云同步功能。保留一个当时提交时候的版本。至少以后还能找回来99%的内容。
5. 发布到其他平台 有很多不错的云端工具，可以将写过的文章同时发布到多个自媒体平台，微信公众号，简书，CSDN，掘金，今日头条，知乎。得益于主流平台对Markdown的支持。虽说公众号不支持MD，可以直接复制Typora的预览窗口内容到公众号文章编辑器。所见即所得吧。
写在最后 写本文为了提供了一种从工具层面提高自媒体作者文章输出效率的思路和方法。结合自己的经历和身边朋友的困扰，希望写文章的过程中除了内容以外，尽量减少不必要的时间投入，专注在内容创作中。借此，抛砖引玉，如果你有更好的方案，欢迎在这里与大家分享。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」规模化敏捷Spotify模型的工程文化</title>
      <link>https://www.agilewalker.com/%E3%80%8C%E8%A7%86%E9%A2%91%E3%80%8D%E8%A7%84%E6%A8%A1%E5%8C%96%E6%95%8F%E6%8D%B7spotify%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%96%87%E5%8C%96/</link>
      <pubDate>Wed, 24 Jun 2020 02:04:10 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/%E3%80%8C%E8%A7%86%E9%A2%91%E3%80%8D%E8%A7%84%E6%A8%A1%E5%8C%96%E6%95%8F%E6%8D%B7spotify%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%96%87%E5%8C%96/</guid>
      <description>「视频」规模化敏捷Spotify模型的工程文化 在这里开视频
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」6分钟说如何设定一个好的OKR(搬砖推荐)</title>
      <link>https://www.agilewalker.com/v-how-to-set-okr/</link>
      <pubDate>Wed, 17 Jun 2020 02:30:43 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-how-to-set-okr/</guid>
      <description>「视频」6分钟说如何设定一个好的OKR(搬砖推荐) 在这里开视频
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>Scrum入门系列PPT之-Scrum介绍</title>
      <link>https://www.agilewalker.com/scrum-beginner-ppt-intro/</link>
      <pubDate>Wed, 03 Jun 2020 07:07:25 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-beginner-ppt-intro/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这不是结束，甚至不是结束的开始，但这毕竟是开始的结束。&lt;/p&gt;
&lt;p&gt;-&amp;ndash; 温斯顿.丘吉尔&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>翻译敏捷行业专业外文，不只是谷歌翻译</title>
      <link>https://www.agilewalker.com/translation-beyond-google/</link>
      <pubDate>Thu, 21 May 2020 11:36:53 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/translation-beyond-google/</guid>
      <description>流行但愚蠢的态度是，一个好的经理在任何地方都可以成为一个好经理，而不需要对他所管理的生产过程有特别的了解
—爱德华.戴明
前言 孔子说：一日而三省吾身。应该说是体现了敏捷思维在个人哲学意识迭代中的最早的实践应用。但真的要做到，确实有点难。改成三日一省如何？至少三天才能对一件事情有比较客观的初步认知。每次反思就像Scrum框架里的一个Sprint，总要有个时间盒子，结束后能看到增量价值交付。这里就不接着谈Kanban了，敏捷方法不是今天的主题。该反思的还是要反思，但不用太频繁。
说说翻译 偶尔会做些敏捷行业外文的翻译，一方面借此提升自己的行业英语水平，另一方面对行业的知识通过翻译的形式，加深自己的理解并促进工作实践。师夷长技以制夷，这里谈不上“制”，只为提升自我。
很多人听到翻译，觉得现在应该挺简单，有谷歌翻译。不排除每个人的背景不同，本业余人士的个人理解是，一篇专业的翻译文章需要至少经历以下几个步骤：
第一步 谷歌翻译，当今社会效率至上，让人工智能解放人类的一部分时间。把译文的基本的框架涂鸦出来，当然，这个版本往往是惨不忍睹，你懂的。很快能完成。
第二步 专业翻译，译者需要有较长时间的专业知识沉淀，理解和实践经验，结合领域专有思维。如同本文开头，戴明说的那句话。例如，agile在英语中是形容词“敏捷的”，可自从本世纪初有了大写A的Agile，这个词就成了一个专有名词，敏捷宣言的“敏捷”，成为了软件开发行业甚至日后的各大行业中更先进的理念。对每个行业来讲都是一样的，专业的事情交给专业的人。
第三步 共情翻译，译者需要通过文字与优秀的作者共同感受。需要点虚拟穿越的想象力，进入作者在写作那一刻的环境，思想和情绪等，翻译出来冰冷的文字，也是知识，但无法把作者的情感传达给读者。例如，something must not become stale，简单翻译：某事一定不能太久，结合上下文，感受作者的心情和中文的习惯，或许可以这么翻译：我们一定不能把某事拖太久。
第四步 文化翻译，结合中华5000年的文化特点。让浑厚的中华文明来给文章润色，这就是好好学习语文和历史的好处了，也可以经常这么教育孩子。 翻译时，我们可以考虑用成语，这是中文的很特别的地方。例如，Empty List，直接翻译就是 “空的清单”。总觉得这么翻译太干，有时候可以结合上下文，翻译成“空空如也的清单”也许就更朗朗上口。
第五步 通读三遍，调整标点符号，段落，错别字等。文字能简单就简单，字数越少越好。首先自己觉得顺畅，标准是，把自己当成读者。帮读者易于理解，节省阅读时间，是作者和译者共同的责任，接着就可以把译文传递到下一步。
第六步 专家审校，最后，译文由优秀的行业专家的审校是很重要的，颇有些XP中结对编程的味道，结对翻译？一个人总是难免出错，考虑不周，有同行专家的审校总是让人心里踏实很多。
写在最后 即便经历了前面六个步骤，要告诉自己的是，译文一定还有改进的空间，能够翻译的更好，这也是敏捷人的共同思维模式。不过，翻译工作该交的时候还是要交，从完成到完美的过程永远不会结束，所以，完成比完美更重要。优秀的翻译文章和书籍都凝聚了相关行业专家心血和对行业长期投入而获得的领悟，除此，还需要足够的文学，历史，哲学等方面的知识。
保持社交距离。勤洗手。 —
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>有价值的产品=设计思维&#43;精益创业&#43;敏捷方法</title>
      <link>https://www.agilewalker.com/designthinking-leanstartup-agile/</link>
      <pubDate>Sat, 16 May 2020 15:06:55 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/designthinking-leanstartup-agile/</guid>
      <description>设计思维是一个反复的过程，在此过程中，我们要努力理解用户的痛苦，挑战性假设，重新定义问题，以便创建新的策略和解决方案。
通常的设计思考阶段如下：
“精益创业是一种用于开发业务和产品的方法，旨在缩短产品开发周期并迅速发现拟定的业务模型是否可行； 这是通过结合业务假设驱动的实验，迭代的产品发布和经过验证的学习来实现的。” —维基百科
用埃里克·里斯（Eric Ries）的话说：“精益创业公司提供了一种科学的方法来创建和管理创业公司，并将所需的产品更快地交付客户。 精益创业方法教你如何驾驭一家创业公司，如何操纵，何时转向，何时坚持不懈以及如何以最大的加速度发展业务。 这是新产品开发的原则方法。”
将设计思维，精益创业和敏捷方法结合起来 简而言之，设计思想可以帮助我们提出更好的想法，精益创业可以帮助我们将想法转变为可行的业务模型，敏捷方法可以帮助我们以快速，渐进的方式将产品投放市场，从而获得持续的反馈，适应和准确交付客户想要的东西。
通过将设计思维，精益创业和敏捷方法结合起来，不仅可能提出更好的想法，而且将这些想法变成可行的盈利方式，为客户创造即时价值而交付产品，不会导致成本和进度井喷，并让员工有机会参与更多有意义的工作。
最后一点很关键，所有这些方法都使用户参与到频繁的反馈循环中，因此我们可以衡量进度并进行调整，从而最大程度地创造价值。这与以前的过度规划方法不同，通常要连续数月或数年才能完成，甚至到项目结束时都没有成就感。没有人愿意花数月或数年交付不产生影响或带来价值的东西。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」敏捷开发Scrum事件：产品待办事项梳理</title>
      <link>https://www.agilewalker.com/v-product-backlog-refinement/</link>
      <pubDate>Wed, 13 May 2020 15:47:37 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-product-backlog-refinement/</guid>
      <description>如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。
访问以下链接
「视频」敏捷开发Scrum事件：产品待办事项梳理
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷开发Scrum七大事件之3：产品待办事项梳理</title>
      <link>https://www.agilewalker.com/product-backlog-refinement/</link>
      <pubDate>Wed, 13 May 2020 14:57:18 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/product-backlog-refinement/</guid>
      <description>前言，在本文中，我们将从以下几点了解关于产能规划的话题：
&amp;lt;div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 产品待办事项梳理有很多优点，下面列出了其中的几个。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;standard-arrow list-divider bullet-top&amp;quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpFirst&amp;quot;&amp;gt; 通过消除用户故事的不确定性和未知事实来提高效率。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 提前识别依赖性（在团队和跨职能部门内）和风险，以制定相应的计划。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 更好的估算并避免返工（开发，测试和实施）。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 使开发人员和测试人员了解其要求，从而节省了开发团队在sprint周期中进行进一步讨论的时间。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 确保故事遵循INVEST原则，提供更易于理解的成熟的用户故事 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 有效的Sprint计划：如果在进行Sprint计划前，故事已经进行了梳理和优先处理，PO和开发团队不需要花费大量时间梳理或估算故事。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 强调最高优先级以挑选故事进行梳理，计划等。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 给产品负责人提供多次机会，根据实际需要提供更多信息来细化需求。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 在梳理过程中，如果开发团队遇到一些疑问或问题，并且需要更多时间与PO进行协作，则团队可以将梳理会议中的故事搁置下来，以便PO可以获得更多的信息来补充给故事，并将故事包含在后续梳理会议中。 &amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;m_7654132575523233708gmail-MsoListParagraphCxSpMiddle&amp;quot;&amp;gt; 更好地管理产品目标，Sprint目标和里程碑会议。 &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-full wp-image-1179&amp;quot; src=&amp;quot;https://www.agilewalker.com/wp-content/uploads/2020/05/productgroom2_.gif&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;1024&amp;quot; height=&amp;quot;577&amp;quot; /&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_row-fluid dt-default&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-12&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid vc_custom_1493919898038 vc_row-has-fill&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-12&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h2&amp;gt; &amp;lt;i class=&amp;quot;fa fa-hand-o-right&amp;quot;&amp;gt;谁对待办事项梳理负责?</description>
    </item>
    
    <item>
      <title>今天是五一劳动节，我不能忘了劳动，牢记我们的敏捷原则。最后一张图推荐做手机墙纸</title>
      <link>https://www.agilewalker.com/2020-5-1-labor-day/</link>
      <pubDate>Fri, 01 May 2020 13:09:49 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/2020-5-1-labor-day/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>「视频」10分钟的敏捷估算教学，全面实用，理解深刻了</title>
      <link>https://www.agilewalker.com/10-minute-agile-estimation/</link>
      <pubDate>Wed, 29 Apr 2020 04:47:52 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/10-minute-agile-estimation/</guid>
      <description>如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。
访问以下链接
「视频」10分钟的敏捷估算教学，全面实用，理解深刻了
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>运用GROW模型，提问的艺术，敏捷教练基本功</title>
      <link>https://www.agilewalker.com/how-to-use-grow-model/</link>
      <pubDate>Tue, 28 Apr 2020 14:13:58 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-to-use-grow-model/</guid>
      <description>GROW模型是教练过程中提问的方式，代表有目的决策的四个组成部分。 用首字母缩写，GROW代表：
公众号原文：运用GROW模型，提问的艺术，敏捷教练基本功
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」让产品的业务更清晰，在敏捷文化中，影响地图的艺术</title>
      <link>https://www.agilewalker.com/v-impact-mapping/</link>
      <pubDate>Tue, 21 Apr 2020 11:59:12 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-impact-mapping/</guid>
      <description>让产品的业务更清晰，在敏捷文化中，影响地图的艺术。另一个很棒的视频在这里。
[https://player.youku.com/embed/XNDY0MjU0MTg0NA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>在线获取Scrum Alliance的A-CSM认证证书，上海和北京培训后必备攻略</title>
      <link>https://www.agilewalker.com/how-to-get-a-csm-paper-after-training/</link>
      <pubDate>Tue, 21 Apr 2020 10:44:05 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-to-get-a-csm-paper-after-training/</guid>
      <description>今天要说的是关于如何在完成敏捷联盟(Scrum Alliance)的A-CSM培训后，在线获得证书的故事：
完成A-CSM培训 填写Scrum工作经验 接受CST签发的证书 提交你的账号下SEUs 分享你的徽章 一、完成A-CSM培训
敏捷联盟要求必须参加授权的CST培训，才能申请获得该认证。所以如果你已经完成了A-CSM的培训课程，就可以开始准备申请这个认证了。 先吃点东西庆祝下你已经完成了这次学习😝
二、填写Scrum工作经验
这一步最关键，也很多细节需要注意，上图：
登录Scrum Alliance &amp;ndash;&amp;gt; My Dashboard
在Dashboard页面中找到这个按钮在编辑个人信息页面，Work Experience栏，添加工作经验，如图：
填写完工作经验的基础信息后，记得在下图中1这个地方打钩，在内容2的填写关键要保证两点：Select Scrum Role 要选择 ScrumMaster（切记，审核会比较快）；Scrum经验的时间区间选择要大于1年。然后就更新工作经验即可。
填写完Scrum经验后，就告诉CST老师，有了你的Scrum经验，他会及时帮你注册认证的信息，然后就可以到下一步了。
三、接受CST签发的证书
一般老师操作完，你会在1个小时内收到Scrum Alliance的邮件，你就可以继续操作了。
登录Scrum Alliance &amp;ndash;&amp;gt; My Dashboard，发现界面出现了如下的变化，说明老师给你注册的认证已经生效，需要你再确认接受一下即可。
你确认完后，认证就会落入Active Certifications里面来。有效期两年。现在，你的A-CSM认证完成，证书获得了。接下去两个步骤也很重要，请一定要往下读&amp;hellip;
四、提交你账号下的SEU 和 PDU
SEU是Scrum联盟给参加培训认证的激励，就是类似于PDU的点数，可以用来延续现有的证书。
登录Scrum Alliance &amp;ndash;&amp;gt; My Dashboard，找到以右下按钮，Manage SEUs，
培训时间通常按每天8小时计算，每小时的培训时间获得1个SEU。如果两天的培训就是16个SEU，填写好后，Submit提交就可以了，后台会做后期的审核。
至于能给到的PDU和提交方式，每个培训机构不同，可以咨询具体机构相关问题。
五、分享你的认证徽章
当你认证完成后还会收到第二封邮件，邮件中第一个链接就是让你获得自己的数字认证徽章。这是一个对互联网公开的页面链接，上面有你的认证信息，方便分享到你的社交媒体及网站上。
具体方法参考链接：https://www.scrumalliance.org/digital-badging
希望以上内容对大家有帮助，再次祝贺各位获得A-CSM认证，改变自己是永恒的主题。
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」15分钟，用产品负责人的视角看Scrum敏捷软件开发</title>
      <link>https://www.agilewalker.com/agile-product-ownership/</link>
      <pubDate>Sat, 18 Apr 2020 08:53:26 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-product-ownership/</guid>
      <description>15分钟，用产品负责人的视角看Scrum敏捷软件开发
[https://player.youku.com/embed/XNDYzNzY5NTc0MA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷Scrum开发7大事件之2：团队Sprint产能规划</title>
      <link>https://www.agilewalker.com/sprint-capactiy-planning/</link>
      <pubDate>Thu, 16 Apr 2020 12:49:55 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-capactiy-planning/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解关于产能规划的话题：
&amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 产能规划Capacity Planning，是指意估算和计算敏捷团队在每个迭代中能贡献的有效工作能力。 有两种广泛使用的产能测量单位，在我的其他文章中有时会写成“能力规划”。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 1. &amp;lt;strong&amp;gt;故事点&amp;lt;/strong&amp;gt;，这是一种计算速度的简单方法（最后6到10个Sprint接受的故事点的平均值）。 并针对下一个Sprint提交与速度匹配的用户故事。我个人建议另一种方法，用小时数进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 2. &amp;lt;strong&amp;gt;小时&amp;lt;/strong&amp;gt;，我个人建议按小时进行产能规划。 在本文中，只以这种方式进行产能规划。 它提供了更好的可见性和准确性。 还有许多其他好处，将在本文后面讨论。&amp;lt;br /&amp;gt; 这里我们通过计算下个Sprint的可用时间。计算敏捷团队的可投入的生产力（PO和SM除外）。&amp;lt;br /&amp;gt; 将详细讨论谁来计算它，在本文中考虑哪些因素。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 这种技术非常容易计算和规划团队产能。 下面逐步说明，可以通过维护Excel来进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid vc_row-o-equal-height vc_row-o-content-middle vc_row-flex&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; &amp;lt;span class=&amp;quot;dt-highlight&amp;quot;&amp;gt;Step 1 – 计算Sprint持续时间&amp;lt;/span&amp;gt; &amp;lt;/h4&amp;gt; &amp;lt;p&amp;gt; 以天为单位计算Sprint持续时间，确定Sprint的开始日期和结束日期。 为了说明这一点，进行了为期2周的Sprint，从星期三开始，到星期二结束。 正在为Sprint 2进行产能规划。&amp;lt;br /&amp;gt; 下图代表10天的2周Sprint –日历。 分散在三个物理日历周中。 在本文的其余部分中，将用这个颜色说明来解释，其中&amp;lt;br /&amp;gt; 黄色=上一个Sprint&amp;lt;br /&amp;gt; 绿色=当前的Sprint&amp;lt;br /&amp;gt; 蓝色=未来Sprint &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-large wp-image-1049&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷文化中的Scrum是什么？ – 速成班带你深度了解</title>
      <link>https://www.agilewalker.com/scrum-crash-course/</link>
      <pubDate>Thu, 16 Apr 2020 03:36:39 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-crash-course/</guid>
      <description>[本视频长度1.5小时] 敏捷文化中的Scrum是什么？ - 速成班带你深度了解
[https://player.youku.com/embed/XNDYxMDk2NjgwMA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷开发框架Scrum工件-冲刺/迭代燃尽图（上篇）</title>
      <link>https://www.agilewalker.com/sprint-burndown-chart/</link>
      <pubDate>Tue, 14 Apr 2020 12:44:21 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-burndown-chart/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解有关燃尽图的详细内容（上篇为主题1-3）：
&amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1004&amp;quot; src=&amp;quot;https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1.jpg&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;760&amp;quot; height=&amp;quot;428&amp;quot; srcset=&amp;quot;https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1.jpg 1024w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-300x169.jpg 300w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-768x432.jpg 768w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-355x199.jpg 355w&amp;quot; sizes=&amp;quot;(max-width: 760px) 100vw, 760px&amp;quot; /&amp;gt;&amp;lt;/figure&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; &amp;amp;nbsp; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 如果你查看上面的图片，会注意到团队有产品待办事项，在处理sprint待办事项期间，团队提交几个用户故事，然后团队成员分配了任务，对于每个任务，每个成员消耗的是估计的工作时间。到目前为止，已经为冲刺提交了一些故事，每个故事都有一些任务，这些任务的估计时间是小时，并且每个任务都分配给了胜任的团队成员。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 如果总计工作时间，则大约为110小时。假设团队的能力为130小时。&amp;lt;br /&amp;gt; 让我们看一下sprint的另一个重要方面，有一个sprint起始日期为12月10日，它的结束日期为12月21日，这意味着是两个星期的sprint，并且sprint的持续时间为10天。&amp;lt;br /&amp;gt; 因此，从所有这些信息中，开始绘制燃尽图 &amp;lt;/p&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;Total Days of the sprint = 10 days&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;Total committed &amp;amp; estimated task hours for the team = 110 Hours&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果将总小时数除以总天数平均值（110/10）= 11小时。&amp;lt;br /&amp;gt; 也就是说，如果团队每天完成11个小时的工作，那么在冲刺的最后一天结束时，团队将能够完成他们已经完成的所有工作。&amp;lt;br /&amp;gt; 请参考下面的图片，然后按照说明进行操作以更好地理解它。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1003&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>敏捷开发框架Scrum工件-冲刺/迭代燃尽图（下篇）</title>
      <link>https://www.agilewalker.com/sprint-burndown-chart-2/</link>
      <pubDate>Tue, 14 Apr 2020 12:06:05 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-burndown-chart-2/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解有关燃尽图的详细内容（下篇为主题4-6）：
（延续上篇主题1-3 敏捷开发框架Scrum工件-冲刺/迭代燃尽图（上篇））
&amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在这种情景下，团队需要查看当前的燃尽图和实际线。 截至特定日期，它们还有多少富余的工作时间。 可能有3种选项： &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队可以直接同意将故事添加到当前的sprint中&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果实际线结束于理想线或能力线以下，则意味着有富余时间可用于在冲刺时间内完成更多工作。&amp;lt;br /&amp;gt; 留意测试人员个人能力（工作时间），即使整个团队富余很多工作时间，如果单个测试人员级别也没有太多富余工作时间，在这种情况下，可以参考下面的选项2。&amp;lt;br /&amp;gt; 因此，先要看燃尽的情况，如果说可以提交更多故事，考虑其他限制因素再做出决定。 &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;2&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队可以要求PO取消一些低优先级的故事，这意味着从当前的sprint中移除并将其放回待办事项&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果团队发现燃尽实际线接近能力线或理想线，则团队检查已提交但尚未开始开发的相似大小故事，请产品负责人同意减少这些故事中的任何（ 一个或多个），替换为新的关键故事。&amp;lt;br /&amp;gt; 留意冲刺中剩余的时间，新故事所需的技能以及这些熟练的团队成员的富余时间。 &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;3&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队认为在sprint范围内添加新故事是有风险的，建议不要更改范围。 &amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果团队离冲刺结束只有两到三天，实际线非常稳定，有些故事已完成，有些在进行中。 在这种情况下，接受新故事可能会有风险，团队可以向产品负责人解释并建议到下一个冲刺将优先完成新故事，并尽快将其部署。&amp;lt;br /&amp;gt; 不过即使是冲刺的最后几天，如果当前的所有故事都已完成并被验收，实际线已经触地。 团队可以快速估算并提交新故事。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; 情景2：其中一位团队成员需要连续几天请急诊病假。 &amp;lt;/h4&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在这种情况下，请查看燃尽图并分析实际线终点的位置。 如果终点在理想线以下很远，可以接受计划外的请假。在个人级别上，还要查看该成员有待处理的工作总小时数，以及冲刺剩余的总天数。查看同一技能的其他成员是否具有足够的富余时间来弥补差距。&amp;lt;br /&amp;gt; 如果团队认为有可能不能完成所有已提交的故事，团队就应立即通知PO，达成共识，例如确定优先级较低的故事等。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; 情景3：在sprint测试团队的第二周，提出了太多的bug，需要在sprint持续时间内解决。 &amp;lt;/h4&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 如果测试人员在测试用户故事时发现太多缺陷，这让开发看起来不够成熟，但还是会发生。查看实线和能力线的差异。团队多大程度上能够轻松修复缺陷以及正在进行的开发工作，测试人员需要重新测试重要的修复以及已完成的待测试的工作。&amp;lt;br /&amp;gt; 为了完成所有修复，工作燃尽图应具有足够的富余工作时间，这意味着实际线的末端应比能力线的末端低得多。如果不是，在进行下一个冲刺时，在能力规划期间保留足够的缓冲区需要重点考虑。&amp;lt;br /&amp;gt; 查看关于缺陷关闭的完成（DOD）定义，如果说所有P1和P2的缺陷必须关闭才能认为故事完成。查看P1 / P2错误的数量，评估修复它们的额外时间以及燃尽图中可用的富余时间。&amp;lt;br /&amp;gt; 考虑与产品负责人沟通，应对最坏的情况，确定优先级最低和最关键的用户故事。&amp;lt;br /&amp;gt; 燃尽图是决定现在是否应该与产品负责人沟通的第一步。或者需要进一步细化可能的其他约束。&amp;lt;br /&amp;gt; 工作中可能还有许多其他情况，燃尽图有助于针对不同情况做出决策。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1011&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷开发Scrum实践 – 分解用户故事，让产品需求更易落地</title>
      <link>https://www.agilewalker.com/v-user-story-splitting/</link>
      <pubDate>Tue, 14 Apr 2020 03:52:25 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-user-story-splitting/</guid>
      <description>敏捷开发Scrum实践 - 分解用户故事，让产品需求更易落地
[https://player.youku.com/embed/XNDYwMzEwNjI1Ng==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」敏捷软件开发的用户故事，你了解么？产品需求获取的一把利器</title>
      <link>https://www.agilewalker.com/v-understand-user-story/</link>
      <pubDate>Tue, 14 Apr 2020 03:34:58 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-understand-user-story/</guid>
      <description>敏捷软件开发的用户故事，你了解么？产品需求获取的一把利器
[https://player.youku.com/embed/XNDYwMjQyNTI2MA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷Scrum开发7大事件之1：产品待办列表优先级排序</title>
      <link>https://www.agilewalker.com/product-backlog-prioritization/</link>
      <pubDate>Mon, 13 Apr 2020 08:44:13 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/product-backlog-prioritization/</guid>
      <description>&amp;lt;blockquote&amp;gt; &amp;lt;p class=&amp;quot;p1&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;“&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s2&amp;quot;&amp;gt;我们不必改变任何人的价值观，但必须让系统围绕真正的价值观运作&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;” --&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;《系统之美》&amp;lt;/span&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;/blockquote&amp;gt; &amp;lt;h2&amp;gt; 为什么我们需要优先级排序？ &amp;lt;/h2&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在日常生活中我们都会进行优先级排序，因为我们用有限时间去执行每组工作任务，这就是为什么我们选择最重要的先执行然后再执行次重要的原因。同样，我们在软件开发中对功能或任务进行优先级排序，因为有总有些功能比其他功能更重要。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;h2&amp;gt; 什么是产品待办事项优先级排序？ &amp;lt;/h2&amp;gt; &amp;lt;div class=&amp;quot;uvc-sub-heading ult-responsive&amp;quot; data-ultimate-target=&amp;quot;.uvc-heading.ultimate-heading-17775e9145c15b93f .uvc-sub-heading &amp;quot; data-responsive-json-new=&amp;quot;{&amp;amp;quot;font-size&amp;amp;quot;:&amp;amp;quot;desktop:14px;&amp;amp;quot;,&amp;amp;quot;line-height&amp;amp;quot;:&amp;amp;quot;&amp;amp;quot;}&amp;quot;&amp;gt; 产品待办事项优先级排序是敏捷软件开发中最重要的工作之一。 如果利益相关者，客户或企业尽早获得最有价值的功能，那么任何项目都是成功的。 可以通过有效地对需求进行优先级处理（用户故事）来实现。&amp;lt;br /&amp;gt; 待办事项优先级排序被用来组织产品待办事项条目（用户故事/缺陷/探针等），以制定其开发和部署的顺序。&amp;lt;br /&amp;gt; Scrum团队遵循此顺序以在梳理或冲刺计划期间选择产品待办事项条目。 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;strong&amp;gt;待办事项优先级排序的优势&amp;lt;/strong&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;div class=&amp;quot;dt-fancy-title&amp;quot;&amp;gt; 商业利益&amp;lt;br /&amp;gt; -最快的投资回报&amp;lt;br /&amp;gt; -客户或业务满意度&amp;lt;br /&amp;gt; -更好地管理依赖项&amp;lt;br /&amp;gt; -最小化风险&amp;lt;br /&amp;gt; -关注价值驱动的开发 &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;dt-fancy-title&amp;quot;&amp;gt; 对Scrum团队的优势&amp;lt;br /&amp;gt; -通过选择的故事进行有效的梳理&amp;lt;br /&amp;gt; -通过选择的故事进行有效的Sprint计划&amp;lt;br /&amp;gt; -如果有富余产能，更容易看出增加哪些故事到当前冲刺更合适&amp;lt;br /&amp;gt; -如果由于团队成员缺席，紧急生产修复等导致产能下降，更容易看出从当前冲刺需要减少哪些故事 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-12&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_empty_space&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;strong&amp;gt;优先级排序中对待不同的待办事项条目&amp;lt;/strong&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;p&amp;gt; 在优先级排序期间，产品事项中的所有条目都得到同等对待，包括缺陷或错误，新功能，增强功能，探针。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-full wp-image-976&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷教练的工作是什么？让我们总览一下</title>
      <link>https://www.agilewalker.com/agile-coach-overview/</link>
      <pubDate>Sun, 12 Apr 2020 10:58:07 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-overview/</guid>
      <description>敏捷教练的工作是什么？让我们总览一下
[https://player.youku.com/embed/XNDYyOTE3OTMyNA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>「视频」12分钟，立即就懂，敏捷教练工作的职业发展路径</title>
      <link>https://www.agilewalker.com/agile-coach-development-path/</link>
      <pubDate>Sun, 12 Apr 2020 10:51:50 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-development-path/</guid>
      <description>12分钟，立即就懂，敏捷教练工作的职业发展路径
[https://player.youku.com/embed/XNDYyOTE3NDA2MA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>「视频」值得收藏，敏捷开发，解读冲刺燃尽图，及早发现问题，及早解决</title>
      <link>https://www.agilewalker.com/burn-down-chart/</link>
      <pubDate>Sun, 12 Apr 2020 10:46:36 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/burn-down-chart/</guid>
      <description>值得收藏，敏捷开发，解读冲刺燃尽图，及早发现问题，及早解决
[https://player.youku.com/embed/XNDYxMDk2Mjk0OA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>Youtube油管视频下载工具，MacOS客户端和网页端下载都有</title>
      <link>https://www.agilewalker.com/youtube-video-download-tools/</link>
      <pubDate>Wed, 08 Apr 2020 04:09:53 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/youtube-video-download-tools/</guid>
      <description>节省大家的宝贵时间，这里废话不多说，干货直接分享：
一、能够下载Youtube视频的大前提是浏览器必须能够访问 www.youtube.com
网上有很多专业的方法或是收费的服务，这里就不介绍了。
二、可以用web网站或者客户端进行下载，下面就简单介绍两种方法
访问 https://www.y2mate.com/ 在绿框中输入youtube上的视频URL地址，点&amp;quot;Start&amp;quot;就可以下载了。
在MacOS上的下载的客户端 Downie 工具更方便，可以批量下，而且还可以下载其他渠道的视频 https://software.charliemonroe.net/downie/
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更及时的更新通知。</description>
    </item>
    
    <item>
      <title>理解Scrum 度量和关键绩效指标</title>
      <link>https://www.agilewalker.com/understanding-scrum-metrics/</link>
      <pubDate>Tue, 07 Apr 2020 09:37:16 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/understanding-scrum-metrics/</guid>
      <description>—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更及时的更新通知。</description>
    </item>
    
    <item>
      <title>招聘信息</title>
      <link>https://www.agilewalker.com/they-are-hiring/</link>
      <pubDate>Sat, 04 Apr 2020 12:22:06 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/they-are-hiring/</guid>
      <description>最近各大招聘平台的敏捷开发相关的人才招聘信息（建设中。。。）</description>
    </item>
    
    <item>
      <title>敏捷人才</title>
      <link>https://www.agilewalker.com/agile-talent/</link>
      <pubDate>Sat, 04 Apr 2020 12:18:38 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-talent/</guid>
      <description>建设中。。。</description>
    </item>
    
    <item>
      <title>「视频」7分钟学习Scrum，最流行的敏捷框架入门，软件开发团队不可错过</title>
      <link>https://www.agilewalker.com/7-minutes-scrum/</link>
      <pubDate>Fri, 03 Apr 2020 09:23:12 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/7-minutes-scrum/</guid>
      <description>[https://player.youku.com/embed/XNDYxNzcyMjYwMA==]</description>
    </item>
    
    <item>
      <title>「视频」总结的真好，敏捷Scrum成果度量方法？锻炼英语，居然都看完了</title>
      <link>https://www.agilewalker.com/scrum-okr-kpi-metrics/</link>
      <pubDate>Mon, 30 Mar 2020 04:06:56 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-okr-kpi-metrics/</guid>
      <description>[https://player.youku.com/embed/XNDYxMDk3Mzg4MA==]</description>
    </item>
    
    <item>
      <title>「视频」Scrum和Kanban，有什么区别？哪个更适合你的团队？</title>
      <link>https://www.agilewalker.com/scrum-and-kanban/</link>
      <pubDate>Mon, 30 Mar 2020 04:00:37 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-and-kanban/</guid>
      <description>[https://player.youku.com/embed/XNDYwMjg2OTgzMg==]</description>
    </item>
    
    <item>
      <title>选择合适自己的敏捷认证培训</title>
      <link>https://www.agilewalker.com/your-favorite-agile-certification/</link>
      <pubDate>Sun, 29 Mar 2020 15:04:52 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/your-favorite-agile-certification/</guid>
      <description>考试和证书：考试有专门考点，监考严格，纸质考试。考试包含120个选择题，其中100道为打分题，20道不计分（根据当次考试情况选取），考试后6-7周在线出成绩。证书更新周期是每三年，可以通过获得PDU或支付费用来刷新。
考试和证书：考试包含50个选择题，答对37个合格，培训结束当天就可以考试，马上在线出成绩。证书更新周期是每三年，可以通过获得SDU或支付费用来刷新，认证还给PDU的哦。
考试和证书：包含80个选择问题，答对68题通过。证书永久有效。
考试和证书：考试包含40个选择题, 答对26题通过。证书永久有效。
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>「视频」7分钟，ScrumMaster告诉你 – 如何打造一支敏捷团队</title>
      <link>https://www.agilewalker.com/how-to-develop-scrum-team/</link>
      <pubDate>Fri, 27 Mar 2020 10:46:38 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-to-develop-scrum-team/</guid>
      <description>[https://player.youku.com/embed/XNDYwMTM1Nzg4MA==]</description>
    </item>
    
    <item>
      <title>「转载」头条官方报告披露2020年自媒体发展7个趋势 为创作者指出方向</title>
      <link>https://www.agilewalker.com/2020-media-7-trends/</link>
      <pubDate>Tue, 24 Mar 2020 11:40:52 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/2020-media-7-trends/</guid>
      <description>头条官方报告给创作者引路 近期，今日头条旗下巨量引擎发布《2019-2020今日头条营销通案》，主题为“资讯新生态，头部影响力”。这份报告虽然主旨是为B端企业提供的，但其中的内容、数据，对个人创作者和MCN机构摸准明年头条系各平台的发力方向，也有非常大的指导价值。
从创作者到“记者”，你准备好了吗？ 对，你没看错。你不一定要做一名职业记者，但未来做头条，创作者要有“记者”的气质和价值，这是真的。这份报告的开篇，就给出了头条今后的战略方向——从“媒体型平台”到“平台型媒体”。中国互联网用户的增长规模正在持续下降，网民就这么多，三四线的用户也都上网了，“做平台、拉用户”已经不是头条的主要方向。下一个阶段，向哪里发力呢？当然是做深耕！挖掘内容的价值、挖掘用户的价值。
“平台”的概念，侧重于把信息组织在一起。而“媒体”的概念，侧重于信息的深加工。头条不止于传递信息，而是要做一个媒体，通过内容的新闻性、观点性、舆论性创造更大的信息价值。所以，如果你此刻仍在埋头制造没有意义的信息，是时候想一想未来了。当头条还是平台时，你就是信息的创作者；当平台已经升级为媒体时，你不就“被升级”为记者了嘛。
可以断定，未来头条会更加热情地拥抱那些具有“记者气质”、“记者价值”的创作者。他们有时效、有原创、有知识、有观点、有见解、有汇集、有正能量。当然，他们也有专业的内容组织与生产在支持。你准备好了吗?
内容选题要做“减法”还是做“加法”？ 即便你是萌新，也应该感觉到了，头条是特别强调创作内容的领域垂度的。内容不要什么都发，要集中在一个领域。往往创作者能在自身发掘的内容点很多，刚开始玩自媒体时，选题会比较分散，这时候就要做“减法”，选择一个固定的发文边界，也就是“内容定位”。
但这次的报告中，有两条头条系用户的共同特征格外引入关注。一是“社会、娱乐、国际类内容是各年龄最热爱的TOP3”；二是，除了“传统意义上年轻人看娱乐，中年人关心健康，也体现出一些跨年龄段的偏好共性，如汽车、育儿、教育”。
从中我们可以提炼出一条可行的选题技巧。既然这6个领域是平台用户广泛的关注点，那大家就可以利用用户的共性，做“领域+共性”的加法题，来提升内容的曝光。比如，你是做美食领域的，可以尝试“美食+社会”、“美食+国际”、“美食+育儿”的创作选题。需要注意的是，过犹不及，不是所有的跨界尝试都适合你的IP，要有鉴别和选择的定力。
重点发图文，还是视频？别再“偏科”了 一般我们会认为30岁以下的年轻用户更喜欢看视频，而40岁以上的用户喜欢深度图文。事实的确如此，但这种差异化正在重构中。报告显示，2019年以来，40岁以上用户越来越喜欢看视频，30岁以下的用户在科技、汽车、时尚、游戏动漫、娱乐领域上的图文偏好在增加。
趋势代表未来，图文和视频融合互补的形势，越来越明显。如果你还是一个“偏科”的创作者，赶紧补齐短板还来得及。千万不能墨守成规，因为你的粉丝正在悄悄重构。
现在“发力”头条系，还来得及吗？ 私下沟通的时候，有些创作者表示后悔没有尽早开始头条创作，自己的创作灵感已经被别人占了。面临这样的观点，我一直都是批驳的态度。没有一个商业品牌能覆盖全部的用户，自然也没有一个创作者能达到所谓的“领域垄断”。我的理由一是源自市场细分的理解，二是今日头条平台当前的“规模效应”。
头条的这份报告显示，头条的日活有1.2亿，远超老二、老三。这个数据符合典型的平台发展特征，知名战略导师，《平台战略》的作者陈威如教授，管这种趋势叫“赢家通吃”。说的是，在平台的竞争中，“楚汉相争”的局面会比较短暂，而“一家独大”的局面会长期稳定。比如现在的微信，就是明显的规模效应的获利者。具体的理论依据，咱就不唠叨了。总而言之，选对平台对创作者非常重要。创作的精力必然有限，不要惧怕竞争、预支烦恼，你只要记住，“哪里用户最多，哪里价值最高”，这就对了。
你的内容，有“知识”的基因吗？ 从资讯到知识，是信息价值提升的过程。报告显示，2018到2019，知识类内容提升了平台用户的沉浸度和获益程度。这是平台非常愿意看到、而且愿意大力扶持的趋势。科技前沿、投资理财、智能家居、食品饮料、求职创业、5G商用、保健养生、旅游攻略、母婴育儿、体育问答成为2019年头条热门的知识行业。
其实跳出头条，从现在人们生活质量的提高和精神追求的趋势中，我们也能够感觉到，用户未来对知识的渴求依然是多元的、专业的、蓝海的。如果你还在单纯的产生“提供信息”的内容，那么在作品中，加入“知识”的基因，就对未来显得尤为重要了。
提高阅读/播放量 你想过如何利用“搜索”吗？ 有人说头条做搜索，是要抢别人的饭碗。我不这么认为，饭碗都是自己创造的，没有“抢别人”一说，只有适者生存的不二法则。头条的搜索，是搜索的升级。报告显示，今日头条以“聚合”为理念的搜索方式，在过去一年的使用量涨了2.5倍，这是一个巨大的流量红利。
大家在拟定标题的时候，一般都会考虑怎么“被推荐”，有没有考虑过如何“被搜索”呢？头条已经提出了“智能分发+搜索”双引擎驱动的概念。这种变化已经在作品的阅读量上有所显现了。你的内容，可能是被平台推给用户得来的，也可以是用户主动搜索看到的。所以在拟定标题，甚至在内容选题的时候，都可以考虑“为了被搜到而创作内容”。去做大百科全书吧，在头条还有很多这样的坑没有人占呢！
你的内容，有“女人味”吗？ 报告显示，2018-2019今日头条女性用户狂增17.7%。他们的阅读偏好集中在时尚、美食、家居、育儿、教育。不止于此，女人对这个世界的好奇一向是高于男人的。许多领域在内容竞争日趋激烈的情况下，突出“女人味”可能是一个很巧妙的“领域细分”方式。具有“女人味”的内容，不仅受众广阔，而且“金光灿灿”，易于获利。赚狗的钱，都比男人容易，何况是女人呢？你的内容，是不是考虑一下增加点“女人味”？
关于这份报告中的信息亮点，还有很多。仁者见仁，毕竟外来是不可预知的。长江商学院的六字校训讲，“取势、明道、优术”。因势利导、顺势而为是成功构建商业模式中首要一环。无论是MCN机构，还是个人创作者，多去了解一官方的信息，从中品出“价值的味道”，都有意义。
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>「视频」敏捷不仅仅是一个方法论！</title>
      <link>https://www.agilewalker.com/agile-is-not-a-methodology/</link>
      <pubDate>Sat, 21 Mar 2020 10:42:27 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-is-not-a-methodology/</guid>
      <description>[https://player.youku.com/embed/XNDU5Nzg4OTI0MA==]</description>
    </item>
    
    <item>
      <title>新冠疫情期间，简单介绍几款用于敏捷开发的协作工具</title>
      <link>https://www.agilewalker.com/agile-collaberation-tools/</link>
      <pubDate>Thu, 19 Mar 2020 05:30:39 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-collaberation-tools/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>简说敏捷转型可视化和可视化敏捷方法</title>
      <link>https://www.agilewalker.com/agile-visualization/</link>
      <pubDate>Thu, 19 Mar 2020 04:41:39 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-visualization/</guid>
      <description>在服务企业研发团队的过程中，我们发现不少团队碰到了类似的问题：
你经常在思考究竟哪些工作是最重要的？如何避免被无穷无尽的项目与工作淹没？
团队成员声称完成了自己的大部分任务，但团队实际交付的需求却寥寥无几？
由于某些问题导致工序一直处于等待状态，怎么识别和处理这些延迟？
成员之间不知道互相都在干什么？各自鸵鸟式地进行着工作。
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>敏捷教练的软硬技能树</title>
      <link>https://www.agilewalker.com/agile-coach-skills-tree/</link>
      <pubDate>Sun, 15 Mar 2020 10:32:36 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-skills-tree/</guid>
      <description>最近想整理一个敏捷教练技能树，如今抗疫在家，就完成我的这个PBI吧，不论内容是否全面，经常总结，多学习总是人间正道。
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>敏捷教练的26项修炼「转载」</title>
      <link>https://www.agilewalker.com/agile-coach-a-z/</link>
      <pubDate>Wed, 04 Mar 2020 07:57:42 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-a-z/</guid>
      <description>敏捷方法学带来了新的角色——“敏捷教练”，它不常见于传统方法学中，甚或不曾为之提及。已驾轻就熟的实践者，可能会视之为浑然天成，羚羊挂角、无迹可寻；而初窥门径的新手则会心生疑云：“敏捷教练为何如此重要？‘部门经理’、‘团队领导’、‘技术领导’，他们的问题何在？Monster.com为此提供54个职位，又是何故？”奇文共欣赏，疑义相与析，当是吾等本色。且与笔者同游于本文中，或可领会敏捷教练之所思、所行，更要知其意义所在。
A 即 Advice（建议）：“我曾见别人做过。我觉得你们这样做效果更好。”
注：建议和引导，而不是命令和强迫，教练的作用就是引导，而不是简单的指手画脚。
以传统方式工作的经理会明确指导团队该怎么做，而不是帮助他们找到属于自己的道路。敏捷教练虽然常常以顾问的角色出现，但她不会做太多导向工作，而是在需要的时候出现，帮助团队避开已为人知的陷阱，或是引导他们走向佳境（参见引导和导师）。
B 即 Balance（平衡）：“别把好东西丢掉。”
注：易经的系统观是平衡，中庸的过犹不及也是平衡，项目经理最重要的技能之一就是平衡。
有时候团队会忙得自顾不暇，以至于又回到老路上来。教练会寻找良机，跟团队一起工作，去发现、尝试可能为团队带来巨大利益的新做法。他还会确保那些依然为团队带来收益的实践不会被随手抛弃，为人遗落，他常常会把它们跟新方法合并。
C 即 Celebration（庆功）：“嘿，上个迭代你们干的太棒了！”
注：随时随地的培训和引导，随时随地的一句话表扬，阶段和里程碑点的庆功会，保持团队士气。
团队常常会低估成功和肯定式探询的力量。迭代一步步向结果推进，形成节奏，帮助大家意识到何时达成目标（参见反馈）。但是人们常常会忘记迭代中的庆功。整个团队在项目结束以后，或是某些重大里程碑完成后庆功（参见感染力），会极大鼓舞士气。敏捷教练每天会跟团队一起庆祝每个小小的胜利。
D 即 Daring（勇敢）：“跟你们说，我豁出去了，是这样的……”
注：一个激情的团队一定是勇于承担责任，勇于面对挑战，勇于自我突破的团队。
引入变化就有相应的风险，敏捷教练需要承担责任，寻找途径，以最小的风险带来最大的价值。在团队中，他往往是第一个破冰而行的，激励团队，给每个人带来安全感，让他们有勇气提出建议，即使不敢尝试不同的工作方式。
E 即 Encouragement（鼓励）：“加油！这玩意很NB！”
注：责备是士气低落，鼓励使士气高涨。敏捷项目最重要的资产就是团队，团队最重要的就是士气。
有些敏捷实践看上去很直白，可如果没有理解它们背后的原理和带来的影响，实施起来就会很容易出问题。简单试上一段时间以后，人们往往会感觉到哪些东西从前效果更好，现在用的实践存在哪些限制（参见提问）。敏捷教练会为人们提供支持和鼓励，帮助他们度过尝试新实践的不适应期，有时也会帮他们解决掉实践中比较难以实施的部分。
F 即 Feedback（反馈） ：“你有没有发现团队……？”
注：有了快速反馈的流程才是闭环的流程，有了反馈的沟通才是积极寻求改善和突破的沟通。
所有的敏捷方法学都提倡快速反馈。敏捷教练在团队工作的方方面面都会强调反馈机制的重要性——从团队协作，到过程，再到实践。定期的反馈可以帮助团队更有效地适应所处的特殊环境。
G 即 Guidance（引导） ：“看上去我们有三种选择，我觉得前两种可能更好，你们觉得呢？”
注：一切众生皆有佛性。自性迷，佛即众生；自性悟，众生即佛。如何激发每个人的潜能?
敏捷狂热者的工作方式跟敏捷教练不同。狂热者习惯使用命令和控制的方式，而敏捷教练只是加以引导，帮助每个人自我学习。他引导团队避开已知的陷阱，但他也明白失败是成功之母。
H 即 Humility（谦虚）：“实际上，活儿是大家干的，不是我。”
注：教练一定要勇于承担责任，时刻强调和发挥团队的力量。傲慢自大的教练在团队中没有容身之地。
敏捷教练会为团队提供指导，帮助他们完成工作。当他们犯错误的时候，她要勇于承担责任，团队取得成功后，她要保证适当的人得到奖赏。傲慢自大的教练在团队中没有容身之地。
I 即 Infectious（感染力）：“你得过来看看这个！”
注：团队教练，你有感染力吗？有人愿意追随你吗？
敏捷教练会给团队带来激情和活力，用自己为榜样，鼓舞人们燃起对工作的激情。他理解团队愿意接受多少变化，也知道自己展示热情的分寸，不会被人跟敏捷狂热者混为一谈。他也一直在寻找恰当的时机与大家分享他的能量与热情。
J 即 Jiggle（摇摆）：“这样调整一下，再那样调整一下。”
注：翻译为摇摆不太合适，应该理解为精益求精和持续改进。实践过程就是持续改进过程。
很多事情要想做好不只一种方式，即便团队跟上次采用同样的实践也是如此。敏捷教练帮助团队在以往经验和认识的基础上调整实践，使他们更好地适应团队与环境。
K 即 Knowledge（知识） ：“你读过这本书/这篇论文/这个邮件列表了么？”
注：随时随地的知识传授，知识的共享和沟通，知识的转化和升华。
敏捷方面的知识浩如烟海：敏捷实践、敏捷原则、实施方法与面临的挑战，等等等等。敏捷教练对这整套资源很熟悉，可以引导大家去看相关的书籍、论文或是博客，查找跟他们遇到的问题相关的资源。
L 即 Listening（聆听） ：“你说你想要做……”
注：团队教练的重点是沟通，而沟通首要学会的就是积极的倾听。
敏捷教练需要倾听团队的看法，从而了解他们当前的状态、他们的好恶。有时候也会把她听到的东西反馈给团队。她认真听取每个人的意见，掌握他们的需求与担忧，并据此调整她工作的优先级和相关活动。有时她也会把这些意见跟别人分享，也会鼓励人们为自己辩护。
M 即 Mentor（导师） : 让自己成为多余的人</description>
    </item>
    
    <item>
      <title>告诉你的CxO敏捷教练是什么</title>
      <link>https://www.agilewalker.com/what-is-agile-coach/</link>
      <pubDate>Wed, 04 Mar 2020 07:18:47 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/what-is-agile-coach/</guid>
      <description>—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>与大家分享一些“敏捷教练”的定义</title>
      <link>https://www.agilewalker.com/agile-coach-defines/</link>
      <pubDate>Wed, 04 Mar 2020 02:44:04 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-defines/</guid>
      <description>引用来自网络的关于与敏捷教练定义，大家应该会有个基本一致的感受：
参考：
让你用3分钟简单说敏捷教练能力模型
敏捷教练日常工作中的检查列表
-&amp;ndash;
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>从敏捷价值观看中国速度应对2020新冠肺炎疫情COVID-19</title>
      <link>https://www.agilewalker.com/agile-apply-to-2020-ncov-dealing/</link>
      <pubDate>Sat, 29 Feb 2020 08:48:58 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-apply-to-2020-ncov-dealing/</guid>
      <description>「2020-新冠病毒疫情最新情报速递」</description>
    </item>
    
    <item>
      <title>Scrum：我很好，我不是一个敏捷软件开发框架</title>
      <link>https://www.agilewalker.com/scrum-is-not-agilesoftware-framework/</link>
      <pubDate>Tue, 25 Feb 2020 04:16:15 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/scrum-is-not-agilesoftware-framework/</guid>
      <description>2019-新冠病毒疫情最新情报速递
Scrum联盟说：Scrum是一组简单但功能强大的原则和实践，可帮助团队在短周期内交付产品，从而实现快速反馈，持续改进和快速适应变化。
许多Scrum专家说：Scrum是一个产品开发框架。
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>2020-新冠肺炎疫情下天天敏捷的生活和工作</title>
      <link>https://www.agilewalker.com/2020-ncov-lean-agile-life/</link>
      <pubDate>Mon, 24 Feb 2020 05:55:14 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/2020-ncov-lean-agile-life/</guid>
      <description>「2020-新冠肺炎疫情最新情报速递」</description>
    </item>
    
    <item>
      <title>2020-新冠肺炎疫情最新情报速递</title>
      <link>https://www.agilewalker.com/2019-ncron-virus-update/</link>
      <pubDate>Mon, 24 Feb 2020 05:54:05 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/2019-ncron-virus-update/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>让你用3分钟简单说敏捷教练能力模型</title>
      <link>https://www.agilewalker.com/agile-coach-competency-framework/</link>
      <pubDate>Sat, 22 Feb 2020 10:30:04 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-competency-framework/</guid>
      <description>1) 保持中立的态度：敏捷教练在引导团队会议，提供专业指导以及培训的时候，需要保持不偏不倚的心境，不受来自高层或自己个人喜好的牵制和影响。
2) 服务客户的立场：敏捷教练的客户包括个人、团队、组织。客户更理解自己所处的环境，所以教练除了给出必要的指导和协助更要尊重客户自己的选择和决定。
3) 鼓励客户自实践：企业投资敏捷教练的目的是为了最终将敏捷思想，技能、实践转移给企业组织内部，成为一个自我管理，自我成长，高效能和可持续性的敏捷型组织。
4) 勇敢暴露问题：敏捷教练不会帮助客户掩饰问题，如果团队还在船货膜拜的伪敏捷，不能说团队已经真正敏捷。
5) 发出自己的声音：敏捷教练需要提出自己独到的见解，所有的动因都是为了解决问题，不需要为自己认为不正确的事情而附和任何人。
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>聘请Agile Coach前，建议可以先问5个问题</title>
      <link>https://www.agilewalker.com/5-questions-before-hiring-agile-coach/</link>
      <pubDate>Fri, 21 Feb 2020 13:13:23 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/5-questions-before-hiring-agile-coach/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>XP里故事要INVEST和任务要SMART</title>
      <link>https://www.agilewalker.com/story-invest-smart/</link>
      <pubDate>Sun, 16 Feb 2020 16:20:24 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/story-invest-smart/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>敏捷教练日常工作中的检查列表</title>
      <link>https://www.agilewalker.com/agilecoachchecklist/</link>
      <pubDate>Wed, 12 Feb 2020 15:38:32 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agilecoachchecklist/</guid>
      <description>印象中当教练的都是上面这样👆 敏捷教练有这些日常工作需要检查：</description>
    </item>
    
    <item>
      <title>敏捷方法在家庭教育中让孩子自觉学习</title>
      <link>https://www.agilewalker.com/agilehomework/</link>
      <pubDate>Sun, 09 Feb 2020 02:27:59 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agilehomework/</guid>
      <description>作业完成前的看板
作业完成后的看板</description>
    </item>
    
    <item>
      <title>MacOS中运行you_get或youtube_dl下载视频出现[SSL: CERTIFICATE_VERIFY_FAILED]</title>
      <link>https://www.agilewalker.com/youtube_dl/</link>
      <pubDate>Wed, 15 Jan 2020 07:29:34 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/youtube_dl/</guid>
      <description>如果我们在使用you_get或youtube_dl下载视频
$ youtube-dl &amp;lsquo;https://youtu.be/10wVFaRInfs&#39;
有时候会出现如下错误❌：
&amp;lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)&amp;gt; (caused by URLError(SSLCertVerificationError(1, &#39;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)&#39;)))
这里是对普通用户的问题解决方法（如何在Python代码里解决这个问题，网上已经有很多资料，就不多说了）
找到你电脑上的Python安装路径，运行如下命令：
$ open &amp;ldquo;/Applications/Python 3.8/Install Certificates.command&amp;rdquo;
再运行下刚才的命令：
$ youtube-dl &amp;lsquo;https://youtu.be/10wVFaRInfs&#39;
这样可以正常下载了，如下：
Python的官方解释 https://bugs.python.org/issue29065#msg283984</description>
    </item>
    
    <item>
      <title>关于我们</title>
      <link>https://www.agilewalker.com/whoami/</link>
      <pubDate>Thu, 09 Jan 2020 04:37:11 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/whoami/</guid>
      <description>我是老彦，居住在中国上海，一位终身学习的研发效能改进实践者。程序员出身，目前是IT咨询公司的敏捷教练，工作涉及敏捷软件开发实践和DevOps落地，项目管理，组织敏捷转型和研发效能改进，是中国敏捷社区的参与者。 希望能和大家一起促进敏捷文化在软件开发领域的传播，并能在更多的领域获得有趣创新。 这里有干货，也有鸡汤，更有蟹羹。大家关心的就是我要努力关注的，让我们一起向上生长！ “不断学习和实践会让人的成长来的更踏实。” Scrum Alliance认证 | CSP-SM PMI认证 | PMI-ACP PMI认证 | PMI-PMP —
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>火车看板</title>
      <link>https://www.agilewalker.com/trainkanban/</link>
      <pubDate>Thu, 09 Jan 2020 04:32:12 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/trainkanban/</guid>
      <description>目前该产品正在计划研发中，会尽快推出最小可行的MVP版公测，并更新初步的发布计划。
—
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>业内大咖</title>
      <link>https://www.agilewalker.com/genius/</link>
      <pubDate>Mon, 06 Jan 2020 05:43:33 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/genius/</guid>
      <description>建设中。。。</description>
    </item>
    
    <item>
      <title>个人阅读</title>
      <link>https://www.agilewalker.com/readings/</link>
      <pubDate>Sat, 04 Jan 2020 23:37:31 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/readings/</guid>
      <description>豆瓣阅读（豆瓣只提供最近的一部分阅读信息）</description>
    </item>
    
    <item>
      <title>认证培训信息</title>
      <link>https://www.agilewalker.com/trainning/</link>
      <pubDate>Thu, 02 Jan 2020 11:17:49 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/trainning/</guid>
      <description>建设中。。。</description>
    </item>
    
    <item>
      <title>2020 新年快乐！</title>
      <link>https://www.agilewalker.com/2020newyear/</link>
      <pubDate>Wed, 01 Jan 2020 08:21:03 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/2020newyear/</guid>
      <description>祝各位，2020全家幸福，健康快乐！给大家来一个程序员的祝福方式吧</description>
    </item>
    
    <item>
      <title>Social – 找回密码</title>
      <link>https://www.agilewalker.com/findpassword/</link>
      <pubDate>Tue, 31 Dec 2019 04:58:33 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/findpassword/</guid>
      <description>[xh_social_page_findpassword]</description>
    </item>
    
    <item>
      <title>Social – 注册</title>
      <link>https://www.agilewalker.com/register/</link>
      <pubDate>Tue, 31 Dec 2019 04:58:33 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/register/</guid>
      <description>[xh_social_page_register]</description>
    </item>
    
    <item>
      <title>Social – 登录</title>
      <link>https://www.agilewalker.com/login/</link>
      <pubDate>Tue, 31 Dec 2019 04:58:33 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/login/</guid>
      <description>[xh_social_page_login]</description>
    </item>
    
    <item>
      <title>学习资源</title>
      <link>https://www.agilewalker.com/agile-resource/</link>
      <pubDate>Mon, 30 Dec 2019 10:28:56 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-resource/</guid>
      <description>https://github.com/leoyanlili/AgileWalker</description>
    </item>
    
    <item>
      <title>给我留言</title>
      <link>https://www.agilewalker.com/reachme/</link>
      <pubDate>Mon, 30 Dec 2019 03:33:39 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/reachme/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>项目经理在成为PMO负责人过程中需要作出的改变</title>
      <link>https://www.agilewalker.com/howtopmo/</link>
      <pubDate>Mon, 30 Dec 2019 03:25:23 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/howtopmo/</guid>
      <description>Less Tactical As a former US Army soldier, being less tactical was never a goal. The more tactics you had, the better you could execute on the overall military strategy. But becoming the PMO Director is more like becoming a Division Commander. You will be an integral part of the strategic portion of the battle. In order to become a PMO Leader, you need to think and communicate more strategically. You need to get out of the weeds, and out of the project plans, and into the business strategy that all of the projects are supporting.</description>
    </item>
    
    <item>
      <title>挣值管理</title>
      <link>https://www.agilewalker.com/%E6%8C%A3%E5%80%BC%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 23 Nov 2019 06:24:40 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/%E6%8C%A3%E5%80%BC%E7%AE%A1%E7%90%86/</guid>
      <description>挣值管理（Earned Value Management, EVM）是项目管理里面成本管理部分较为重点的知识点，但是也可以用来综合考察项目范围和进度绩效，经常需要做相关计算。本文试图来整理一下关于挣值管理的一些概念和知识点。
一、 基本概念PV，EV，AC和BAC 首先是四个基本概念：
计划价值（Planned Value, PV），截止到某时间点计划要完成工作量的价值，也就是计划要做多少事；
挣值（Earned Value, EV），截止到某时间点实际已经完成工作量的价值，也就是实际做了多少事；
实际成本（Actual Cost, AC），截止到某时间点实际已经发生的成本，也就是实际花了多少钱；
完工预算（Budget At Completion, BAC），对完成该项目的计划预算，也就是完成整个项目计划多少预算；
举个例子来更通俗地说明一下以上的几个概念。假设我们现在要做一个项目，就是砌一堵长度为100米的围墙，为了方便计算我们假设总的预算是100元每米，共100*100=10000元，我们还计划项目工时10天（每天砌墙10米）来完成这个项目。
为了顺利完成该项目在项目中途我们需要对项目绩效做监控，于是我们在第四天工作结束的时候对该项目进行绩效评估。本来第四天工作结束的时候我们计划是要完成40米的任务的（因为每天计划是10米），这个40米的工作量的价值是40米100元/米 = 4000元，这个4000元就是我们的计划价值PV（计划做多少事）；实际完成了多少呢？我们发现第四天工作结束实际才完成了30米砌墙任务，这个30米围墙对应的价值是30米100元/米=3000元，这个3000元就是我们的挣值EV（实际做了多少事），也就是我们在第四天结束就完成了3000元的工作量；到第四天结束这个时间点我们实际却花了5000元，这个5000元就是我们的实际成本AC（实际花了多少钱）；总的预算10000元就是我们的完工预算BAC；总结一下就是一共计划10000元10天完成这个项目，在第四天结束的时候去检查项目绩效，发现到这个时间点为止本来应该完成4000元的项目工作量（PV），结果只完成了3000元的工作（EV），却花了5000元的成本（AC）。为了更直观表示这几个概念，可以用图表示这几个概念如下：
图中红、绿、橘黄色线分别表示AC、PV和EV，红线AC表示截止到某个时点花了多少钱（成本），斜率表示花钱的速度；绿线PV表示截止某个时点项目计划花的钱和做的项目量；橘黄色线EV表示截止到某个时点做了多少事（多少钱的工作），斜率表示做事的速度；上图我们可以看出花钱的速度比计划的要快（红线比绿线更陡，斜率更大），而做事的速度却比计划的要慢（橘黄色线比绿线更缓，斜率更小），项目绩效很不好。
二、 绩效指标CV，SV，CPI和SPI 好了，大致理解了上面PV, EV, AC, BAC等几个基本概念之后，接着我们来了解CV，SV，CPI，SPI这几个成本和进度绩效指标。
成本偏差（Cost Variance, CV），截止到某时点发生的实际成本与计划成本的偏差，CV=EV-AC
进度偏差（Schedule Variance, SV），截止到某时点的实际进度与计划进度的偏差，SV=EV-PV
成本绩效指数（Cost Performance Index, CPI），截止到某时点衡量成本绩效的一种指标，也就是实际每花一元钱，完成做了多少钱的事（花钱的效率），CPI=EV/AC
进度绩效指数（Schedule Performance Index, SPI），截止到某时点衡量进度绩效的一种指标，也就是实际完成的工作量与计划完成工作量之比，SPI=EV/PV
以前面砌墙的项目为例子，第四天结束去评估项目绩效的时候，本来计划完成40米4000元的工作量（PV），结果只砌了30米只完成了3000元的工作量（EV），那么：
进度偏差SV=EV-PV=3000-4000=-1000元，意思是相比计划我们的进度落后1000元的工作量；（负值表示进度落后，正值表示进度超前）
进度绩效指数SPI=EV/PV=3000/4000=0.75，说明当前只完成了计划任务量的75%的工作；
成本绩效的检查结果是：只完成3000元的工作量（EV）实际却花了5000元（AC）。这个时候：
成本偏差CV=EV-AC=3000-5000=-2000元，说明现在成本超支了2000元（负值表示超支，正值表示节约）；
成本绩效指数CPI=EV/AC=3000/5000=0.6，意思是前面4天我们实际花了5000元，但是只做了3000元的工作，相当于前面4天我们每花1元钱，只做了0.6元的事；在这儿要强调一下这个成本绩效指数CPI值，因为后面很多指标都和这个CPI息息相关。对于CPI的计算方法和意义一定要非常熟悉，CPI的意义是每花1元钱做了多少钱的事（花钱的效率），CPI为0.6的意思就是每花1元钱只做了0.6元的事，所以CPI的计算方法是做了的事（EV）除了花了的钱（AC）。不光会算CPI，大家还要能举一反三，比如知道CPI和做了多少事，也要会算花了多少钱，那就是花了多少钱=做了多少事/CPI，后面相关指标的计算会经常用到这个公式。
成本偏差CV和进度偏差SV在图中的直观表示如下：
图中可以看到，实际上成本偏差CV就是AC与EV的差值，而进度偏差SV是PV与EV的差值，请注意都是和挣值EV进行对比，而且做减法的时候EV都要放在前面。SPI和CPI没法很直观在图中表示，实际上就是斜率的比值，SPI是EV与PV斜率的比值，CPI是EV与AC斜率的比值。
三、 预测指标ETC，EAC，TCPI和VAC 这个时候大家应该基本了解CV, SV, CPI, SPI这几个绩效指标的含义了。在这个基础上，最后我们再来了解剩下的4个略显晦涩的预测指标：
完工尚需估算（Estimate To Completion, ETC），在某个时点，预测完成剩余的工作还需要多少成本；这个时候算预测数据的时候就要分情况了，主要取决于我们以后的工作花钱的效率跟以前比是否会发生变化？也就是考察以后工作的CPI的值会不会发生变化。根据剩余部分工作CPI的变化情况，有几种计算方法：
如果还是以当前的成本绩效完成剩余的工作，则 ETC=(BAC-EV)/CPI，也就是剩余的工作量除以成本绩效指数； 如果以计划的成本绩效（其实就是1）完成剩余的工作，则ETC=BAC-EV，也就是剩余的工作量，实际上也是用第一种情况那个公式； 如果进度绩效指标SPI也会影响完成剩余工作的成本，意思是如果严格规定我们必须要在计划的截止时间之前完成项目，那么可能就还需要额外的成本来赶工进度，这个时候就需要同时考虑CPI和SPI对于剩余工作的影响，一般计算公式则为ETC=(BAC-EV)/(CPISPI)，也就是剩余的工作量除以成本绩效指数与进度绩效指数的乘积；其中CPISPI又叫“关键比率”(Critical Ratio, CR); 完工估算（Estimate At Completion, EAC），在某个时点，预测完成整个项目需要的成本，当然就是实际已经花掉的成本加上前面那个完工尚需估算ETC，EAC=AC+ETC；如果剩余工作还是以当前成本绩效指数来完成，那么也可以这么计算EAC=BAC/CPI，这个公式也好理解，其实就是整个项目工作量除以成本绩效指数；完工估算EAC实际上就是预测项目完工时候的实际成本AC。</description>
    </item>
    
    <item>
      <title>NPV和IRR</title>
      <link>https://www.agilewalker.com/35-2/</link>
      <pubDate>Sat, 23 Nov 2019 06:10:55 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/35-2/</guid>
      <description>净现值（Net Present Value, NPV）：说的是把未来期望收入的钱换算成现在的钱（跟算利息类似，不过是反向运算，例如明年你会赚110元，假设贴现率是10%，那么换算成现在的钱也就是110/(1+10%)=100元，也就是说你明年赚到的110元就相当于现在100元的购买率，反过来就是你现在100元，利息10%，明年你就变成了110元，往后的年份一样算法），然后累加再减去投资成本得到累计净现值。累计净现值越大越好，理论上净现&amp;gt;0项目就可行，表示有赚头。
举例：假设两个项目A和B，都是投资10万元，贴现率10%，预期收入和净现值如下。（假设项目周期都只有5年，单位：万）
从上面的例子可以看出，项目B的净现值更高更值得投资，原因是虽然A和B的5年总收入如果不考虑货币时间价值加起来是相等的都是18.52万，但是由于项目B的收入来得比较提前，所以算出来项目B的净现值高，更值得投资。从这儿可以看到净现值主要算的是刨去货币贬值影响最后还能赚多少钱。
内部报酬率（Internal
Rate of Return, IRR）：说的是累计净现值为0的时候的贴现率。这个内部报酬率的意思就是项目能承受的最大货币贬值的比率。（赢利空间，抗风险能力。）还是以上面那个例子为例，假设现在贴现率变为20%，现在计算项目A和项目B的净现值如下：
贴现率20%时项目A和项目B的净现值
可以看到项目A净现值这时为负数，而项目B净现值还是正数，这说明项目A的内部报酬率（IRR）将小于20%，而项目B的内部报酬率大于20%，因为内部报酬率是NPV为0时候的贴现率。我们最后通过计算得出当贴现率为18.45%时，项目A的NPV刚好等于0，如下表所示：
贴现率18.45%时项目A和项目B的净现值
这个时候我们就说项目A的内部报酬率（IRR）为18.45%。
同理经过计算当贴现率为23.94%时，项目B的NPV刚好等于0，如下表所示：
贴现率23.94%时项目A和项目B的净现值
这个时候我们就说项目B的内部报酬率（IRR）为23.94%。
**总结：**从上面我们可以看到，净现值（NPV）说的是在考虑货币时间价值（通货膨胀贬值）下我们在项目周期内能赚多少钱，内部报酬率（IRR）说的是在考虑货币时间价值（通货膨胀贬值）下我们在项目周期内我们能承受的最大货币贬值率有多少，更通俗地说就是假设我们去贷款来投资这个项目，所能承受的年最大利率是多少。比如某项目的内部报酬率IRR是20%，说的是该项目我们最大能承受每年20%的货币贬值率，也就是如果我们去贷款投资该项目所能承受的最大贷款年利率为20%，在贷款年利率是20%的时候投资该项目刚好保本。当实际货币贬值率只有5%时（贷款利率是5%时），那么剩下的15%就将是我们的利润，虽然看上去说的是失误空间（最多我可以失误多少还能保本），抗风险能力，实际上也可以认为说的是利润空间，盈利能力。就像你去参加考试，60分及格，你的真实水平是90分，那么你的状态不好失误空间将有30分，就算你失误掉30分你仍然能及格，这个30分换算成比率就是你的内部报酬率（IRR），你的真实水平只有65分，那么你的失误空间将只有5分，稍微失误一些你将会不及格，此时你的内部报酬率就只有5分。虽然算的是内部报酬率，实际上也说明你的真实水平（90还是65）到底怎么样。
在实际项目投资中，NPV说的是具体数值，而IRR是一个比率，如果要比较我觉得IRR肯定好点因为是个相对值，单纯NPV只是个绝对值，没有考虑投资额的大小，只有再同时考虑投资额才能更充分体现项目的盈利能力，毕竟投资10万NPV是5万和投资100万NPV也是5万两个项目的盈利能力是不一样的。
链接：https://www.zhihu.com/question/27277841/answer/307970184
来源：知乎</description>
    </item>
    
    <item>
      <title>16天备考PMI-ACP认证通过无悬念—考试不易，自学定能水到渠成</title>
      <link>https://www.agilewalker.com/hello-world-2/</link>
      <pubDate>Wed, 30 Oct 2019 11:59:11 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/hello-world-2/</guid>
      <description>01清晨的消息 几天前的一个早上，屋外斑鸠的叫声刚开始没多久，我那浅浅的睡眠进程被经典的消息提示音中断，一个朋友发来消息，宣布通过了PMI-ACP认证考试。说起我考ACP认证是将近2年前的事情，记得是当时项目上比较紧张，也许自己确实慵懒而没有写点什么与备考的同行们分享。学而不思则罔，思而不学则殆，想来想去还是现在补上，也希望能通过这种方式，与同行学习交流，于是我就问朋友要了几张截图，看起来他成绩不错7A (PMI的新Logo还是很有活力的)。
02关于认证 PMI的ACP认证是个敏捷实践认证，我身边很多考过PMP的人都会来一份。目标人群有自己的职业现实需要(狭义上更多是以IT行业为背景，广义上可以对其它行业套用敏捷框架，历史最悠久的应该属制造行业)，对于希望在敏捷开发或制造，敏捷转型，敏捷项目管理等方面有官方认证的你是比较不错的选择，当然还有其它组织机构的相关认证(非常希望你在评论区给到宝贵的建议)。当然，我们绝不为了认证而认证，是要从认证中学到知识，向上生长。而且，术业有专攻，不太鼓励考过多分布领域太广的认证，A面：相信认证不是你能力的唯一证明，B面：相信你的时间是有限的，我们只能把精力放在一定垂直方向而自己又能学以致用，你说呢？
03备考过程 相关书籍(朋友推荐，绝非广告)：PMI官方出品的《敏捷实践指南》，必备经典，收藏和查阅皆宜；刘芳/石泉老师的《如何准备ACP考试》；于兆鹏老师的《敏捷项目管理与PMI-ACP应试指南》；配套的模拟题都是为了巩固知识，而且书都是前两年出的，目前试题已经有难度提升，从题干来看，明显比过去的题目要更长。
模拟题资料，马主席家有些店可以购买模拟题，建议不用太依赖通过渠道拿到的模拟题，90%以上不是真题，但有用，建议至少获得1000道题经验值，重复做与理解3遍，姑且认为是让我们巩固概念和贯通思想，如果是在机构培训拿到的，理论上讲应该会更接近真实(我们这里只考虑自学)。
根据过去的经历，如果不参加第三方机构的考前培训，初次考试，按备考周期2个月来预测，备考会占用你每周周末的时间，这样你才是有把握的，当然，不排除每个人个体差异。
04考前一天 你可以这么做：
需要放下参考书，放下模拟题；
需要提纲挈领，巩固考试知识框架；
需要充足睡眠。
05考试当天 早点吃饭，尽早到达考场，你在等待考试中可以看看根据知识点整理的思维导图，脑子里再次梳理一遍敏捷框架。
06考试过程 你不急不躁，按要求填写答题卡。基本每道题都很值得你深思一番，而且因为中英文直译的不可回避的问题，微微加大了理解的难度，有时间可以瞄下英文，可能帮助理解，但是千万要控制好时间，3个小时要分配给120道题，别想太久，实在不行的话，最后一招：大胆猜！我当时是最后一秒钟交卷，不是因为我已经笃悠悠地检查了2遍，而是因为我答题实在慢。。。最后一秒钟还在填答题卡。。。没事，这丝毫不影响我答题的热情，结果证明也不影响正确率。
07考后心理 我们不必过于担心考试后的负面的感觉，坦白讲，只要投入相应的时间，一定会获得考试通过。并不是说ACP认证没有含金量，经历过考试的同学都知道，题目很有质感，但毕竟认证考试的目的不是为了把那么多有志青年拒之门外，而是希望通过认证为切入点，鼓励更多的敏捷人士投入到轰轰烈烈的敏捷事业中，让我们在工作中不断培养理解并实践敏捷的行事原则与方法。在中国，敏捷引入的时间相对晚些，管他国外敏捷做的有多牛，我们中国人一向喜欢跳跃式前进(现在知道为什么种花家的主人是兔子了)。
08成绩公布 以2019年9月PMI-ACP认证考试为例，考试时间是9月7日，成绩公布2019年10月22日，相隔6-7周时间，参加今年12月份考试的同学可以相应评估下。纸质的证书可能要几个月后才能拿到，需要耐心等待。总之，你值得拥有。
09补考说明 如果有同学实在发挥失常，也没什么关系，补考再报名的费用是初考费用的三分之二左右，具体可以咨询代理报名或考试机构，就当进一步巩固知识。学习本身就是重复+改进的过程，这与敏捷思想也真是有些不谋而合了。
10祝福寄语 愿你考试的时候，答的都会，蒙的都对！我们一致认为Pass就是胜利！
附最新版ACP证书(电子版)供鉴赏：
未来会持续在这里交流分享相关话题，希望你愿与我一起参与其中。
-END-
互动交流：
你对ACP认证的重要性怎么看？
你有哪些经验分享一下么？
欢迎在评论区留言说出你的看法</description>
    </item>
    
  </channel>
</rss>
