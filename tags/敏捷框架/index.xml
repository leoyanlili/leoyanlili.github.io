<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>敏捷框架 on 捷伴行Agile</title>
    <link>https://leoyanlili.github.io/tags/%E6%95%8F%E6%8D%B7%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 敏捷框架 on 捷伴行Agile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright 2023 捷伴行Agile</copyright>
    <lastBuildDate>Thu, 01 Apr 2021 10:22:40 +0000</lastBuildDate><atom:link href="https://leoyanlili.github.io/tags/%E6%95%8F%E6%8D%B7%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scrum敏捷开发培训后有感</title>
      <link>https://leoyanlili.github.io/scrum-trainning/</link>
      <pubDate>Thu, 01 Apr 2021 10:22:40 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/scrum-trainning/</guid>
      <description>从⻓长远来看，你的组织可持续的竞争优势就是具有比对⼿更快的学习能⼒。
—— 彼得.圣吉
开端 2021年在即将辞旧岁和迎新年后，公司组织了两次Scrum敏捷开发企业级实训，2月初和3月初各一次。我有幸能参加第一次的培训，俗话说的好：输入只是学习的开始，输出是学习的检验和深化。在第二次培训结束后，感受到很多同事对敏捷开发方法还是有很大的意愿去尝试的。经过几天的思来想去，认为公司刚开始做敏捷转型，有必要做一个简单的文字记录，写下这次有意义的活动，同时也可供其他同事未来日常参考。本文简单小结了这次培训涉及的内容，以及结合了我自己工作中的一些思考，其中有部分文字是之前日常反思中记录下来的，此情此景，正好移花接木一下，希望大家原谅我的懒惰。
内容 通过这次培训，公司软件研发部门的同事从以下几方面了解了敏捷将带给我们的新的软件开发理念。
01 : 敏捷思维和理念 敏捷的核心思维让我们关注：价值驱动；适应变化；自组织团队。
价值驱动– 聚焦最高价值的目标
敏捷最短时间创造最大价值，以终为始，聚焦最重要的目标，从为什么开始。敏捷可以更快、更早地交付价值，优先交付高价值的需求。
瀑布模式强调单一职责，不同职能部门的工作交接和延迟阻碍价值交付，行政边界导致局部优化，筒仓之间的连接和沟通难以管理。 敏捷模式围绕价值流（共同的目标）建立跨职能团队，加速价值交付。 明确什么是高价值的需求、需求条目化和价值排序；聚焦高价值的目标、优先交付高价值的需求；围绕价值流建立跨职能团队和可视化看板，加速和持续优化交付价值。
适应变化– 掌控和管理不确定性
预定义过程和经验性过程的区别，预定义过程制定详细的计划和执行步骤，按计划执行直到所有计划执行全部结束；经验性过程从愿景和高价值的目标出发，小步快走，不断确认和调整，直到目标达成结束。在传统开发模式中，我们假设可以制定出详细的计划，一切都能按计划执行。在敏捷开发模式中，我们承认无法在一开始就明确详细的计划，存在不确定性， 整个过程中很多事情在变化。理解不确定性和涌现式需求；通过迭代、增量建立频繁交付、频繁确认、及时调整、修正，以建立快速的反馈；学习循环，以此降低交付错误产品的风险。
自组织团队– 释放团队的内驱力
过去的命令和控制式的管理方式已经越来越局限，在知识性工作环境下自组织型团队更是深得人心。自组织要求我们从命令与控制到目标驱动；从微观管理到领袖、教练和服务式领导；通过授权、支持、引导、反馈，所有的决策及交付活动中团队参与、共担责任。
Scrum和敏捷概要
敏捷软件开发宣言。
Scrum是一 个管理框架，Scrum用于新产品开发、 项目或团队的管理 。Scrum源自于软件开发，目前已经用于各个管理和创新领域。Scrum的理论基石是检视、透明、调整。
敏捷文化是我们倡导的一种思维方法，敏捷实践是一系列新的工作方式。敏捷实践和文化要相匹配和适应。敏捷运动是一场关于组织和个体的适者生存的进化，文化变革才是这场运动的核心。敏捷转型中文化变革要打头阵。
02 : Scrum 框架 Scrum五个价值观：
承诺-愿意对目标做出承诺； 专注-把你的心思和能力都用到你承诺的工作上去； 开放-把项目过程中的一切开放给每个人看； 尊重-承认每个人都有他独特的背景和经验； 勇气-有勇气挑战更高目标，做出承诺，履行承诺，表达不同的见解。 Scrum三个角色的职责：
Scrum团队的构成：Scrum 团队由一名产品负责人、开发团队和一名Scrum Master 组成，Scrum 团队是跨职能的自组织团队，团队具备完成项目工作的所有能力
Scrum开发团队是特性团队，团队内具备交付一项工作所需要的各领域的必需技能，例：分析、设计、编码、测试等；自组织团队，承诺工作，不是被指派，团队决策，共同担责，决定团队内如何进行决策。拥有共同的愿景、价值观和工作协议的团队文化。
Scrum Master是团队的教练，对Scrum流程负责，ScrumMaster每天的工作原则上就是确保团队用正确的姿势，高效地交付，同时，确保团队的文化保持在一个敏捷认同的氛围中。
产品负责人的职责是最大化产品的价值；产品负责人管理产品，帮助团队看到产品愿景和路线图，对需求进行优先级决策，准备并解释用户故事等；产品负责人和开发团队密切合作，随时都能响应团队的需要。
Scrum五个活动（在一个迭代中经历的活动）。：
产品Backlog梳理，对接下来迭代的需求进行预梳理，讨论初步的工作量和需要识别的风险。
Sprint计划会，团队对本次迭代的用户故事理解，分解，工作量细化评估。
每日站会，每天团队内部分享进展，第二天的计划，识别的风险及需要的支持。
Sprint评审会，团队与干系人一起，演示迭代工作成果，验证迭代交付的产品增量。
Sprint回顾会，团队内部改进，检讨的过程。产生改进流程和实践的建议并共同负责跟进。
由龙舟比赛角色想到的：产品端和交付端要合作博弈。产品推进需要结合交付端的能力，交付端需要根据自己的实际能力承诺，有勇气做出合理的承诺。交付端对每次迭代的交付范围有决定权，开发核心成员必须进行相应的判断，与产品端灵活沟通并引导期望。我们要做质量交付，而不是数量交付。产品管理者要有全局观，实事求是，平衡好产品端需求和交付端能力的因素，不可顾此失彼，更不可用KPI来控制某一方的诉求，进而实际分裂了整个团队共同的目标。在敏捷交付中，传统项目经理的职责被由PO，SM，和开发团队所共同分担。组织刚开始做敏捷，碰到问题，属于正常。作为敏捷领导者团队的一员，我经常自我反思，也帮他人反思，如何帮团队顶住压力，给团队注入动力。我想这是我们的课题。
03 : 敏捷产品和需求 产品 Backlog
产品Backlog的定义：是用户需求的集合，是按一定的优先级颗粒度排放的用户故事（需求）、缺陷、风险、技术工作等。具有以下特性：
Detailed 合适的详细程度
Emergent 涌现式的
Estimated 经过估算的</description>
    </item>
    
    <item>
      <title>如何理解并应用精益敏捷Kanban看板</title>
      <link>https://leoyanlili.github.io/understand-kanban/</link>
      <pubDate>Fri, 10 Jul 2020 03:45:18 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/understand-kanban/</guid>
      <description>我引入看板系统的目标是：防止过载、控制工作流的波动性，以及触发渐进式变革。
&amp;ndash;大卫.安德森
看板的基础知识 看板是一种用于管理产品创造的方法，该方法强调持续交付，同时又不增加开发团队的负担。 像Scrum一样，看板是旨在帮助团队更有效地协作的流程。它是一种可视化工作流程的方法。为了在需求与可用产能和瓶颈之间取得平衡，该框架在下面的工作中具有很高的生产率和效率。
临时请求(按需的任务) 计划外工作 生产支持 简要历史 在1940年代后期，丰田公司从超级市场那里找到了更好的工程流程。 他们注意到商店的店员通过商店的库存而不是供应商的库存来补充货品。
只有当一个货品接近售罄时，店员才能进行订购。 超市的“实时”交付流程激发了丰田工程师重新考虑他们的方法，并开创了一种新方法-看板系统-该方法可以使库存与需求匹配，并实现更高的质量和产量水平。
看板，拼写为Kanban，是日语中的“信号板”，表示“可用产能（工作）”。 看板是与精益生产和实时生产（JIT）有关的概念，它被用作排产系统，告诉你要生产什么，何时生产以及要生产多少。看板成为支持整个生产系统运行的有效工具，也是促进改进的很好的方法。
原则 在看板方法上实施软件增量是一个基于拉动的系统，它可以帮助团队以可持续的速度和产能进行交付，减少了工作和时间的浪费。 保证这一点，就需要遵循以下看板的基本原则。
1. 可视化工作
看板工作面板的可视化模型及其工作流程使范围和功能透明化，有助于观察和检查从待办事项到完成的工作流程。 这样会让工作可见，也包括阻塞，瓶颈和队列以及即将进行的工作，这有助于团队制定策略，是继续进行现有的工作或将新工作带入。
2. 限制在制品WIP
团队为看板面板中的所有“进行中”的列共同定义了一个限制，例如分析，开发，测试等。此WIP限制实现了基于拉动的系统，因为只有在该列下的工作总数少于其上限的情况下才可以将工作从上一列拉至当前列。
这有助于平衡基于流的方法，团队不会开始并承担过多的工作。 它减少了浪费，并帮助团队专注于先完成后开始。
3. 聚焦在工作流
要完成一项工作并增加价值，它必须经历其开发过程的多个阶段。 如分析，开发，测试，评审等。为了获得看板的价值，团队需要专注于从启动到完成的工作流程。 通过遵循上面2条原则，可以帮助你专注于流程。
专注于工作流会使团队可视化即将到来的的瓶颈并对其采取行动。 以便保持流动。 团队经常制定工作的策略以优化流程。
把看板和现实生活相关联 我们已经学习了看板的基础知识及其原理，让我们尝试将看板流程与现实生活联系起来。 假设你已经知道并正在实践Scrum，我们将在其中执行定义的时间框的迭代。 我们提交一堆故事，对其进行处理2到3周，然后完成迭代，并再次计划新的一堆故事以进行下一次迭代。 在看板中，我们不会为迭代，时间框或冲刺提交故事。 我们做的有些不同。
在下面的示例中，我们将Scum和看板与现实生活联系起来。 假设人们是故事，放映厅是一次迭代，放映时间是迭代时间。
关联Scrum流程和现实生活 这个案例说明了放映厅中的人员流动，一次是一群人。 如果我们假设人是用户故事，并且将时间显示为迭代或时间框。 然后，你可能会注意到一群人一起在放映厅里走来走去。 我们有明确的座位容量和放映时间。 为每次放映安排的人在放映开始之前已预先计划好了。
关联看板流程和现实生活 这个案例说明了门卫允许公园中的人流是一个接一个的。 如果我们假设人是用户故事，那么公园就是看板面板。 然后，你可能会注意到没有定义的公园放映时间，因为它是24小时开放的。 进入公园或在公园内漫游并出来的人不在同一个人群中。 我们没有容量和演出时间。 但是，公园的管理层决定一次不允许在公园内同时容纳6人以上，以提高公园内人们的舒适度。
在此图中，让我们尝试用Scrum术语关联场景。 如果我们假设人是用户故事，那么在大厅外面等待下次放映的人就是Backlog中的用户故事列表。当前的放映厅放映就是当前Sprint或迭代。观众是冲刺的故事。 显示时间是冲刺持续时间。 放映厅容纳人数是团队对冲刺的产能。 已经看过电影的人是以前冲刺中的“完成”故事，可能已经确定已发布或已部署。
在这里，让我们尝试用上面的图片来映射看板术语。 假设人员是用户故事或任务，公园是可视看板面板。 排队等候在外面的人是当前的看板Backlog。 放映时间没有定义，“最大容量”没有限制，但是管理层决定不允许面板中的故事超过6个。 已经从公园出来的人就是已经可以部署的用户故事。 管理层正在统计出来的故事，以便允许进入新的故事。看板面板(公园)内的故事(人)没有确定的开始或结束日期。
上面图片中进行解释，以解释Scrum流程。
上面图片中进行说明，以解释看板流程。</description>
    </item>
    
    <item>
      <title>「视频」规模化敏捷Spotify模型的工程文化</title>
      <link>https://leoyanlili.github.io/%E3%80%8C%E8%A7%86%E9%A2%91%E3%80%8D%E8%A7%84%E6%A8%A1%E5%8C%96%E6%95%8F%E6%8D%B7spotify%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%96%87%E5%8C%96/</link>
      <pubDate>Wed, 24 Jun 2020 02:04:10 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/%E3%80%8C%E8%A7%86%E9%A2%91%E3%80%8D%E8%A7%84%E6%A8%A1%E5%8C%96%E6%95%8F%E6%8D%B7spotify%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%96%87%E5%8C%96/</guid>
      <description>「视频」规模化敏捷Spotify模型的工程文化 在这里开视频
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷Scrum开发7大事件之2：团队Sprint产能规划</title>
      <link>https://leoyanlili.github.io/sprint-capactiy-planning/</link>
      <pubDate>Thu, 16 Apr 2020 12:49:55 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/sprint-capactiy-planning/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解关于产能规划的话题：
&amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 产能规划Capacity Planning，是指意估算和计算敏捷团队在每个迭代中能贡献的有效工作能力。 有两种广泛使用的产能测量单位，在我的其他文章中有时会写成“能力规划”。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 1. &amp;lt;strong&amp;gt;故事点&amp;lt;/strong&amp;gt;，这是一种计算速度的简单方法（最后6到10个Sprint接受的故事点的平均值）。 并针对下一个Sprint提交与速度匹配的用户故事。我个人建议另一种方法，用小时数进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 2. &amp;lt;strong&amp;gt;小时&amp;lt;/strong&amp;gt;，我个人建议按小时进行产能规划。 在本文中，只以这种方式进行产能规划。 它提供了更好的可见性和准确性。 还有许多其他好处，将在本文后面讨论。&amp;lt;br /&amp;gt; 这里我们通过计算下个Sprint的可用时间。计算敏捷团队的可投入的生产力（PO和SM除外）。&amp;lt;br /&amp;gt; 将详细讨论谁来计算它，在本文中考虑哪些因素。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 这种技术非常容易计算和规划团队产能。 下面逐步说明，可以通过维护Excel来进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid vc_row-o-equal-height vc_row-o-content-middle vc_row-flex&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; &amp;lt;span class=&amp;quot;dt-highlight&amp;quot;&amp;gt;Step 1 – 计算Sprint持续时间&amp;lt;/span&amp;gt; &amp;lt;/h4&amp;gt; &amp;lt;p&amp;gt; 以天为单位计算Sprint持续时间，确定Sprint的开始日期和结束日期。 为了说明这一点，进行了为期2周的Sprint，从星期三开始，到星期二结束。 正在为Sprint 2进行产能规划。&amp;lt;br /&amp;gt; 下图代表10天的2周Sprint –日历。 分散在三个物理日历周中。 在本文的其余部分中，将用这个颜色说明来解释，其中&amp;lt;br /&amp;gt; 黄色=上一个Sprint&amp;lt;br /&amp;gt; 绿色=当前的Sprint&amp;lt;br /&amp;gt; 蓝色=未来Sprint &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-large wp-image-1049&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷文化中的Scrum是什么？ – 速成班带你深度了解</title>
      <link>https://leoyanlili.github.io/scrum-crash-course/</link>
      <pubDate>Thu, 16 Apr 2020 03:36:39 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/scrum-crash-course/</guid>
      <description>[本视频长度1.5小时] 敏捷文化中的Scrum是什么？ - 速成班带你深度了解
[https://player.youku.com/embed/XNDYxMDk2NjgwMA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
  </channel>
</rss>
