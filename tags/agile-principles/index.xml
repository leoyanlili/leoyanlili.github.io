<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>agile principles on 捷伴行Agile</title>
    <link>https://leoyanlili.github.io/tags/agile-principles/</link>
    <description>Recent content in agile principles on 捷伴行Agile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright 2023 捷伴行Agile</copyright>
    <lastBuildDate>Wed, 27 Jan 2021 14:53:45 +0000</lastBuildDate><atom:link href="https://leoyanlili.github.io/tags/agile-principles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>团队是敏捷教练的镜子</title>
      <link>https://leoyanlili.github.io/team-is-mirror-of-coach/</link>
      <pubDate>Wed, 27 Jan 2021 14:53:45 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/team-is-mirror-of-coach/</guid>
      <description>敏捷教练是团队的镜子，这是一个常识，我认为反之亦然。
前言 在敏捷教练的工作过程中，经常告诉自己的一句的工作职责就是：要作为团队的镜子。作为团队的镜子，敏捷教练或Scrum Master参与团队和个人的工作过程，一个重要的任务是通过观察以及沟通寻找发挥自己职能的时机，帮助敏捷团队的看清自己行为本身有哪些可以继续保持或是可以做的更好，让团队能够发现改进机会。我们今天要说的是在这个过程中，教练也可以把团队作为镜子，发现自己的问题，思考如何让自己做得更好的，以符合团队的现状和目标期望。在敏捷中，传统项目管理的职责被 PO，开发团队和SM所共同分担，PO负责目标，团队负责交付，SM负责流程、团队和改进。作为敏捷领导团队的一员，我们经常自我反思：如何帮团队顶住压力，并给团队注入动力？
在前一篇博客中，总结了个人理解的敏捷含义，本文就从这几个方面谈谈我们今天的话题：
敏捷是流程 敏捷是文化 敏捷是价值 敏捷是改进 敏捷是变革 敏捷是流程 我们有敏捷框架，如Scrum来规范流程，使交付更有条理，更有节奏，像心跳一样，且更有愿景感。
当团队初创的时候，对Scrum方法还不清楚，敏捷教练就需要要导入Scrum基础知识，并在实践中指导团队在交付过程的活动和行为，如每日Scrum站会，评审会，故事点评估等；关注对于个人的教练活动，如帮助新晋PO编写用户故事，人员等。随着每次迭代的完成，团队对交付的流程都会更清晰，更熟练，在流程执行上，教练会表现的更加轻松和相信团队能自己掌握流程，有选择地进行教练活动，甚至自己可以静静地站在旁边作为旁观者。这个时候也可以思考如何取得进一步改进。SM绝对不能离开团队，没有SM的团队即便不思考任何改进，也有随时可能回到解放前的风险。
产品交付中，开发团队永远拥有主角的光环，不是PO，更不是SM。
敏捷是文化 我们拥抱变化，沟通透明，跨职能合作，永远在学习的路上，快速修正自己的问题和目标，绝不延迟。
从传统项目交付走过来的团队倾向控制变更，这时可以让团队意识到，唯一不变的就是变化，在交付中，“永远拥抱变化，随时调整一切”是我们能为客户提供价值的最好原则。敏捷教练需要经常提醒初创团队，学会从“他们”和“你们”到用“我们”进行沟通，在必要的时刻化解危机，避免团队内部互相指责的苗头，对外铁板一块，对内良性碰撞；当团队遇到交付的能力瓶颈的时候，鼓励团队自组织，进行跨职能交付，帮助联通相关职能部门，促进学习型组织的文化氛围建设，发现团队向上的提升空间，鼓励团队尝试新的工程实践。“尽早的试错，不怕出丑，快速调整”是教练帮助团队高质量交付的利器。
敏捷是价值 我们的价值是客户的认可（含显性和隐性），一切不能被认可的工作，在迭代内我们是要尽量避免的，有效的价值流动，是我们的使命。
当新晋PO不擅长对待办列表进行优先级排序时候，SM可以给PO提供指导；当开发团队在规划中选择更多的用户故事的时候，SM可以给到建议，专注在有把握交付（通过验收）的工作上；SM也可以帮助开发团队和PO一起定义验收标准和完工的标准，确保开发团队和PO对交付的价值有一致的标准。
敏捷是改进 我们的改进没有终点，我们一定要比上一个迭代做的更好，这是我们的目标，即使比过去有了很大的改善，也决不满足于当前所处的。我们不断学习，想办法提升，在固定时间内为组织持续创造更多价值，即便这意味着我们可能以减少交付数量为代价。
当团队已经能够按Scrum方法执行交付过程的时候，在效能上或团队氛围上已经远远好于之前的传统交付过程，教练要帮助PO和团队意识到不必满足于目前的成就，我们能做的还有很多，回顾会就是重要的一种形式；有时候团队为了在有限的时间内推进功能，会抵触学习新的工程实践，教练应该告诉团队工程实践也是有价值的工作量，营造改进的安全空间，并可以从相对更支持的人员那里得到帮助推进某项实践；也可以考虑引入工程技术经验丰富的新成员，带动团队的学习氛围。一个有时间和愿意学习的团队是我们都想看到的。
敏捷是变革 我们做的是一件革新的事情，起初一定会面对来自内部和外部的各种不理解，质疑甚至是阻力，如何帮助团队改进，帮助干系人理解，树立信心，如星星之火而燎原是我们的课题。
当组织刚开始进行转型的时候，敏捷教练一定是得到了高层的支持，并从基层开始推行敏捷实践；建立试点团队，遇到不理解或质疑时候，可以多与团队和管理层沟通，教练要了解团队的历史和人员经历，对症下药，并尽快帮助团队取得一定的战果，获得自信心；邀请干系人参与到迭代评审会议中，完全透明的展示产品的进展，听取干系人反馈的同时，敏捷团队不仅得到了宝贵的改进机会，更是建立信任和获得支持的过程，从而为在组织层面推广敏捷实践打下基础。
写在最后 以上是个人的一些理解，拿出来与大家分享，难免偏颇之处，乐与大家共同探讨，我自己常说：敏而求错，捷而使正。天下没有放之四海而皆准的方法和工具，关键在于我们认为人是第一重要的元素的原则，根据时机，环境和事物的变化来调整方法和工具，不断对自己的教练工作提出更高的要求并将其落地。</description>
    </item>
    
    <item>
      <title>每个人都知道敏捷是什么</title>
      <link>https://leoyanlili.github.io/what-is-agile/</link>
      <pubDate>Sat, 23 Jan 2021 01:28:02 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/what-is-agile/</guid>
      <description>唯一不变的是变化
很多时候后被问到：敏捷是什么？以下是我的简单理解（不想给大家太大的阅读压力，自己也写不出太多文字）：
1. 敏捷是流程： 我们有敏捷框架如Scrum来规范流程，更有条理，更有节奏，像心跳一样，且更有愿景感。
2. 敏捷是文化： 我们拥抱变化，随需而变，跨职能合作，永远在学习的路上，不断修正自己的问题和目标，绝不延迟。
3. 敏捷是价值： 我们的价值是客户的认可（含显性和隐性），一切不能被认可的工作，在迭代内我们是要尽量避免的，有效的价值流动，是我们的使命。
4. 敏捷是改进： 我们的改进没有终点，我们一定要比上一个迭代做的更好，这是我们的目标，即使比过去有了很大的改善，也决不满足于当前所处的效能。我们不断学习，想办法提升，在固定时间内为组织持续创造更多价值，即便这意味着我们可能以减少交付数量为代价。
5. 敏捷是变革： 我们做的是一件革新的事情，会面对来自内部和外部的各种不理解，质疑甚至是阻力，如何帮助团队改进，帮助干系人理解并获得支持，树立信心，如星星之火而燎原是我们的课题。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>今天是五一劳动节，我不能忘了劳动，牢记我们的敏捷原则。最后一张图推荐做手机墙纸</title>
      <link>https://leoyanlili.github.io/2020-5-1-labor-day/</link>
      <pubDate>Fri, 01 May 2020 13:09:49 +0000</pubDate>
      
      <guid>https://leoyanlili.github.io/2020-5-1-labor-day/</guid>
      <description> </description>
    </item>
    
  </channel>
</rss>
