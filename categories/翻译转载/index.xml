<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>翻译转载 on 捷伴行Agile</title>
    <link>https://www.agilewalker.com/categories/%E7%BF%BB%E8%AF%91%E8%BD%AC%E8%BD%BD/</link>
    <description>Recent content in 翻译转载 on 捷伴行Agile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright 2023 捷伴行Agile</copyright>
    <lastBuildDate>Sat, 16 Jan 2021 10:36:22 +0000</lastBuildDate><atom:link href="https://www.agilewalker.com/categories/%E7%BF%BB%E8%AF%91%E8%BD%AC%E8%BD%BD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>产品负责人的轻度思考，6个小策略，面对迭代Sprint评审会</title>
      <link>https://www.agilewalker.com/sprint-review-advice/</link>
      <pubDate>Sat, 16 Jan 2021 10:36:22 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-review-advice/</guid>
      <description>人类并不善于将事情做得十全十美，于是软件中充满Bug也就不足为奇了。
Sprint评审会议可能是产品负责人最重要的活动，它可以帮助你收集反馈意见，做出正确的产品决策，从而增加创造成功产品的机会。产品负责人可能并不总是清楚谁应该参加会议，应该如何开展这个会议，以及如何收集相关反馈。本文将回答这些问题，并分享一些建议，以帮助你在Sprint评审会上得到更多收获。
邀请正确的人参与 从正确的人那里收集反馈信息对于做出正确的产品决策至关重要：如果你邀请了不合适的人参与，或者关键人物未到场，那么你不太可能收到你所需要的反馈。因此，你应该确保你邀请合适的人参与。
一般来说，邀请那些你需要获得反馈来验证最新产品增量，以及可以帮助你推进产品发展的人参与。这些人通常是你的关键干系人 - 对你的产品有兴趣的人员，以及你需要去发掘的产品用户和需要你提供产品的人。这些人可能包括营销，销售，服务和支持人员以及其他业务部门的人员，具体取决于你的产品和组织。
为了鼓励干系人参与，以及管理干系人的期望，告诉他们为什么需要他们参加会议，以及他们可能会看到什么，这是很有帮助的。
协作但不要畏惧说不 我参加过不止一个很快就结束的Sprint评审会：一位开发团队成员向那些看起来很困惑的干系人和站在这些干系人身后的产品负责人演示了产品功能。然后，Scrum Master询问大家是否有任何问题或反馈意见，这些干系人相互看着对方，有些人说：“干的不错”，“看起来还可以”，然后人们就离开了。这次会议收集到的有价值的意见是零。
因此，要鼓励人们积极参与并分享他们的观点，想法和担忧。使用开放式的问题，比如“你怎么看待我们对注册功能的改进？”，试着理解为什么有人喜欢或不喜欢这个迭代的产品增量。收到诸如“看起来很棒”的反馈可能会感觉很好，但是它并没有提供任何新的见解。为什么这个人喜欢这个功能？有什么可以进一步改善？
让所有的与会者有机会发表他们的观点，欣赏他们的意见和反馈，即使你不同意或难以接受他们。请记住：来自干系人的创造力，知识和反馈可以帮助你做出正确的产品决策，以提供可能的最好的产品。
同时，不要接受某些个人通过这个会议来达成他的个人目的或者某个业务单元的利益。我记得有一次Sprint评审会，当时一位高级干系人在产品负责人和开发团队中直言不讳地提出了他的要求，这当然不合适，也没有提供任何帮助。
作为产品负责人，善待和理解很重要。但是不要让干系人告诉你该怎么做。你对产品负责，你必须拥有最后的发言权，否则你无法获得足够的权力和尊重。
对于没有帮助的想法和不现实的要求，不要害怕说不。基于产品整体战略和产品路线图来决定是否需要接受相关请求。如果你怀疑你的决定，可以使用下一个sprint来测试这个想法或请求是否对用户有益。但请记住，提供一个令所有人满意的产品几乎是不可能的。
考虑把Sprint评审会分成两部分 在有些情况下，将Sprint评审会分为两部分是有帮助的。
第一部分，你和开发团队参与，团队向你演示产品增量。然后，你向团队成员提供反馈意见，并确定哪些条目已完成，我们现在进展如何。你可以使用发布燃尽图来看看进展。如果你在Sprint期间已经有了足够多的参与，并且已经看过相关完成的功能并给与了反馈，那么第一部分的环节你可能根本不需要。
第二部分，干系人参加会议。我发现，作为产品负责人，通常最适合向干系人呈现产品增量：你可能比开发团队成员更好地了解用户如何与产品进行交互并使用新功能。然后收集干系人的反馈意见，以了解我们是否开发出了具有正确用户体验和功能的正确产品。按照上面的建议询问开放式问题，以便了解为什么新功能很好或者为什么需要调整。
把会议分成两个部分，这样你可以与开发团队有一个线下沟通的机会，也可以在Scrum团队以外的人加入之前理清分歧。当你在Sprint期间没有机会与团队互动时，这种方式尤其有用，例如，你和团队不在一个地方办公，或者你忙于访问用户和客户，或参加展会或会议。但是要确保开发团队成员出席整个会议。直接听取干系人的意见是非常宝贵的。
考虑分开收集最终用户和干系人的反馈 Sprint评审会的原意是将所有合适的人聚集在一起，同时收集每个人的反馈意见。如果这对你有效，那很好。但是，我经常发现分别收集用户和内部干系人的反馈信息会更有帮助。为什么？这两个群体往往有不同的观点和利益。
通过用户测试产品增量可以让你了解产品是否适用于你的目标用户群，是否提供了正确的用户体验和正确的功能。与干系人讨论产品增量可帮助你了解是否高效地提供了产品，是否可以开始运营、销售和支撑你的组织了。
更重要的是，最好用不同的技术来收集用户和干系人的反馈：当实现的功能很少时，向最终用户演示产品增量是有意义的。否则，观察或测量用户实际使用产品的方式会更有帮助，例如可用性测试和早期版本。
相比Sprint评审会，这些技术通常需要更长的时间，可能需要几天的时间才能将产品增量发布给（选定的）用户后收集相关数据，这种方式自然而然地把收集最终用户反馈和收集干系人反馈分开了。
用户胜过干系人：如果产品不利于用户，人们不会长期使用它，无论它是多么可销售或者可服务，或者CEO有多喜欢。
不要急于决定 有些情况下，你可以在Sprint评审会议上立即做出产品决策，甚至可以调整好产品Backlog。很多时候，特别是如果反馈的影响比较大，导致产品Backlog变化更大的时候， 花更多的时间来分析反馈，得出正确的结论，然后再决定如何调整产品Backlog，这样你能够得到更多的收获。
此外，如果你决定分开收集用户和干系人的反馈意见，如上所述，你可能不会在Sprint评审会获得相关反馈数据。因此，你应该考虑把收集反馈和数据，跟分析和采取行动分开进行。例如，你可以选择在下一次Sprint计划会议之前开展一个简短、聚焦的产品Backlog工作坊，用这种方式来客观评估这些反馈，并和开发团队讨论如何调整产品Backlog。 或者，你可以在分析工具的帮助下，收集到足够多的用户数据以后，在下个Sprint组织一次产品Backlog的会议来评估这些反馈。
讨论发布进度 想象一下，所有的反馈和数据表明，人们将会热爱你的产品。然而，如果你的产品发布延迟或者超出预算，那么产品可能不会成功，甚至可能不会正式发布。因此，你必须定期确保产品要有进展。
Sprint评审会是一个很好的机会，因为你现在应该知道哪些条目已经完成，距离终点还有多远。此外，参加会议的关键干系人可能需要知道新的产品版本是否能按计划发布，或者是否有延误，因为这可能会影响他们的工作。更重要的是，讨论发布进度将当前的Sprint放到了上下文环境中，并和之前Sprint连接起来，让我们能看到整体的进展。
我喜欢使用发布燃尽图——Scrum的标准工具来跟踪发布进度，并预测项目的后续进展。发布燃尽图展示了产品Backlog中剩余的工作量随着迭代的开展不断减少的趋势。
无论你使用哪种工具：确保它可以帮助你了解你的进度如何，并进行必要的调整：比如，推迟发布日期、只部分满足发布目标、比计划交付更少一些的功能等。</description>
    </item>
    
    <item>
      <title>产品发布计划</title>
      <link>https://www.agilewalker.com/product-release-plan/</link>
      <pubDate>Sat, 28 Nov 2020 08:48:42 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/product-release-plan/</guid>
      <description>&amp;ldquo;不谋万世者，不足谋一时；不谋全局者，不足谋一域。&amp;rdquo;
-陈澹然[清]
序言：
这篇文章，让我想到了全局观，应该是作为产品负责人具备的基本素养，不仅给产品以愿景，给团队以方向，同时也能帮助产品负责人与干系人很好的进行沟通。而发布计划应该是这种素养的可视化的表述之一。发布计划向上衔接面向管理层的产品愿景和路线图，向下衔接面向团队的Sprint计划，对产品某次发布有个明确的规划，连接愿景与落地。个人的经验而言，可以让产品负责人与团队一起，结合用户故事地图工具一起来做发布计划。
2015年4月27日，一架皇家空军C17运输机飞往尼泊尔，装载了人道主义援助和物资。飞机的速度，每个货盘离开C17所花费的时间以及货盘的顺序确定了哪个货盘将降落在哪里&amp;hellip;.有了愿景，你需要制定计划以整合投资和资源来开发产品。你已经有一个产品待办事项，并在使用产品待办事项条目（PBI）用以形成日常的产品增量。你已经在产品待办事项中估算了产品待办事项条目，并知道所有团队的速度。
产品负责人需要能与干系人沟通下一个发布的时间以及该版本包含哪些产品待办事项条目。 有时候，发布日期是一个重要的约束，而有时发布内容是主要的约束。 当同时约束日期和内容时，会出现过度约束的问题引起的风险，产品负责人必须使这种风险透明化。
如果开发团队可以通过明确的日常产品增量看到承诺的长期方向，那么他们更有可能投入更多的精力去实现这一目标，并且更有可能在实现产品愿景的过程中构建正确的事物。
如果对下一个版本的内容缺乏明确的共识，则可能会给干系人一种印象，即在下一个版本发布之前，范围是可以协商的。 结果，发布日期可能会受到功能蔓延的影响，并且团队最终一再推迟交付。
当产品负责人对市场，团队和干系人都熟悉的时候，信任度很高，仅凭概要计划和评估就足够了。 另一方面，如果产品负责人是刚开始接触团队，市场或利益相关者，信任度低，或者该计划包含高于正常水平的风险，则可能需要更详细的计划和评估。
孤立地创建发布计划的产品负责人会错失开发团队的智慧和见解。 此外，团队不会对计划有责任感，因此他们不太可能对任何预测都全情投入。因此：与开发团队一起创建初始产品待办事项，根据你计划实现的愿景并最大化价值的产品增量顺序进行沟通。 也就是说，使用待办事项制定发布计划。 使用该计划获得必要的投资者承诺和团队预测来开发你的产品。
我们的焦点始终放在产品级别上的进展。 如果你有多个开发团队通过一个产品待办事项一起工作，那么他们可以使用其历史速度来预测在当前的产品待办排序的情况下，这些团队一起将产生的日常产品增量， 但是这种方式不依赖于将特定的产品待办事项预先分配给各个团队。 由于速度各不相同，因此任何一组日常产品增量的预期进度也会有所不同，在任何给定的交货日期，日常产品增量的内容也会有所变化。
发布计划是下几个发布的可交付成果的有序列表。 即使团队的速度有微小的差异，但经过短短的Sprint后，交付进度仍变得不确定。 根据经验，超过三个Sprint会包含更多的猜测，而不是统计上合理的预测。
包括固定工作，发布计划考虑了使PBI完成的所有工作。 对于任何PBI，团队不得将“强化”工作或“质量工作”与其余工作分开。 产品负责人会定期根据对市场和团队速度的最新理解更新发布计划。
从顶部开始逐步解决待办事项，将每个PBI的估算单位（例如估算点）相加，直到达到已知团队速度的总和。 下一个版本的日常产品增量包括这些位于产品待办事项列表顶部的条目。 继续向下推进待办事项工作，将PBI放到日常的产品增量中，并将日常的产品增量分配给后续版本。 根据此计划更新产品路线图。
例如，假设团队估计先前草图中的每个PBI需要10个估计点的工作。 该团队在7月15日之前有6个Sprint的可用时间，我们想知道届时我们将能够交付什么。
团队有一个速度保持在每个Sprint 15至20点之间的历史。 所有其他考虑因素都相同，团队将在7月15日之前完成90到120个估算点的工作。我们可以从待办事项的顶部算起PBI估算值，在这里，每个条目的估算值是10点，我们相应地预期团队将完成的工作量。 在这里，所有其他因素都相同时，他们将完成9到12个PBI。
从理论上讲，可以对这些计算采取更严格的方法：例如，规定15到20之间的速度范围涵盖过去大约五个Sprint的所有速度的两个标准偏差。 然后，从理论上讲，会声称下一个Sprint的预测交付具有95％的确定性，依此类推，随后的Sprint的确定性会更低。
然而，实际上，速度，团队构成，产品待办事项的内容（它会发生变化！）和市场条件等参数变化很大，以至于即使在统计确定性上，外部因素对差异的影响也会破坏任何预测的尝试。 尽管如此，这个方法仍是面对未来的合理指标和通用的预测法，就像我们可以或多或少地依赖天气预报员的预测。
一个常见的敏捷短语是“将决定推迟到最后一个必须决定的时刻”的建议。 某些PBI的目标日期可能构成这样的“必须决定的时刻”（期望的或强制的交付日期），然而，负责任的精益实践会推动决策而不是推迟决策。
发布计划用产品待办事项作为框架，以尽可能早地做出决策（例如，考虑PBI之间的依赖关系，或者将PBI或日常产品增量与发布日期保持一致）。 在所有其他条件相同的情况下，尽快开始工作很重要，因为设计和实施有助于使紧急需求尽早可见，并为团队提供有关风险的早期数据。 推迟工作或驱动工作的决策只会延迟不可避免的事情。 使用这种方法，你可以根据团队速度更新评估的发布日期。 这个方法在全世界都有广泛的Scrum实践。
产品负责人可以通过发布计划来确定长期价值，该发布计划应说明PBI之间如何相互加强，或者可以基于高价值优先，计划项目样式的一系列发布。 然而，团队不应将此类评估值当做任何给定PBI的确切日期，并且不应将交货日期解释为具有约束力的承诺。 发布计划基于估计，并承认灵活性而非必然性。 Scrum保持交付日期固定不变，因此Sprint的结束日期是神圣的，此时团队将尽力而为。 敏捷性的代价就是有些不确定性。
也可以在Sprint结束前发布一些PBI，每次发布一点日常产品增量，可以让交付流程顺畅，并最大程度地减少已完成工作的堆积。
—
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>Scrum框架的局限性在哪里？</title>
      <link>https://www.agilewalker.com/where-scrum-limits/</link>
      <pubDate>Mon, 28 Sep 2020 13:26:15 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/where-scrum-limits/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;By Mark Levison&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Posted on January 29, 2019Posted on January 29, 2019&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;我经常在研讨会上被问到：“我们在哪里不应该使用Scrum？” 精简的回答是，在很多情况下Scrum框架都不适合。 但是，要对这个问题给出更完整和有效的回答，首先，我们需要知道Scrum为什么和什么时候有效以及成功的关键条件是什么。 然后，我们可以拿出不适合的示例。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>翻译敏捷行业专业外文，不只是谷歌翻译</title>
      <link>https://www.agilewalker.com/translation-beyond-google/</link>
      <pubDate>Thu, 21 May 2020 11:36:53 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/translation-beyond-google/</guid>
      <description>流行但愚蠢的态度是，一个好的经理在任何地方都可以成为一个好经理，而不需要对他所管理的生产过程有特别的了解
—爱德华.戴明
前言 孔子说：一日而三省吾身。应该说是体现了敏捷思维在个人哲学意识迭代中的最早的实践应用。但真的要做到，确实有点难。改成三日一省如何？至少三天才能对一件事情有比较客观的初步认知。每次反思就像Scrum框架里的一个Sprint，总要有个时间盒子，结束后能看到增量价值交付。这里就不接着谈Kanban了，敏捷方法不是今天的主题。该反思的还是要反思，但不用太频繁。
说说翻译 偶尔会做些敏捷行业外文的翻译，一方面借此提升自己的行业英语水平，另一方面对行业的知识通过翻译的形式，加深自己的理解并促进工作实践。师夷长技以制夷，这里谈不上“制”，只为提升自我。
很多人听到翻译，觉得现在应该挺简单，有谷歌翻译。不排除每个人的背景不同，本业余人士的个人理解是，一篇专业的翻译文章需要至少经历以下几个步骤：
第一步 谷歌翻译，当今社会效率至上，让人工智能解放人类的一部分时间。把译文的基本的框架涂鸦出来，当然，这个版本往往是惨不忍睹，你懂的。很快能完成。
第二步 专业翻译，译者需要有较长时间的专业知识沉淀，理解和实践经验，结合领域专有思维。如同本文开头，戴明说的那句话。例如，agile在英语中是形容词“敏捷的”，可自从本世纪初有了大写A的Agile，这个词就成了一个专有名词，敏捷宣言的“敏捷”，成为了软件开发行业甚至日后的各大行业中更先进的理念。对每个行业来讲都是一样的，专业的事情交给专业的人。
第三步 共情翻译，译者需要通过文字与优秀的作者共同感受。需要点虚拟穿越的想象力，进入作者在写作那一刻的环境，思想和情绪等，翻译出来冰冷的文字，也是知识，但无法把作者的情感传达给读者。例如，something must not become stale，简单翻译：某事一定不能太久，结合上下文，感受作者的心情和中文的习惯，或许可以这么翻译：我们一定不能把某事拖太久。
第四步 文化翻译，结合中华5000年的文化特点。让浑厚的中华文明来给文章润色，这就是好好学习语文和历史的好处了，也可以经常这么教育孩子。 翻译时，我们可以考虑用成语，这是中文的很特别的地方。例如，Empty List，直接翻译就是 “空的清单”。总觉得这么翻译太干，有时候可以结合上下文，翻译成“空空如也的清单”也许就更朗朗上口。
第五步 通读三遍，调整标点符号，段落，错别字等。文字能简单就简单，字数越少越好。首先自己觉得顺畅，标准是，把自己当成读者。帮读者易于理解，节省阅读时间，是作者和译者共同的责任，接着就可以把译文传递到下一步。
第六步 专家审校，最后，译文由优秀的行业专家的审校是很重要的，颇有些XP中结对编程的味道，结对翻译？一个人总是难免出错，考虑不周，有同行专家的审校总是让人心里踏实很多。
写在最后 即便经历了前面六个步骤，要告诉自己的是，译文一定还有改进的空间，能够翻译的更好，这也是敏捷人的共同思维模式。不过，翻译工作该交的时候还是要交，从完成到完美的过程永远不会结束，所以，完成比完美更重要。优秀的翻译文章和书籍都凝聚了相关行业专家心血和对行业长期投入而获得的领悟，除此，还需要足够的文学，历史，哲学等方面的知识。
保持社交距离。勤洗手。 —
END
感谢你阅读本文，希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>运用GROW模型，提问的艺术，敏捷教练基本功</title>
      <link>https://www.agilewalker.com/how-to-use-grow-model/</link>
      <pubDate>Tue, 28 Apr 2020 14:13:58 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/how-to-use-grow-model/</guid>
      <description>GROW模型是教练过程中提问的方式，代表有目的决策的四个组成部分。 用首字母缩写，GROW代表：
公众号原文：运用GROW模型，提问的艺术，敏捷教练基本功
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」让产品的业务更清晰，在敏捷文化中，影响地图的艺术</title>
      <link>https://www.agilewalker.com/v-impact-mapping/</link>
      <pubDate>Tue, 21 Apr 2020 11:59:12 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-impact-mapping/</guid>
      <description>让产品的业务更清晰，在敏捷文化中，影响地图的艺术。另一个很棒的视频在这里。
[https://player.youku.com/embed/XNDY0MjU0MTg0NA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>「视频」15分钟，用产品负责人的视角看Scrum敏捷软件开发</title>
      <link>https://www.agilewalker.com/agile-product-ownership/</link>
      <pubDate>Sat, 18 Apr 2020 08:53:26 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-product-ownership/</guid>
      <description>15分钟，用产品负责人的视角看Scrum敏捷软件开发
[https://player.youku.com/embed/XNDYzNzY5NTc0MA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷Scrum开发7大事件之2：团队Sprint产能规划</title>
      <link>https://www.agilewalker.com/sprint-capactiy-planning/</link>
      <pubDate>Thu, 16 Apr 2020 12:49:55 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-capactiy-planning/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解关于产能规划的话题：
&amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 产能规划Capacity Planning，是指意估算和计算敏捷团队在每个迭代中能贡献的有效工作能力。 有两种广泛使用的产能测量单位，在我的其他文章中有时会写成“能力规划”。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 1. &amp;lt;strong&amp;gt;故事点&amp;lt;/strong&amp;gt;，这是一种计算速度的简单方法（最后6到10个Sprint接受的故事点的平均值）。 并针对下一个Sprint提交与速度匹配的用户故事。我个人建议另一种方法，用小时数进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 2. &amp;lt;strong&amp;gt;小时&amp;lt;/strong&amp;gt;，我个人建议按小时进行产能规划。 在本文中，只以这种方式进行产能规划。 它提供了更好的可见性和准确性。 还有许多其他好处，将在本文后面讨论。&amp;lt;br /&amp;gt; 这里我们通过计算下个Sprint的可用时间。计算敏捷团队的可投入的生产力（PO和SM除外）。&amp;lt;br /&amp;gt; 将详细讨论谁来计算它，在本文中考虑哪些因素。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 这种技术非常容易计算和规划团队产能。 下面逐步说明，可以通过维护Excel来进行产能规划。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid vc_row-o-equal-height vc_row-o-content-middle vc_row-flex&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; &amp;lt;span class=&amp;quot;dt-highlight&amp;quot;&amp;gt;Step 1 – 计算Sprint持续时间&amp;lt;/span&amp;gt; &amp;lt;/h4&amp;gt; &amp;lt;p&amp;gt; 以天为单位计算Sprint持续时间，确定Sprint的开始日期和结束日期。 为了说明这一点，进行了为期2周的Sprint，从星期三开始，到星期二结束。 正在为Sprint 2进行产能规划。&amp;lt;br /&amp;gt; 下图代表10天的2周Sprint –日历。 分散在三个物理日历周中。 在本文的其余部分中，将用这个颜色说明来解释，其中&amp;lt;br /&amp;gt; 黄色=上一个Sprint&amp;lt;br /&amp;gt; 绿色=当前的Sprint&amp;lt;br /&amp;gt; 蓝色=未来Sprint &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-large wp-image-1049&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>敏捷开发框架Scrum工件-冲刺/迭代燃尽图（上篇）</title>
      <link>https://www.agilewalker.com/sprint-burndown-chart/</link>
      <pubDate>Tue, 14 Apr 2020 12:44:21 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-burndown-chart/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解有关燃尽图的详细内容（上篇为主题1-3）：
&amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1004&amp;quot; src=&amp;quot;https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1.jpg&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;760&amp;quot; height=&amp;quot;428&amp;quot; srcset=&amp;quot;https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1.jpg 1024w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-300x169.jpg 300w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-768x432.jpg 768w, https://www.agilewalker.com/wp-content/uploads/2020/04/Insecption_Burndown-1024x576-1-355x199.jpg 355w&amp;quot; sizes=&amp;quot;(max-width: 760px) 100vw, 760px&amp;quot; /&amp;gt;&amp;lt;/figure&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; &amp;amp;nbsp; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 如果你查看上面的图片，会注意到团队有产品待办事项，在处理sprint待办事项期间，团队提交几个用户故事，然后团队成员分配了任务，对于每个任务，每个成员消耗的是估计的工作时间。到目前为止，已经为冲刺提交了一些故事，每个故事都有一些任务，这些任务的估计时间是小时，并且每个任务都分配给了胜任的团队成员。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; 如果总计工作时间，则大约为110小时。假设团队的能力为130小时。&amp;lt;br /&amp;gt; 让我们看一下sprint的另一个重要方面，有一个sprint起始日期为12月10日，它的结束日期为12月21日，这意味着是两个星期的sprint，并且sprint的持续时间为10天。&amp;lt;br /&amp;gt; 因此，从所有这些信息中，开始绘制燃尽图 &amp;lt;/p&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;Total Days of the sprint = 10 days&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;Total committed &amp;amp; estimated task hours for the team = 110 Hours&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果将总小时数除以总天数平均值（110/10）= 11小时。&amp;lt;br /&amp;gt; 也就是说，如果团队每天完成11个小时的工作，那么在冲刺的最后一天结束时，团队将能够完成他们已经完成的所有工作。&amp;lt;br /&amp;gt; 请参考下面的图片，然后按照说明进行操作以更好地理解它。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1003&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>敏捷开发框架Scrum工件-冲刺/迭代燃尽图（下篇）</title>
      <link>https://www.agilewalker.com/sprint-burndown-chart-2/</link>
      <pubDate>Tue, 14 Apr 2020 12:06:05 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/sprint-burndown-chart-2/</guid>
      <description>《系统之美》
前言，在本文中，我们将从以下几点了解有关燃尽图的详细内容（下篇为主题4-6）：
（延续上篇主题1-3 敏捷开发框架Scrum工件-冲刺/迭代燃尽图（上篇））
&amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在这种情景下，团队需要查看当前的燃尽图和实际线。 截至特定日期，它们还有多少富余的工作时间。 可能有3种选项： &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队可以直接同意将故事添加到当前的sprint中&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果实际线结束于理想线或能力线以下，则意味着有富余时间可用于在冲刺时间内完成更多工作。&amp;lt;br /&amp;gt; 留意测试人员个人能力（工作时间），即使整个团队富余很多工作时间，如果单个测试人员级别也没有太多富余工作时间，在这种情况下，可以参考下面的选项2。&amp;lt;br /&amp;gt; 因此，先要看燃尽的情况，如果说可以提交更多故事，考虑其他限制因素再做出决定。 &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;2&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队可以要求PO取消一些低优先级的故事，这意味着从当前的sprint中移除并将其放回待办事项&amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果团队发现燃尽实际线接近能力线或理想线，则团队检查已提交但尚未开始开发的相似大小故事，请产品负责人同意减少这些故事中的任何（ 一个或多个），替换为新的关键故事。&amp;lt;br /&amp;gt; 留意冲刺中剩余的时间，新故事所需的技能以及这些熟练的团队成员的富余时间。 &amp;lt;/p&amp;gt; &amp;lt;ol start=&amp;quot;3&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;strong&amp;gt;团队认为在sprint范围内添加新故事是有风险的，建议不要更改范围。 &amp;lt;/strong&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;p&amp;gt; 如果团队离冲刺结束只有两到三天，实际线非常稳定，有些故事已完成，有些在进行中。 在这种情况下，接受新故事可能会有风险，团队可以向产品负责人解释并建议到下一个冲刺将优先完成新故事，并尽快将其部署。&amp;lt;br /&amp;gt; 不过即使是冲刺的最后几天，如果当前的所有故事都已完成并被验收，实际线已经触地。 团队可以快速估算并提交新故事。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; 情景2：其中一位团队成员需要连续几天请急诊病假。 &amp;lt;/h4&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在这种情况下，请查看燃尽图并分析实际线终点的位置。 如果终点在理想线以下很远，可以接受计划外的请假。在个人级别上，还要查看该成员有待处理的工作总小时数，以及冲刺剩余的总天数。查看同一技能的其他成员是否具有足够的富余时间来弥补差距。&amp;lt;br /&amp;gt; 如果团队认为有可能不能完成所有已提交的故事，团队就应立即通知PO，达成共识，例如确定优先级较低的故事等。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h4&amp;gt; 情景3：在sprint测试团队的第二周，提出了太多的bug，需要在sprint持续时间内解决。 &amp;lt;/h4&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 如果测试人员在测试用户故事时发现太多缺陷，这让开发看起来不够成熟，但还是会发生。查看实线和能力线的差异。团队多大程度上能够轻松修复缺陷以及正在进行的开发工作，测试人员需要重新测试重要的修复以及已完成的待测试的工作。&amp;lt;br /&amp;gt; 为了完成所有修复，工作燃尽图应具有足够的富余工作时间，这意味着实际线的末端应比能力线的末端低得多。如果不是，在进行下一个冲刺时，在能力规划期间保留足够的缓冲区需要重点考虑。&amp;lt;br /&amp;gt; 查看关于缺陷关闭的完成（DOD）定义，如果说所有P1和P2的缺陷必须关闭才能认为故事完成。查看P1 / P2错误的数量，评估修复它们的额外时间以及燃尽图中可用的富余时间。&amp;lt;br /&amp;gt; 考虑与产品负责人沟通，应对最坏的情况，确定优先级最低和最关键的用户故事。&amp;lt;br /&amp;gt; 燃尽图是决定现在是否应该与产品负责人沟通的第一步。或者需要进一步细化可能的其他约束。&amp;lt;br /&amp;gt; 工作中可能还有许多其他情况，燃尽图有助于针对不同情况做出决策。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_single_image wpb_content_element vc_align_center&amp;quot;&amp;gt; &amp;lt;figure class=&amp;quot;wpb_wrapper vc_figure photoswipe-item photoswipe-wrapper&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;alignnone size-large wp-image-1011&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷开发Scrum实践 – 分解用户故事，让产品需求更易落地</title>
      <link>https://www.agilewalker.com/v-user-story-splitting/</link>
      <pubDate>Tue, 14 Apr 2020 03:52:25 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/v-user-story-splitting/</guid>
      <description>敏捷开发Scrum实践 - 分解用户故事，让产品需求更易落地
[https://player.youku.com/embed/XNDYwMzEwNjI1Ng==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的内容与君分享。</description>
    </item>
    
    <item>
      <title>敏捷Scrum开发7大事件之1：产品待办列表优先级排序</title>
      <link>https://www.agilewalker.com/product-backlog-prioritization/</link>
      <pubDate>Mon, 13 Apr 2020 08:44:13 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/product-backlog-prioritization/</guid>
      <description>&amp;lt;blockquote&amp;gt; &amp;lt;p class=&amp;quot;p1&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;“&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s2&amp;quot;&amp;gt;我们不必改变任何人的价值观，但必须让系统围绕真正的价值观运作&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;” --&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;s1&amp;quot;&amp;gt;《系统之美》&amp;lt;/span&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;/blockquote&amp;gt; &amp;lt;h2&amp;gt; 为什么我们需要优先级排序？ &amp;lt;/h2&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;p&amp;gt; 在日常生活中我们都会进行优先级排序，因为我们用有限时间去执行每组工作任务，这就是为什么我们选择最重要的先执行然后再执行次重要的原因。同样，我们在软件开发中对功能或任务进行优先级排序，因为有总有些功能比其他功能更重要。 &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;h2&amp;gt; 什么是产品待办事项优先级排序？ &amp;lt;/h2&amp;gt; &amp;lt;div class=&amp;quot;uvc-sub-heading ult-responsive&amp;quot; data-ultimate-target=&amp;quot;.uvc-heading.ultimate-heading-17775e9145c15b93f .uvc-sub-heading &amp;quot; data-responsive-json-new=&amp;quot;{&amp;amp;quot;font-size&amp;amp;quot;:&amp;amp;quot;desktop:14px;&amp;amp;quot;,&amp;amp;quot;line-height&amp;amp;quot;:&amp;amp;quot;&amp;amp;quot;}&amp;quot;&amp;gt; 产品待办事项优先级排序是敏捷软件开发中最重要的工作之一。 如果利益相关者，客户或企业尽早获得最有价值的功能，那么任何项目都是成功的。 可以通过有效地对需求进行优先级处理（用户故事）来实现。&amp;lt;br /&amp;gt; 待办事项优先级排序被用来组织产品待办事项条目（用户故事/缺陷/探针等），以制定其开发和部署的顺序。&amp;lt;br /&amp;gt; Scrum团队遵循此顺序以在梳理或冲刺计划期间选择产品待办事项条目。 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;strong&amp;gt;待办事项优先级排序的优势&amp;lt;/strong&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;div class=&amp;quot;dt-fancy-title&amp;quot;&amp;gt; 商业利益&amp;lt;br /&amp;gt; -最快的投资回报&amp;lt;br /&amp;gt; -客户或业务满意度&amp;lt;br /&amp;gt; -更好地管理依赖项&amp;lt;br /&amp;gt; -最小化风险&amp;lt;br /&amp;gt; -关注价值驱动的开发 &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;dt-fancy-title&amp;quot;&amp;gt; 对Scrum团队的优势&amp;lt;br /&amp;gt; -通过选择的故事进行有效的梳理&amp;lt;br /&amp;gt; -通过选择的故事进行有效的Sprint计划&amp;lt;br /&amp;gt; -如果有富余产能，更容易看出增加哪些故事到当前冲刺更合适&amp;lt;br /&amp;gt; -如果由于团队成员缺席，紧急生产修复等导致产能下降，更容易看出从当前冲刺需要减少哪些故事 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-6&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_row wpb_row vc_inner vc_row-fluid&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_column vc_column_container vc_col-sm-12&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_column-inner&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;vc_empty_space&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;wpb_text_column wpb_content_element &amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;wpb_wrapper&amp;quot;&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;strong&amp;gt;优先级排序中对待不同的待办事项条目&amp;lt;/strong&amp;gt; &amp;lt;/h5&amp;gt; &amp;lt;p&amp;gt; 在优先级排序期间，产品事项中的所有条目都得到同等对待，包括缺陷或错误，新功能，增强功能，探针。 &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;img class=&amp;quot;alignnone size-full wp-image-976&amp;quot; src=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>「视频」敏捷教练的工作是什么？让我们总览一下</title>
      <link>https://www.agilewalker.com/agile-coach-overview/</link>
      <pubDate>Sun, 12 Apr 2020 10:58:07 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-overview/</guid>
      <description>敏捷教练的工作是什么？让我们总览一下
[https://player.youku.com/embed/XNDYyOTE3OTMyNA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>「视频」12分钟，立即就懂，敏捷教练工作的职业发展路径</title>
      <link>https://www.agilewalker.com/agile-coach-development-path/</link>
      <pubDate>Sun, 12 Apr 2020 10:51:50 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-development-path/</guid>
      <description>12分钟，立即就懂，敏捷教练工作的职业发展路径
[https://player.youku.com/embed/XNDYyOTE3NDA2MA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>「视频」值得收藏，敏捷开发，解读冲刺燃尽图，及早发现问题，及早解决</title>
      <link>https://www.agilewalker.com/burn-down-chart/</link>
      <pubDate>Sun, 12 Apr 2020 10:46:36 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/burn-down-chart/</guid>
      <description>值得收藏，敏捷开发，解读冲刺燃尽图，及早发现问题，及早解决
[https://player.youku.com/embed/XNDYxMDk2Mjk0OA==]
—
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。会有更多更及时的文章和视频。</description>
    </item>
    
    <item>
      <title>与大家分享一些“敏捷教练”的定义</title>
      <link>https://www.agilewalker.com/agile-coach-defines/</link>
      <pubDate>Wed, 04 Mar 2020 02:44:04 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/agile-coach-defines/</guid>
      <description>引用来自网络的关于与敏捷教练定义，大家应该会有个基本一致的感受：
参考：
让你用3分钟简单说敏捷教练能力模型
敏捷教练日常工作中的检查列表
-&amp;ndash;
END
希望能在评论区学习到大家的经验和想法~
如果对相关内容感兴趣可以关注我的公众号：捷伴行Agile。公众号与博客持续同步更新。</description>
    </item>
    
    <item>
      <title>项目经理在成为PMO负责人过程中需要作出的改变</title>
      <link>https://www.agilewalker.com/howtopmo/</link>
      <pubDate>Mon, 30 Dec 2019 03:25:23 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/howtopmo/</guid>
      <description>Less Tactical As a former US Army soldier, being less tactical was never a goal. The more tactics you had, the better you could execute on the overall military strategy. But becoming the PMO Director is more like becoming a Division Commander. You will be an integral part of the strategic portion of the battle. In order to become a PMO Leader, you need to think and communicate more strategically. You need to get out of the weeds, and out of the project plans, and into the business strategy that all of the projects are supporting.</description>
    </item>
    
    <item>
      <title>挣值管理</title>
      <link>https://www.agilewalker.com/%E6%8C%A3%E5%80%BC%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 23 Nov 2019 06:24:40 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/%E6%8C%A3%E5%80%BC%E7%AE%A1%E7%90%86/</guid>
      <description>挣值管理（Earned Value Management, EVM）是项目管理里面成本管理部分较为重点的知识点，但是也可以用来综合考察项目范围和进度绩效，经常需要做相关计算。本文试图来整理一下关于挣值管理的一些概念和知识点。
一、 基本概念PV，EV，AC和BAC 首先是四个基本概念：
计划价值（Planned Value, PV），截止到某时间点计划要完成工作量的价值，也就是计划要做多少事；
挣值（Earned Value, EV），截止到某时间点实际已经完成工作量的价值，也就是实际做了多少事；
实际成本（Actual Cost, AC），截止到某时间点实际已经发生的成本，也就是实际花了多少钱；
完工预算（Budget At Completion, BAC），对完成该项目的计划预算，也就是完成整个项目计划多少预算；
举个例子来更通俗地说明一下以上的几个概念。假设我们现在要做一个项目，就是砌一堵长度为100米的围墙，为了方便计算我们假设总的预算是100元每米，共100*100=10000元，我们还计划项目工时10天（每天砌墙10米）来完成这个项目。
为了顺利完成该项目在项目中途我们需要对项目绩效做监控，于是我们在第四天工作结束的时候对该项目进行绩效评估。本来第四天工作结束的时候我们计划是要完成40米的任务的（因为每天计划是10米），这个40米的工作量的价值是40米100元/米 = 4000元，这个4000元就是我们的计划价值PV（计划做多少事）；实际完成了多少呢？我们发现第四天工作结束实际才完成了30米砌墙任务，这个30米围墙对应的价值是30米100元/米=3000元，这个3000元就是我们的挣值EV（实际做了多少事），也就是我们在第四天结束就完成了3000元的工作量；到第四天结束这个时间点我们实际却花了5000元，这个5000元就是我们的实际成本AC（实际花了多少钱）；总的预算10000元就是我们的完工预算BAC；总结一下就是一共计划10000元10天完成这个项目，在第四天结束的时候去检查项目绩效，发现到这个时间点为止本来应该完成4000元的项目工作量（PV），结果只完成了3000元的工作（EV），却花了5000元的成本（AC）。为了更直观表示这几个概念，可以用图表示这几个概念如下：
图中红、绿、橘黄色线分别表示AC、PV和EV，红线AC表示截止到某个时点花了多少钱（成本），斜率表示花钱的速度；绿线PV表示截止某个时点项目计划花的钱和做的项目量；橘黄色线EV表示截止到某个时点做了多少事（多少钱的工作），斜率表示做事的速度；上图我们可以看出花钱的速度比计划的要快（红线比绿线更陡，斜率更大），而做事的速度却比计划的要慢（橘黄色线比绿线更缓，斜率更小），项目绩效很不好。
二、 绩效指标CV，SV，CPI和SPI 好了，大致理解了上面PV, EV, AC, BAC等几个基本概念之后，接着我们来了解CV，SV，CPI，SPI这几个成本和进度绩效指标。
成本偏差（Cost Variance, CV），截止到某时点发生的实际成本与计划成本的偏差，CV=EV-AC
进度偏差（Schedule Variance, SV），截止到某时点的实际进度与计划进度的偏差，SV=EV-PV
成本绩效指数（Cost Performance Index, CPI），截止到某时点衡量成本绩效的一种指标，也就是实际每花一元钱，完成做了多少钱的事（花钱的效率），CPI=EV/AC
进度绩效指数（Schedule Performance Index, SPI），截止到某时点衡量进度绩效的一种指标，也就是实际完成的工作量与计划完成工作量之比，SPI=EV/PV
以前面砌墙的项目为例子，第四天结束去评估项目绩效的时候，本来计划完成40米4000元的工作量（PV），结果只砌了30米只完成了3000元的工作量（EV），那么：
进度偏差SV=EV-PV=3000-4000=-1000元，意思是相比计划我们的进度落后1000元的工作量；（负值表示进度落后，正值表示进度超前）
进度绩效指数SPI=EV/PV=3000/4000=0.75，说明当前只完成了计划任务量的75%的工作；
成本绩效的检查结果是：只完成3000元的工作量（EV）实际却花了5000元（AC）。这个时候：
成本偏差CV=EV-AC=3000-5000=-2000元，说明现在成本超支了2000元（负值表示超支，正值表示节约）；
成本绩效指数CPI=EV/AC=3000/5000=0.6，意思是前面4天我们实际花了5000元，但是只做了3000元的工作，相当于前面4天我们每花1元钱，只做了0.6元的事；在这儿要强调一下这个成本绩效指数CPI值，因为后面很多指标都和这个CPI息息相关。对于CPI的计算方法和意义一定要非常熟悉，CPI的意义是每花1元钱做了多少钱的事（花钱的效率），CPI为0.6的意思就是每花1元钱只做了0.6元的事，所以CPI的计算方法是做了的事（EV）除了花了的钱（AC）。不光会算CPI，大家还要能举一反三，比如知道CPI和做了多少事，也要会算花了多少钱，那就是花了多少钱=做了多少事/CPI，后面相关指标的计算会经常用到这个公式。
成本偏差CV和进度偏差SV在图中的直观表示如下：
图中可以看到，实际上成本偏差CV就是AC与EV的差值，而进度偏差SV是PV与EV的差值，请注意都是和挣值EV进行对比，而且做减法的时候EV都要放在前面。SPI和CPI没法很直观在图中表示，实际上就是斜率的比值，SPI是EV与PV斜率的比值，CPI是EV与AC斜率的比值。
三、 预测指标ETC，EAC，TCPI和VAC 这个时候大家应该基本了解CV, SV, CPI, SPI这几个绩效指标的含义了。在这个基础上，最后我们再来了解剩下的4个略显晦涩的预测指标：
完工尚需估算（Estimate To Completion, ETC），在某个时点，预测完成剩余的工作还需要多少成本；这个时候算预测数据的时候就要分情况了，主要取决于我们以后的工作花钱的效率跟以前比是否会发生变化？也就是考察以后工作的CPI的值会不会发生变化。根据剩余部分工作CPI的变化情况，有几种计算方法：
如果还是以当前的成本绩效完成剩余的工作，则 ETC=(BAC-EV)/CPI，也就是剩余的工作量除以成本绩效指数； 如果以计划的成本绩效（其实就是1）完成剩余的工作，则ETC=BAC-EV，也就是剩余的工作量，实际上也是用第一种情况那个公式； 如果进度绩效指标SPI也会影响完成剩余工作的成本，意思是如果严格规定我们必须要在计划的截止时间之前完成项目，那么可能就还需要额外的成本来赶工进度，这个时候就需要同时考虑CPI和SPI对于剩余工作的影响，一般计算公式则为ETC=(BAC-EV)/(CPISPI)，也就是剩余的工作量除以成本绩效指数与进度绩效指数的乘积；其中CPISPI又叫“关键比率”(Critical Ratio, CR); 完工估算（Estimate At Completion, EAC），在某个时点，预测完成整个项目需要的成本，当然就是实际已经花掉的成本加上前面那个完工尚需估算ETC，EAC=AC+ETC；如果剩余工作还是以当前成本绩效指数来完成，那么也可以这么计算EAC=BAC/CPI，这个公式也好理解，其实就是整个项目工作量除以成本绩效指数；完工估算EAC实际上就是预测项目完工时候的实际成本AC。</description>
    </item>
    
    <item>
      <title>NPV和IRR</title>
      <link>https://www.agilewalker.com/35-2/</link>
      <pubDate>Sat, 23 Nov 2019 06:10:55 +0000</pubDate>
      
      <guid>https://www.agilewalker.com/35-2/</guid>
      <description>净现值（Net Present Value, NPV）：说的是把未来期望收入的钱换算成现在的钱（跟算利息类似，不过是反向运算，例如明年你会赚110元，假设贴现率是10%，那么换算成现在的钱也就是110/(1+10%)=100元，也就是说你明年赚到的110元就相当于现在100元的购买率，反过来就是你现在100元，利息10%，明年你就变成了110元，往后的年份一样算法），然后累加再减去投资成本得到累计净现值。累计净现值越大越好，理论上净现&amp;gt;0项目就可行，表示有赚头。
举例：假设两个项目A和B，都是投资10万元，贴现率10%，预期收入和净现值如下。（假设项目周期都只有5年，单位：万）
从上面的例子可以看出，项目B的净现值更高更值得投资，原因是虽然A和B的5年总收入如果不考虑货币时间价值加起来是相等的都是18.52万，但是由于项目B的收入来得比较提前，所以算出来项目B的净现值高，更值得投资。从这儿可以看到净现值主要算的是刨去货币贬值影响最后还能赚多少钱。
内部报酬率（Internal
Rate of Return, IRR）：说的是累计净现值为0的时候的贴现率。这个内部报酬率的意思就是项目能承受的最大货币贬值的比率。（赢利空间，抗风险能力。）还是以上面那个例子为例，假设现在贴现率变为20%，现在计算项目A和项目B的净现值如下：
贴现率20%时项目A和项目B的净现值
可以看到项目A净现值这时为负数，而项目B净现值还是正数，这说明项目A的内部报酬率（IRR）将小于20%，而项目B的内部报酬率大于20%，因为内部报酬率是NPV为0时候的贴现率。我们最后通过计算得出当贴现率为18.45%时，项目A的NPV刚好等于0，如下表所示：
贴现率18.45%时项目A和项目B的净现值
这个时候我们就说项目A的内部报酬率（IRR）为18.45%。
同理经过计算当贴现率为23.94%时，项目B的NPV刚好等于0，如下表所示：
贴现率23.94%时项目A和项目B的净现值
这个时候我们就说项目B的内部报酬率（IRR）为23.94%。
**总结：**从上面我们可以看到，净现值（NPV）说的是在考虑货币时间价值（通货膨胀贬值）下我们在项目周期内能赚多少钱，内部报酬率（IRR）说的是在考虑货币时间价值（通货膨胀贬值）下我们在项目周期内我们能承受的最大货币贬值率有多少，更通俗地说就是假设我们去贷款来投资这个项目，所能承受的年最大利率是多少。比如某项目的内部报酬率IRR是20%，说的是该项目我们最大能承受每年20%的货币贬值率，也就是如果我们去贷款投资该项目所能承受的最大贷款年利率为20%，在贷款年利率是20%的时候投资该项目刚好保本。当实际货币贬值率只有5%时（贷款利率是5%时），那么剩下的15%就将是我们的利润，虽然看上去说的是失误空间（最多我可以失误多少还能保本），抗风险能力，实际上也可以认为说的是利润空间，盈利能力。就像你去参加考试，60分及格，你的真实水平是90分，那么你的状态不好失误空间将有30分，就算你失误掉30分你仍然能及格，这个30分换算成比率就是你的内部报酬率（IRR），你的真实水平只有65分，那么你的失误空间将只有5分，稍微失误一些你将会不及格，此时你的内部报酬率就只有5分。虽然算的是内部报酬率，实际上也说明你的真实水平（90还是65）到底怎么样。
在实际项目投资中，NPV说的是具体数值，而IRR是一个比率，如果要比较我觉得IRR肯定好点因为是个相对值，单纯NPV只是个绝对值，没有考虑投资额的大小，只有再同时考虑投资额才能更充分体现项目的盈利能力，毕竟投资10万NPV是5万和投资100万NPV也是5万两个项目的盈利能力是不一样的。
链接：https://www.zhihu.com/question/27277841/answer/307970184
来源：知乎</description>
    </item>
    
  </channel>
</rss>
